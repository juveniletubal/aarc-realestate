((e, t) => {
  "object" == typeof exports && "undefined" != typeof module
    ? (module.exports = t())
    : "function" == typeof define && define.amd
    ? define(t)
    : ((e =
        "undefined" != typeof globalThis ? globalThis : e || self).bootstrap =
        t());
})(this, function () {
  let s = new Map(),
    N = {
      set(e, t, i) {
        s.has(e) || s.set(e, new Map());
        e = s.get(e);
        e.has(t) || 0 === e.size
          ? e.set(t, i)
          : console.error(
              `Bootstrap doesn't allow more than one instance per element. Bound instance: ${
                Array.from(e.keys())[0]
              }.`
            );
      },
      get: (e, t) => (s.has(e) && s.get(e).get(t)) || null,
      remove(e, t) {
        var i;
        s.has(e) && ((i = s.get(e)).delete(t), 0 === i.size) && s.delete(e);
      },
    },
    j = "transitionend",
    H = (e) =>
      (e =
        e && window.CSS && window.CSS.escape
          ? e.replace(/#([^\s"#']+)/g, (e, t) => "#" + CSS.escape(t))
          : e),
    q = (e) => {
      e.dispatchEvent(new Event(j));
    },
    n = (e) =>
      !(!e || "object" != typeof e) &&
      void 0 !== (e = void 0 !== e.jquery ? e[0] : e).nodeType,
    a = (e) =>
      n(e)
        ? e.jquery
          ? e[0]
          : e
        : "string" == typeof e && 0 < e.length
        ? document.querySelector(H(e))
        : null,
    r = (t) => {
      if (!n(t) || 0 === t.getClientRects().length) return !1;
      let e = "visible" === getComputedStyle(t).getPropertyValue("visibility"),
        i = t.closest("details:not([open])");
      if (i && i !== t) {
        let e = t.closest("summary");
        if (e && e.parentNode !== i) return !1;
        if (null === e) return !1;
      }
      return e;
    },
    o = (e) =>
      !e ||
      e.nodeType !== Node.ELEMENT_NODE ||
      !!e.classList.contains("disabled") ||
      (void 0 !== e.disabled
        ? e.disabled
        : e.hasAttribute("disabled") && "false" !== e.getAttribute("disabled")),
    B = (e) => {
      var t;
      return document.documentElement.attachShadow
        ? "function" == typeof e.getRootNode
          ? (t = e.getRootNode()) instanceof ShadowRoot
            ? t
            : null
          : e instanceof ShadowRoot
          ? e
          : e.parentNode
          ? B(e.parentNode)
          : null
        : null;
    },
    F = () => {},
    R = (e) => {
      e.offsetHeight;
    },
    W = () =>
      window.jQuery && !document.body.hasAttribute("data-bs-no-jquery")
        ? window.jQuery
        : null,
    $ = [],
    l = () => "rtl" === document.documentElement.dir,
    e = (s) => {
      var e = () => {
        let i = W();
        if (i) {
          let e = s.NAME,
            t = i.fn[e];
          (i.fn[e] = s.jQueryInterface),
            (i.fn[e].Constructor = s),
            (i.fn[e].noConflict = () => ((i.fn[e] = t), s.jQueryInterface));
        }
      };
      "loading" === document.readyState
        ? ($.length ||
            document.addEventListener("DOMContentLoaded", () => {
              for (var e of $) e();
            }),
          $.push(e))
        : e();
    },
    d = (e, t = [], i = e) => ("function" == typeof e ? e.call(...t) : i),
    G = (s, a, e = !0) => {
      if (e) {
        e =
          (() => {
            if (!a) return 0;
            let { transitionDuration: e, transitionDelay: t } =
              window.getComputedStyle(a);
            var i = Number.parseFloat(e),
              s = Number.parseFloat(t);
            return i || s
              ? ((e = e.split(",")[0]),
                (t = t.split(",")[0]),
                1e3 * (Number.parseFloat(e) + Number.parseFloat(t)))
              : 0;
          })() + 5;
        let t = !1,
          i = ({ target: e }) => {
            e === a && ((t = !0), a.removeEventListener(j, i), d(s));
          };
        a.addEventListener(j, i),
          setTimeout(() => {
            t || q(a);
          }, e);
      } else d(s);
    },
    X = (e, t, i, s) => {
      var a = e.length;
      let r = e.indexOf(t);
      return -1 === r
        ? !i && s
          ? e[a - 1]
          : e[0]
        : ((r += i ? 1 : -1),
          s && (r = (r + a) % a),
          e[Math.max(0, Math.min(r, a - 1))]);
    },
    Y = /[^.]*(?=\..*)\.|.*/,
    V = /\..*/,
    U = /::\d+$/,
    K = {},
    Q = 1,
    Z = { mouseenter: "mouseover", mouseleave: "mouseout" },
    J = new Set([
      "click",
      "dblclick",
      "mouseup",
      "mousedown",
      "contextmenu",
      "mousewheel",
      "DOMMouseScroll",
      "mouseover",
      "mouseout",
      "mousemove",
      "selectstart",
      "selectend",
      "keydown",
      "keypress",
      "keyup",
      "orientationchange",
      "touchstart",
      "touchmove",
      "touchend",
      "touchcancel",
      "pointerdown",
      "pointermove",
      "pointerup",
      "pointerleave",
      "pointercancel",
      "gesturestart",
      "gesturechange",
      "gestureend",
      "focus",
      "blur",
      "change",
      "reset",
      "select",
      "submit",
      "focusin",
      "focusout",
      "load",
      "unload",
      "beforeunload",
      "resize",
      "move",
      "DOMContentLoaded",
      "readystatechange",
      "error",
      "abort",
      "scroll",
    ]);
  function ee(e, t) {
    return (t && t + "::" + Q++) || e.uidEvent || Q++;
  }
  function te(e) {
    var t = ee(e);
    return (e.uidEvent = t), (K[t] = K[t] || {}), K[t];
  }
  function ie(e, t, i = null) {
    return Object.values(e).find(
      (e) => e.callable === t && e.delegationSelector === i
    );
  }
  function se(e, t, i) {
    var s = "string" == typeof t,
      t = (!s && t) || i;
    let a = ne(e);
    return [s, t, (a = J.has(a) ? a : e)];
  }
  function ae(s, a, r, n, o) {
    if ("string" == typeof a && s) {
      let [e, t, i] = se(a, r, n);
      if (a in Z) {
        let e = (t) =>
          function (e) {
            if (
              !e.relatedTarget ||
              (e.relatedTarget !== e.delegateTarget &&
                !e.delegateTarget.contains(e.relatedTarget))
            )
              return t.call(this, e);
          };
        t = e(t);
      }
      var n = te(s),
        n = n[i] || (n[i] = {}),
        l = ie(n, t, e ? r : null);
      if (l) return (l.oneOff = l.oneOff && o);
      var d,
        c,
        p,
        u,
        h,
        l = ee(t, a.replace(Y, "")),
        a = e
          ? ((p = s),
            (u = r),
            (h = t),
            function t(i) {
              var s = p.querySelectorAll(u);
              for (let e = i.target; e && e !== this; e = e.parentNode)
                for (var a of s)
                  if (a === e)
                    return (
                      oe(i, { delegateTarget: e }),
                      t.oneOff && m.off(p, i.type, u, h),
                      h.apply(e, [i])
                    );
            })
          : ((d = s),
            (c = t),
            function e(t) {
              return (
                oe(t, { delegateTarget: d }),
                e.oneOff && m.off(d, t.type, c),
                c.apply(d, [t])
              );
            });
      (a.delegationSelector = e ? r : null),
        (a.callable = t),
        (a.oneOff = o),
        (n[(a.uidEvent = l)] = a),
        s.addEventListener(i, a, e);
    }
  }
  function re(e, t, i, s, a) {
    s = ie(t[i], s, a);
    s && (e.removeEventListener(i, s, Boolean(a)), delete t[i][s.uidEvent]);
  }
  function ne(e) {
    return (e = e.replace(V, "")), Z[e] || e;
  }
  let m = {
    on(e, t, i, s) {
      ae(e, t, i, s, !1);
    },
    one(e, t, i, s) {
      ae(e, t, i, s, !0);
    },
    off(o, l, d, c) {
      if ("string" == typeof l && o) {
        let [e, t, s] = se(l, d, c),
          a = s !== l,
          r = te(o),
          n = r[s] || {},
          i = l.startsWith(".");
        if (void 0 === t) {
          if (i)
            for (let e of Object.keys(r)) {
              p = void 0;
              u = void 0;
              h = void 0;
              m = void 0;
              v = void 0;
              f = void 0;
              g = void 0;
              var p = o;
              var u = r;
              var h = e;
              var m = l.slice(1);
              var f,
                g,
                v = u[h] || {};
              for ([f, g] of Object.entries(v))
                f.includes(m) && re(p, u, h, g.callable, g.delegationSelector);
            }
          for (let [t, i] of Object.entries(n)) {
            let e = t.replace(U, "");
            (a && !l.includes(e)) ||
              re(o, r, s, i.callable, i.delegationSelector);
          }
        } else Object.keys(n).length && re(o, r, s, t, e ? d : null);
      }
    },
    trigger(e, t, i) {
      if ("string" != typeof t || !e) return null;
      var s = W();
      let a = null,
        r = !0,
        n = !0,
        o = !1;
      t !== ne(t) &&
        s &&
        ((a = s.Event(t, i)),
        s(e).trigger(a),
        (r = !a.isPropagationStopped()),
        (n = !a.isImmediatePropagationStopped()),
        (o = a.isDefaultPrevented()));
      s = oe(new Event(t, { bubbles: r, cancelable: !0 }), i);
      return (
        o && s.preventDefault(),
        n && e.dispatchEvent(s),
        s.defaultPrevented && a && a.preventDefault(),
        s
      );
    },
  };
  function oe(i, s = {}) {
    for (let [e, t] of Object.entries(s))
      try {
        i[e] = t;
      } catch (s) {
        Object.defineProperty(i, e, { configurable: !0, get: () => t });
      }
    return i;
  }
  function le(t) {
    if ("true" === t) return !0;
    if ("false" === t) return !1;
    if (t === Number(t).toString()) return Number(t);
    if ("" === t || "null" === t) return null;
    if ("string" != typeof t) return t;
    try {
      return JSON.parse(decodeURIComponent(t));
    } catch (e) {
      return t;
    }
  }
  function de(e) {
    return e.replace(/[A-Z]/g, (e) => "-" + e.toLowerCase());
  }
  let c = {
    setDataAttribute(e, t, i) {
      e.setAttribute("data-bs-" + de(t), i);
    },
    removeDataAttribute(e, t) {
      e.removeAttribute("data-bs-" + de(t));
    },
    getDataAttributes(t) {
      if (!t) return {};
      var i,
        s = {};
      for (i of Object.keys(t.dataset).filter(
        (e) => e.startsWith("bs") && !e.startsWith("bsConfig")
      )) {
        let e = i.replace(/^bs/, "");
        s[(e = e.charAt(0).toLowerCase() + e.slice(1))] = le(t.dataset[i]);
      }
      return s;
    },
    getDataAttribute: (e, t) => le(e.getAttribute("data-bs-" + de(t))),
  };
  class ce {
    static get Default() {
      return {};
    }
    static get DefaultType() {
      return {};
    }
    static get NAME() {
      throw new Error(
        'You have to implement the static method "NAME", for each component!'
      );
    }
    _getConfig(e) {
      return (
        (e = this._mergeConfigObj(e)),
        (e = this._configAfterMerge(e)),
        this._typeCheckConfig(e),
        e
      );
    }
    _configAfterMerge(e) {
      return e;
    }
    _mergeConfigObj(e, t) {
      var i = n(t) ? c.getDataAttribute(t, "config") : {};
      return {
        ...this.constructor.Default,
        ...("object" == typeof i ? i : {}),
        ...(n(t) ? c.getDataAttributes(t) : {}),
        ...("object" == typeof e ? e : {}),
      };
    }
    _typeCheckConfig(i, e = this.constructor.DefaultType) {
      for (var [s, a] of Object.entries(e)) {
        let e = i[s],
          t = n(e)
            ? "element"
            : null == (r = e)
            ? "" + r
            : Object.prototype.toString
                .call(r)
                .match(/\s([a-z]+)/i)[1]
                .toLowerCase();
        if (!new RegExp(a).test(t))
          throw new TypeError(
            `${this.constructor.NAME.toUpperCase()}: Option "${s}" provided type "${t}" but expected type "${a}".`
          );
      }
      var r;
    }
  }
  class t extends ce {
    constructor(e, t) {
      super(),
        (e = a(e)) &&
          ((this._element = e),
          (this._config = this._getConfig(t)),
          N.set(this._element, this.constructor.DATA_KEY, this));
    }
    dispose() {
      N.remove(this._element, this.constructor.DATA_KEY),
        m.off(this._element, this.constructor.EVENT_KEY);
      for (var e of Object.getOwnPropertyNames(this)) this[e] = null;
    }
    _queueCallback(e, t, i = !0) {
      G(e, t, i);
    }
    _getConfig(e) {
      return (
        (e = this._mergeConfigObj(e, this._element)),
        (e = this._configAfterMerge(e)),
        this._typeCheckConfig(e),
        e
      );
    }
    static getInstance(e) {
      return N.get(a(e), this.DATA_KEY);
    }
    static getOrCreateInstance(e, t = {}) {
      return (
        this.getInstance(e) || new this(e, "object" == typeof t ? t : null)
      );
    }
    static get VERSION() {
      return "5.3.8";
    }
    static get DATA_KEY() {
      return "bs." + this.NAME;
    }
    static get EVENT_KEY() {
      return "." + this.DATA_KEY;
    }
    static eventName(e) {
      return "" + e + this.EVENT_KEY;
    }
  }
  let pe = (t) => {
      let i = t.getAttribute("data-bs-target");
      if (!i || "#" === i) {
        let e = t.getAttribute("href");
        if (!e || (!e.includes("#") && !e.startsWith("."))) return null;
        e.includes("#") && !e.startsWith("#") && (e = "#" + e.split("#")[1]),
          (i = e && "#" !== e ? e.trim() : null);
      }
      return i
        ? i
            .split(",")
            .map((e) => H(e))
            .join(",")
        : null;
    },
    p = {
      find: (e, t = document.documentElement) =>
        [].concat(...Element.prototype.querySelectorAll.call(t, e)),
      findOne: (e, t = document.documentElement) =>
        Element.prototype.querySelector.call(t, e),
      children: (e, t) => [].concat(...e.children).filter((e) => e.matches(t)),
      parents(e, t) {
        var i = [];
        let s = e.parentNode.closest(t);
        for (; s; ) i.push(s), (s = s.parentNode.closest(t));
        return i;
      },
      prev(e, t) {
        let i = e.previousElementSibling;
        for (; i; ) {
          if (i.matches(t)) return [i];
          i = i.previousElementSibling;
        }
        return [];
      },
      next(e, t) {
        let i = e.nextElementSibling;
        for (; i; ) {
          if (i.matches(t)) return [i];
          i = i.nextElementSibling;
        }
        return [];
      },
      focusableChildren(e) {
        var t = [
          "a",
          "button",
          "input",
          "textarea",
          "select",
          "details",
          "[tabindex]",
          '[contenteditable="true"]',
        ]
          .map((e) => e + ':not([tabindex^="-"])')
          .join(",");
        return this.find(t, e).filter((e) => !o(e) && r(e));
      },
      getSelectorFromElement(e) {
        e = pe(e);
        return e && p.findOne(e) ? e : null;
      },
      getElementFromSelector(e) {
        e = pe(e);
        return e ? p.findOne(e) : null;
      },
      getMultipleElementsFromSelector(e) {
        e = pe(e);
        return e ? p.find(e) : [];
      },
    },
    ue = (t, i = "hide") => {
      let e = "click.dismiss" + t.EVENT_KEY,
        s = t.NAME;
      m.on(document, e, `[data-bs-dismiss="${s}"]`, function (e) {
        ["A", "AREA"].includes(this.tagName) && e.preventDefault(),
          o(this) ||
            ((e = p.getElementFromSelector(this) || this.closest("." + s)),
            t.getOrCreateInstance(e)[i]());
      });
    };
  class he extends t {
    static get NAME() {
      return "alert";
    }
    close() {
      var e;
      m.trigger(this._element, "close.bs.alert").defaultPrevented ||
        (this._element.classList.remove("show"),
        (e = this._element.classList.contains("fade")),
        this._queueCallback(() => this._destroyElement(), this._element, e));
    }
    _destroyElement() {
      this._element.remove(),
        m.trigger(this._element, "closed.bs.alert"),
        this.dispose();
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = he.getOrCreateInstance(this);
        if ("string" == typeof t) {
          if (void 0 === e[t] || t.startsWith("_") || "constructor" === t)
            throw new TypeError(`No method named "${t}"`);
          e[t](this);
        }
      });
    }
  }
  ue(he, "close"), e(he);
  let me = '[data-bs-toggle="button"]';
  class fe extends t {
    static get NAME() {
      return "button";
    }
    toggle() {
      this._element.setAttribute(
        "aria-pressed",
        this._element.classList.toggle("active")
      );
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = fe.getOrCreateInstance(this);
        "toggle" === t && e[t]();
      });
    }
  }
  m.on(document, "click.bs.button.data-api", me, (e) => {
    e.preventDefault();
    e = e.target.closest(me);
    fe.getOrCreateInstance(e).toggle();
  }),
    e(fe);
  let i = ".bs.swipe",
    ge =
      (i,
      i,
      i,
      i,
      i,
      { endCallback: null, leftCallback: null, rightCallback: null }),
    ve = {
      endCallback: "(function|null)",
      leftCallback: "(function|null)",
      rightCallback: "(function|null)",
    };
  class be extends ce {
    constructor(e, t) {
      super(),
        (this._element = e) &&
          be.isSupported() &&
          ((this._config = this._getConfig(t)),
          (this._deltaX = 0),
          (this._supportPointerEvents = Boolean(window.PointerEvent)),
          this._initEvents());
    }
    static get Default() {
      return ge;
    }
    static get DefaultType() {
      return ve;
    }
    static get NAME() {
      return "swipe";
    }
    dispose() {
      m.off(this._element, i);
    }
    _start(e) {
      this._supportPointerEvents
        ? this._eventIsPointerPenTouch(e) && (this._deltaX = e.clientX)
        : (this._deltaX = e.touches[0].clientX);
    }
    _end(e) {
      this._eventIsPointerPenTouch(e) &&
        (this._deltaX = e.clientX - this._deltaX),
        this._handleSwipe(),
        d(this._config.endCallback);
    }
    _move(e) {
      this._deltaX =
        e.touches && 1 < e.touches.length
          ? 0
          : e.touches[0].clientX - this._deltaX;
    }
    _handleSwipe() {
      var e = Math.abs(this._deltaX);
      e <= 40 ||
        ((e = e / this._deltaX),
        (this._deltaX = 0),
        e && d(0 < e ? this._config.rightCallback : this._config.leftCallback));
    }
    _initEvents() {
      this._supportPointerEvents
        ? (m.on(this._element, "pointerdown.bs.swipe", (e) => this._start(e)),
          m.on(this._element, "pointerup.bs.swipe", (e) => this._end(e)),
          this._element.classList.add("pointer-event"))
        : (m.on(this._element, "touchstart.bs.swipe", (e) => this._start(e)),
          m.on(this._element, "touchmove.bs.swipe", (e) => this._move(e)),
          m.on(this._element, "touchend.bs.swipe", (e) => this._end(e)));
    }
    _eventIsPointerPenTouch(e) {
      return (
        this._supportPointerEvents &&
        ("pen" === e.pointerType || "touch" === e.pointerType)
      );
    }
    static isSupported() {
      return (
        "ontouchstart" in document.documentElement ||
        0 < navigator.maxTouchPoints
      );
    }
  }
  let we = ".bs.carousel",
    ye = "next",
    u = "prev",
    h = "left",
    _e = "right",
    Ee = "slid" + we,
    xe = "carousel",
    Te = "active",
    Se = ".active",
    Me = ".carousel-item",
    Ce = (Se, Me, { ArrowLeft: _e, ArrowRight: h }),
    Ae = {
      interval: 5e3,
      keyboard: !0,
      pause: "hover",
      ride: !1,
      touch: !0,
      wrap: !0,
    },
    Le = {
      interval: "(number|boolean)",
      keyboard: "boolean",
      pause: "(string|boolean)",
      ride: "(boolean|string)",
      touch: "boolean",
      wrap: "boolean",
    };
  class ke extends t {
    constructor(e, t) {
      super(e, t),
        (this._interval = null),
        (this._activeElement = null),
        (this._isSliding = !1),
        (this.touchTimeout = null),
        (this._swipeHelper = null),
        (this._indicatorsElement = p.findOne(
          ".carousel-indicators",
          this._element
        )),
        this._addEventListeners(),
        this._config.ride === xe && this.cycle();
    }
    static get Default() {
      return Ae;
    }
    static get DefaultType() {
      return Le;
    }
    static get NAME() {
      return "carousel";
    }
    next() {
      this._slide(ye);
    }
    nextWhenVisible() {
      !document.hidden && r(this._element) && this.next();
    }
    prev() {
      this._slide(u);
    }
    pause() {
      this._isSliding && q(this._element), this._clearInterval();
    }
    cycle() {
      this._clearInterval(),
        this._updateInterval(),
        (this._interval = setInterval(
          () => this.nextWhenVisible(),
          this._config.interval
        ));
    }
    _maybeEnableCycle() {
      this._config.ride &&
        (this._isSliding
          ? m.one(this._element, Ee, () => this.cycle())
          : this.cycle());
    }
    to(e) {
      var t,
        i = this._getItems();
      e > i.length - 1 ||
        e < 0 ||
        (this._isSliding
          ? m.one(this._element, Ee, () => this.to(e))
          : (t = this._getItemIndex(this._getActive())) !== e &&
            ((t = t < e ? ye : u), this._slide(t, i[e])));
    }
    dispose() {
      this._swipeHelper && this._swipeHelper.dispose(), super.dispose();
    }
    _configAfterMerge(e) {
      return (e.defaultInterval = e.interval), e;
    }
    _addEventListeners() {
      this._config.keyboard &&
        m.on(this._element, "keydown.bs.carousel", (e) => this._keydown(e)),
        "hover" === this._config.pause &&
          (m.on(this._element, "mouseenter.bs.carousel", () => this.pause()),
          m.on(this._element, "mouseleave.bs.carousel", () =>
            this._maybeEnableCycle()
          )),
        this._config.touch &&
          be.isSupported() &&
          this._addTouchEventListeners();
    }
    _addTouchEventListeners() {
      for (let e of p.find(".carousel-item img", this._element))
        m.on(e, "dragstart.bs.carousel", (e) => e.preventDefault());
      let e = {
        leftCallback: () => this._slide(this._directionToOrder(h)),
        rightCallback: () => this._slide(this._directionToOrder(_e)),
        endCallback: () => {
          "hover" === this._config.pause &&
            (this.pause(),
            this.touchTimeout && clearTimeout(this.touchTimeout),
            (this.touchTimeout = setTimeout(
              () => this._maybeEnableCycle(),
              500 + this._config.interval
            )));
        },
      };
      this._swipeHelper = new be(this._element, e);
    }
    _keydown(e) {
      var t;
      /input|textarea/i.test(e.target.tagName) ||
        ((t = Ce[e.key]) &&
          (e.preventDefault(), this._slide(this._directionToOrder(t))));
    }
    _getItemIndex(e) {
      return this._getItems().indexOf(e);
    }
    _setActiveIndicatorElement(e) {
      var t;
      this._indicatorsElement &&
        ((t = p.findOne(Se, this._indicatorsElement)).classList.remove(Te),
        t.removeAttribute("aria-current"),
        (t = p.findOne(
          `[data-bs-slide-to="${e}"]`,
          this._indicatorsElement
        ))) &&
        (t.classList.add(Te), t.setAttribute("aria-current", "true"));
    }
    _updateInterval() {
      var e = this._activeElement || this._getActive();
      e &&
        ((e = Number.parseInt(e.getAttribute("data-bs-interval"), 10)),
        (this._config.interval = e || this._config.defaultInterval));
    }
    _slide(t, o = null) {
      if (!this._isSliding) {
        let a = this._getActive(),
          r = t === ye,
          n = o || X(this._getItems(), a, r, this._config.wrap);
        if (n !== a) {
          let i = this._getItemIndex(n),
            s = (e) =>
              m.trigger(this._element, e, {
                relatedTarget: n,
                direction: this._orderToDirection(t),
                from: this._getItemIndex(a),
                to: i,
              });
          if (!s("slide.bs.carousel").defaultPrevented && a && n) {
            o = Boolean(this._interval);
            this.pause(),
              (this._isSliding = !0),
              this._setActiveIndicatorElement(i),
              (this._activeElement = n);
            let e = r ? "carousel-item-start" : "carousel-item-end",
              t = r ? "carousel-item-next" : "carousel-item-prev";
            n.classList.add(t),
              R(n),
              a.classList.add(e),
              n.classList.add(e),
              this._queueCallback(
                () => {
                  n.classList.remove(e, t),
                    n.classList.add(Te),
                    a.classList.remove(Te, t, e),
                    (this._isSliding = !1),
                    s(Ee);
                },
                a,
                this._isAnimated()
              ),
              o && this.cycle();
          }
        }
      }
    }
    _isAnimated() {
      return this._element.classList.contains("slide");
    }
    _getActive() {
      return p.findOne(".active.carousel-item", this._element);
    }
    _getItems() {
      return p.find(Me, this._element);
    }
    _clearInterval() {
      this._interval &&
        (clearInterval(this._interval), (this._interval = null));
    }
    _directionToOrder(e) {
      return l() ? (e === h ? u : ye) : e === h ? ye : u;
    }
    _orderToDirection(e) {
      return l() ? (e === u ? h : _e) : e === u ? _e : h;
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = ke.getOrCreateInstance(this, t);
        if ("number" != typeof t) {
          if ("string" == typeof t) {
            if (void 0 === e[t] || t.startsWith("_") || "constructor" === t)
              throw new TypeError(`No method named "${t}"`);
            e[t]();
          }
        } else e.to(t);
      });
    }
  }
  m.on(
    document,
    "click.bs.carousel.data-api",
    "[data-bs-slide], [data-bs-slide-to]",
    function (e) {
      var t = p.getElementFromSelector(this);
      t &&
        t.classList.contains(xe) &&
        (e.preventDefault(),
        (e = ke.getOrCreateInstance(t)),
        (t = this.getAttribute("data-bs-slide-to"))
          ? e.to(t)
          : "next" === c.getDataAttribute(this, "slide")
          ? e.next()
          : e.prev(),
        e._maybeEnableCycle());
    }
  ),
    m.on(window, "load.bs.carousel.data-api", () => {
      var e;
      for (e of p.find('[data-bs-ride="carousel"]')) ke.getOrCreateInstance(e);
    }),
    e(ke);
  let Oe = "show",
    f = "collapse",
    Pe = "collapsing",
    Ie = (f, f, '[data-bs-toggle="collapse"]'),
    De = { parent: null, toggle: !0 },
    ze = { parent: "(null|element)", toggle: "boolean" };
  class Ne extends t {
    constructor(e, t) {
      super(e, t), (this._isTransitioning = !1), (this._triggerArray = []);
      let s = p.find(Ie);
      for (let i of s) {
        let e = p.getSelectorFromElement(i),
          t = p.find(e).filter((e) => e === this._element);
        null !== e && t.length && this._triggerArray.push(i);
      }
      this._initializeChildren(),
        this._config.parent ||
          this._addAriaAndCollapsedClass(this._triggerArray, this._isShown()),
        this._config.toggle && this.toggle();
    }
    static get Default() {
      return De;
    }
    static get DefaultType() {
      return ze;
    }
    static get NAME() {
      return "collapse";
    }
    toggle() {
      this._isShown() ? this.hide() : this.show();
    }
    show() {
      if (!this._isTransitioning && !this._isShown()) {
        let t = [];
        if (
          !(
            ((t = this._config.parent
              ? this._getFirstLevelChildren(
                  ".collapse.show, .collapse.collapsing"
                )
                  .filter((e) => e !== this._element)
                  .map((e) => Ne.getOrCreateInstance(e, { toggle: !1 }))
              : t).length &&
              t[0]._isTransitioning) ||
            m.trigger(this._element, "show.bs.collapse").defaultPrevented
          )
        ) {
          for (let e of t) e.hide();
          let e = this._getDimension();
          this._element.classList.remove(f),
            this._element.classList.add(Pe),
            (this._element.style[e] = 0),
            this._addAriaAndCollapsedClass(this._triggerArray, !0),
            (this._isTransitioning = !0);
          var i = "scroll" + (e[0].toUpperCase() + e.slice(1));
          this._queueCallback(
            () => {
              (this._isTransitioning = !1),
                this._element.classList.remove(Pe),
                this._element.classList.add(f, Oe),
                (this._element.style[e] = ""),
                m.trigger(this._element, "shown.bs.collapse");
            },
            this._element,
            !0
          ),
            (this._element.style[e] = this._element[i] + "px");
        }
      }
    }
    hide() {
      if (
        !this._isTransitioning &&
        this._isShown() &&
        !m.trigger(this._element, "hide.bs.collapse").defaultPrevented
      ) {
        let e = this._getDimension();
        (this._element.style[e] =
          this._element.getBoundingClientRect()[e] + "px"),
          R(this._element),
          this._element.classList.add(Pe),
          this._element.classList.remove(f, Oe);
        for (let e of this._triggerArray) {
          var t = p.getElementFromSelector(e);
          t && !this._isShown(t) && this._addAriaAndCollapsedClass([e], !1);
        }
        (this._isTransitioning = !0),
          (this._element.style[e] = ""),
          this._queueCallback(
            () => {
              (this._isTransitioning = !1),
                this._element.classList.remove(Pe),
                this._element.classList.add(f),
                m.trigger(this._element, "hidden.bs.collapse");
            },
            this._element,
            !0
          );
      }
    }
    _isShown(e = this._element) {
      return e.classList.contains(Oe);
    }
    _configAfterMerge(e) {
      return (e.toggle = Boolean(e.toggle)), (e.parent = a(e.parent)), e;
    }
    _getDimension() {
      return this._element.classList.contains("collapse-horizontal")
        ? "width"
        : "height";
    }
    _initializeChildren() {
      if (this._config.parent) {
        let e = this._getFirstLevelChildren(Ie);
        for (var t of e) {
          let e = p.getElementFromSelector(t);
          e && this._addAriaAndCollapsedClass([t], this._isShown(e));
        }
      }
    }
    _getFirstLevelChildren(e) {
      let t = p.find(":scope .collapse .collapse", this._config.parent);
      return p.find(e, this._config.parent).filter((e) => !t.includes(e));
    }
    _addAriaAndCollapsedClass(e, t) {
      if (e.length)
        for (var i of e)
          i.classList.toggle("collapsed", !t),
            i.setAttribute("aria-expanded", t);
    }
    static jQueryInterface(t) {
      let i = {};
      return (
        "string" == typeof t && /show|hide/.test(t) && (i.toggle = !1),
        this.each(function () {
          var e = Ne.getOrCreateInstance(this, i);
          if ("string" == typeof t) {
            if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`);
            e[t]();
          }
        })
      );
    }
  }
  m.on(document, "click.bs.collapse.data-api", Ie, function (e) {
    ("A" === e.target.tagName ||
      (e.delegateTarget && "A" === e.delegateTarget.tagName)) &&
      e.preventDefault();
    for (let e of p.getMultipleElementsFromSelector(this))
      Ne.getOrCreateInstance(e, { toggle: !1 }).toggle();
  }),
    e(Ne);
  var C = "top",
    A = "bottom",
    L = "right",
    k = "left",
    je = "auto",
    O = [C, A, L, k],
    P = "start",
    w = "end",
    He = "clippingParents",
    qe = "viewport",
    Be = "popper",
    Fe = "reference",
    Re = O.reduce(function (e, t) {
      return e.concat([t + "-" + P, t + "-" + w]);
    }, []),
    We = [].concat(O, [je]).reduce(function (e, t) {
      return e.concat([t, t + "-" + P, t + "-" + w]);
    }, []),
    $e = "beforeRead",
    Ge = "afterRead",
    Xe = "beforeMain",
    Ye = "afterMain",
    Ve = "beforeWrite",
    Ue = "afterWrite",
    Ke = [$e, "read", Ge, Xe, "main", Ye, Ve, "write", Ue];
  function g(e) {
    return e ? (e.nodeName || "").toLowerCase() : null;
  }
  function y(e) {
    var t;
    return null == e
      ? window
      : "[object Window]" !== e.toString()
      ? ((t = e.ownerDocument) && t.defaultView) || window
      : e;
  }
  function v(e) {
    return e instanceof y(e).Element || e instanceof Element;
  }
  function b(e) {
    return e instanceof y(e).HTMLElement || e instanceof HTMLElement;
  }
  function Qe(e) {
    return (
      "undefined" != typeof ShadowRoot &&
      (e instanceof y(e).ShadowRoot || e instanceof ShadowRoot)
    );
  }
  var Ze = {
    name: "applyStyles",
    enabled: !0,
    phase: "write",
    fn: function (e) {
      var a = e.state;
      Object.keys(a.elements).forEach(function (e) {
        var t = a.styles[e] || {},
          i = a.attributes[e] || {},
          s = a.elements[e];
        b(s) &&
          g(s) &&
          (Object.assign(s.style, t),
          Object.keys(i).forEach(function (e) {
            var t = i[e];
            !1 === t
              ? s.removeAttribute(e)
              : s.setAttribute(e, !0 === t ? "" : t);
          }));
      });
    },
    effect: function (e) {
      var s = e.state,
        a = {
          popper: {
            position: s.options.strategy,
            left: "0",
            top: "0",
            margin: "0",
          },
          arrow: { position: "absolute" },
          reference: {},
        };
      return (
        Object.assign(s.elements.popper.style, a.popper),
        (s.styles = a),
        s.elements.arrow && Object.assign(s.elements.arrow.style, a.arrow),
        function () {
          Object.keys(s.elements).forEach(function (e) {
            var t = s.elements[e],
              i = s.attributes[e] || {},
              e = Object.keys(
                (s.styles.hasOwnProperty(e) ? s.styles : a)[e]
              ).reduce(function (e, t) {
                return (e[t] = ""), e;
              }, {});
            b(t) &&
              g(t) &&
              (Object.assign(t.style, e),
              Object.keys(i).forEach(function (e) {
                t.removeAttribute(e);
              }));
          });
        }
      );
    },
    requires: ["computeStyles"],
  };
  function I(e) {
    return e.split("-")[0];
  }
  var M = Math.max,
    Je = Math.min,
    et = Math.round;
  function tt() {
    var e = navigator.userAgentData;
    return null != e && e.brands && Array.isArray(e.brands)
      ? e.brands
          .map(function (e) {
            return e.brand + "/" + e.version;
          })
          .join(" ")
      : navigator.userAgent;
  }
  function it() {
    return !/^((?!chrome|android).)*safari/i.test(tt());
  }
  function st(e, t, i) {
    void 0 === t && (t = !1), void 0 === i && (i = !1);
    var s = e.getBoundingClientRect(),
      a = 1,
      r = 1,
      t =
        (t &&
          b(e) &&
          ((a = (0 < e.offsetWidth && et(s.width) / e.offsetWidth) || 1),
          (r = (0 < e.offsetHeight && et(s.height) / e.offsetHeight) || 1)),
        (v(e) ? y(e) : window).visualViewport),
      e = !it() && i,
      i = (s.left + (e && t ? t.offsetLeft : 0)) / a,
      e = (s.top + (e && t ? t.offsetTop : 0)) / r,
      t = s.width / a,
      a = s.height / r;
    return {
      width: t,
      height: a,
      top: e,
      right: i + t,
      bottom: e + a,
      left: i,
      x: i,
      y: e,
    };
  }
  function at(e) {
    var t = st(e),
      i = e.offsetWidth,
      s = e.offsetHeight;
    return (
      Math.abs(t.width - i) <= 1 && (i = t.width),
      Math.abs(t.height - s) <= 1 && (s = t.height),
      { x: e.offsetLeft, y: e.offsetTop, width: i, height: s }
    );
  }
  function rt(e, t) {
    var i = t.getRootNode && t.getRootNode();
    if (e.contains(t)) return !0;
    if (i && Qe(i)) {
      var s = t;
      do {
        if (s && e.isSameNode(s)) return !0;
      } while ((s = s.parentNode || s.host));
    }
    return !1;
  }
  function _(e) {
    return y(e).getComputedStyle(e);
  }
  function E(e) {
    return (
      (v(e) ? e.ownerDocument : e.document) || window.document
    ).documentElement;
  }
  function nt(e) {
    return "html" === g(e)
      ? e
      : e.assignedSlot || e.parentNode || (Qe(e) ? e.host : null) || E(e);
  }
  function ot(e) {
    return b(e) && "fixed" !== _(e).position ? e.offsetParent : null;
  }
  function lt(e) {
    for (
      var t, i = y(e), s = ot(e);
      s &&
      ((t = s), 0 <= ["table", "td", "th"].indexOf(g(t))) &&
      "static" === _(s).position;

    )
      s = ot(s);
    return (
      ((!s ||
        ("html" !== g(s) && ("body" !== g(s) || "static" !== _(s).position))) &&
        (s ||
          ((e) => {
            var t = /firefox/i.test(tt());
            if (!/Trident/i.test(tt()) || !b(e) || "fixed" !== _(e).position) {
              var i = nt(e);
              for (
                Qe(i) && (i = i.host);
                b(i) && ["html", "body"].indexOf(g(i)) < 0;

              ) {
                var s = _(i);
                if (
                  "none" !== s.transform ||
                  "none" !== s.perspective ||
                  "paint" === s.contain ||
                  -1 !== ["transform", "perspective"].indexOf(s.willChange) ||
                  (t && "filter" === s.willChange) ||
                  (t && s.filter && "none" !== s.filter)
                )
                  return i;
                i = i.parentNode;
              }
            }
            return null;
          })(e))) ||
      i
    );
  }
  function dt(e) {
    return 0 <= ["top", "bottom"].indexOf(e) ? "x" : "y";
  }
  function ct(e, t, i) {
    return M(e, Je(t, i));
  }
  function pt(e) {
    return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, e);
  }
  function ut(i, e) {
    return e.reduce(function (e, t) {
      return (e[t] = i), e;
    }, {});
  }
  var ht = {
    name: "arrow",
    enabled: !0,
    phase: "main",
    fn: function (e) {
      var t,
        i,
        s,
        a,
        r = e.state,
        n = e.name,
        e = e.options,
        o = r.elements.arrow,
        l = r.modifiersData.popperOffsets,
        d = I(r.placement),
        c = dt(d),
        d = 0 <= [k, L].indexOf(d) ? "height" : "width";
      o &&
        l &&
        ((e = pt(
          "number" !=
            typeof (e =
              "function" == typeof (e = e.padding)
                ? e(Object.assign({}, r.rects, { placement: r.placement }))
                : e)
            ? e
            : ut(e, O)
        )),
        (t = at(o)),
        (a = "y" === c ? C : k),
        (s = "y" === c ? A : L),
        (i =
          r.rects.reference[d] +
          r.rects.reference[c] -
          l[c] -
          r.rects.popper[d]),
        (l = l[c] - r.rects.reference[c]),
        (o = (o = lt(o))
          ? "y" === c
            ? o.clientHeight || 0
            : o.clientWidth || 0
          : 0),
        (a = e[a]),
        (e = o - t[d] - e[s]),
        (a = ct(a, (s = o / 2 - t[d] / 2 + (i / 2 - l / 2)), e)),
        (r.modifiersData[n] =
          (((o = {})[c] = a), (o.centerOffset = a - s), o)));
    },
    effect: function (e) {
      var t = e.state,
        e = e.options.element,
        e = void 0 === e ? "[data-popper-arrow]" : e;
      null != e &&
        ("string" != typeof e || (e = t.elements.popper.querySelector(e))) &&
        rt(t.elements.popper, e) &&
        (t.elements.arrow = e);
    },
    requires: ["popperOffsets"],
    requiresIfExists: ["preventOverflow"],
  };
  function mt(e) {
    return e.split("-")[1];
  }
  var ft = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
  function gt(e) {
    var t = e.popper,
      i = e.popperRect,
      s = e.placement,
      a = e.variation,
      r = e.offsets,
      n = e.position,
      o = e.gpuAcceleration,
      l = e.adaptive,
      d = e.roundOffsets,
      e = e.isFixed,
      c = r.x,
      c = void 0 === c ? 0 : c,
      p = r.y,
      p = void 0 === p ? 0 : p,
      u = "function" == typeof d ? d({ x: c, y: p }) : { x: c, y: p },
      c = u.x,
      p = u.y,
      u = r.hasOwnProperty("x"),
      r = r.hasOwnProperty("y"),
      h = k,
      m = C,
      f = window;
    l &&
      ((v = "clientHeight"),
      (g = "clientWidth"),
      (b = lt(t)) === y(t) &&
        "static" !== _((b = E(t))).position &&
        "absolute" === n &&
        ((v = "scrollHeight"), (g = "scrollWidth")),
      (s !== C && ((s !== k && s !== L) || a !== w)) ||
        ((m = A),
        (p =
          (p -
            ((e && b === f && f.visualViewport
              ? f.visualViewport.height
              : b[v]) -
              i.height)) *
          (o ? 1 : -1))),
      (s !== k && ((s !== C && s !== A) || a !== w)) ||
        ((h = L),
        (c =
          (c -
            ((e && b === f && f.visualViewport
              ? f.visualViewport.width
              : b[g]) -
              i.width)) *
          (o ? 1 : -1))));
    var g,
      v = Object.assign({ position: n }, l && ft),
      b =
        !0 === d
          ? ((s = { x: c, y: p }),
            (a = y(t)),
            (e = s.y),
            (a = a.devicePixelRatio || 1),
            { x: et(s.x * a) / a || 0, y: et(e * a) / a || 0 })
          : { x: c, y: p };
    return (
      (c = b.x),
      (p = b.y),
      o
        ? Object.assign(
            {},
            v,
            (((g = {})[m] = r ? "0" : ""),
            (g[h] = u ? "0" : ""),
            (g.transform =
              (f.devicePixelRatio || 1) <= 1
                ? "translate(" + c + "px, " + p + "px)"
                : "translate3d(" + c + "px, " + p + "px, 0)"),
            g)
          )
        : Object.assign(
            {},
            v,
            (((i = {})[m] = r ? p + "px" : ""),
            (i[h] = u ? c + "px" : ""),
            (i.transform = ""),
            i)
          )
    );
  }
  var vt = {
      name: "computeStyles",
      enabled: !0,
      phase: "beforeWrite",
      fn: function (e) {
        var t = e.state,
          e = e.options,
          i = e.gpuAcceleration,
          i = void 0 === i || i,
          s = e.adaptive,
          s = void 0 === s || s,
          e = e.roundOffsets,
          e = void 0 === e || e,
          i = {
            placement: I(t.placement),
            variation: mt(t.placement),
            popper: t.elements.popper,
            popperRect: t.rects.popper,
            gpuAcceleration: i,
            isFixed: "fixed" === t.options.strategy,
          };
        null != t.modifiersData.popperOffsets &&
          (t.styles.popper = Object.assign(
            {},
            t.styles.popper,
            gt(
              Object.assign({}, i, {
                offsets: t.modifiersData.popperOffsets,
                position: t.options.strategy,
                adaptive: s,
                roundOffsets: e,
              })
            )
          )),
          null != t.modifiersData.arrow &&
            (t.styles.arrow = Object.assign(
              {},
              t.styles.arrow,
              gt(
                Object.assign({}, i, {
                  offsets: t.modifiersData.arrow,
                  position: "absolute",
                  adaptive: !1,
                  roundOffsets: e,
                })
              )
            )),
          (t.attributes.popper = Object.assign({}, t.attributes.popper, {
            "data-popper-placement": t.placement,
          }));
      },
      data: {},
    },
    bt = { passive: !0 },
    wt = {
      name: "eventListeners",
      enabled: !0,
      phase: "write",
      fn: function () {},
      effect: function (e) {
        var t = e.state,
          i = e.instance,
          e = e.options,
          s = e.scroll,
          a = void 0 === s || s,
          s = e.resize,
          r = void 0 === s || s,
          n = y(t.elements.popper),
          o = [].concat(t.scrollParents.reference, t.scrollParents.popper);
        return (
          a &&
            o.forEach(function (e) {
              e.addEventListener("scroll", i.update, bt);
            }),
          r && n.addEventListener("resize", i.update, bt),
          function () {
            a &&
              o.forEach(function (e) {
                e.removeEventListener("scroll", i.update, bt);
              }),
              r && n.removeEventListener("resize", i.update, bt);
          }
        );
      },
      data: {},
    },
    yt = { left: "right", right: "left", bottom: "top", top: "bottom" };
  function _t(e) {
    return e.replace(/left|right|bottom|top/g, function (e) {
      return yt[e];
    });
  }
  var Et = { start: "end", end: "start" };
  function xt(e) {
    return e.replace(/start|end/g, function (e) {
      return Et[e];
    });
  }
  function Tt(e) {
    e = y(e);
    return { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset };
  }
  function St(e) {
    return st(E(e)).left + Tt(e).scrollLeft;
  }
  function Mt(e) {
    var e = _(e),
      t = e.overflow;
    return /auto|scroll|overlay|hidden/.test(t + e.overflowY + e.overflowX);
  }
  function Ct(e, t) {
    void 0 === t && (t = []);
    var i = (function e(t) {
        return 0 <= ["html", "body", "#document"].indexOf(g(t))
          ? t.ownerDocument.body
          : b(t) && Mt(t)
          ? t
          : e(nt(t));
      })(e),
      e = i === (null == (e = e.ownerDocument) ? void 0 : e.body),
      s = y(i),
      s = e ? [s].concat(s.visualViewport || [], Mt(i) ? i : []) : i,
      i = t.concat(s);
    return e ? i : i.concat(Ct(nt(s)));
  }
  function At(e) {
    return Object.assign({}, e, {
      left: e.x,
      top: e.y,
      right: e.x + e.width,
      bottom: e.y + e.height,
    });
  }
  function Lt(e, t, i) {
    return t === qe
      ? At(
          ((a = i),
          (n = y((s = e))),
          (o = E(s)),
          (n = n.visualViewport),
          (l = o.clientWidth),
          (o = o.clientHeight),
          (c = d = 0),
          n &&
            ((l = n.width),
            (o = n.height),
            (r = it()) || (!r && "fixed" === a)) &&
            ((d = n.offsetLeft), (c = n.offsetTop)),
          { width: l, height: o, x: d + St(s), y: c })
        )
      : v(t)
      ? (((a = st((r = t), !1, "fixed" === i)).top = a.top + r.clientTop),
        (a.left = a.left + r.clientLeft),
        (a.bottom = a.top + r.clientHeight),
        (a.right = a.left + r.clientWidth),
        (a.width = r.clientWidth),
        (a.height = r.clientHeight),
        (a.x = a.left),
        (a.y = a.top),
        a)
      : At(
          ((n = E(e)),
          (l = E(n)),
          (o = Tt(n)),
          (d = null == (d = n.ownerDocument) ? void 0 : d.body),
          (s = M(
            l.scrollWidth,
            l.clientWidth,
            d ? d.scrollWidth : 0,
            d ? d.clientWidth : 0
          )),
          (c = M(
            l.scrollHeight,
            l.clientHeight,
            d ? d.scrollHeight : 0,
            d ? d.clientHeight : 0
          )),
          (n = -o.scrollLeft + St(n)),
          (o = -o.scrollTop),
          "rtl" === _(d || l).direction &&
            (n += M(l.clientWidth, d ? d.clientWidth : 0) - s),
          { width: s, height: c, x: n, y: o })
        );
    var s, a, r, n, o, l, d, c;
  }
  function kt(e) {
    var t,
      i = e.reference,
      s = e.element,
      e = e.placement,
      a = e ? I(e) : null,
      e = e ? mt(e) : null,
      r = i.x + i.width / 2 - s.width / 2,
      n = i.y + i.height / 2 - s.height / 2;
    switch (a) {
      case C:
        t = { x: r, y: i.y - s.height };
        break;
      case A:
        t = { x: r, y: i.y + i.height };
        break;
      case L:
        t = { x: i.x + i.width, y: n };
        break;
      case k:
        t = { x: i.x - s.width, y: n };
        break;
      default:
        t = { x: i.x, y: i.y };
    }
    var o = a ? dt(a) : null;
    if (null != o) {
      var l = "y" === o ? "height" : "width";
      switch (e) {
        case P:
          t[o] = t[o] - (i[l] / 2 - s[l] / 2);
          break;
        case w:
          t[o] = t[o] + (i[l] / 2 - s[l] / 2);
      }
    }
    return t;
  }
  function Ot(e, t) {
    var i,
      s,
      a,
      r,
      n,
      o,
      t = (t = void 0 === t ? {} : t),
      l = t.placement,
      l = void 0 === l ? e.placement : l,
      d = t.strategy,
      d = void 0 === d ? e.strategy : d,
      c = t.boundary,
      c = void 0 === c ? He : c,
      p = t.rootBoundary,
      p = void 0 === p ? qe : p,
      u = t.elementContext,
      u = void 0 === u ? Be : u,
      h = t.altBoundary,
      h = void 0 !== h && h,
      t = t.padding,
      t = void 0 === t ? 0 : t,
      t = pt("number" != typeof t ? t : ut(t, O)),
      m = e.rects.popper,
      h = e.elements[h ? (u === Be ? Fe : Be) : u],
      d =
        ((i = v(h) ? h : h.contextElement || E(e.elements.popper)),
        (h = p),
        (s = d),
        (r =
          "clippingParents" === (p = c)
            ? ((n = Ct(nt((r = i)))),
              v(
                (a =
                  0 <= ["absolute", "fixed"].indexOf(_(r).position) && b(r)
                    ? lt(r)
                    : r)
              )
                ? n.filter(function (e) {
                    return v(e) && rt(e, a) && "body" !== g(e);
                  })
                : [])
            : [].concat(p)),
        (n = [].concat(r, [h])),
        (p = n[0]),
        ((h = n.reduce(function (e, t) {
          t = Lt(i, t, s);
          return (
            (e.top = M(t.top, e.top)),
            (e.right = Je(t.right, e.right)),
            (e.bottom = Je(t.bottom, e.bottom)),
            (e.left = M(t.left, e.left)),
            e
          );
        }, Lt(i, p, s))).width = h.right - h.left),
        (h.height = h.bottom - h.top),
        (h.x = h.left),
        (h.y = h.top),
        h),
      c = st(e.elements.reference),
      p = kt({ reference: c, element: m, placement: l }),
      h = At(Object.assign({}, m, p)),
      m = u === Be ? h : c,
      f = {
        top: d.top - m.top + t.top,
        bottom: m.bottom - d.bottom + t.bottom,
        left: d.left - m.left + t.left,
        right: m.right - d.right + t.right,
      },
      p = e.modifiersData.offset;
    return (
      u === Be &&
        p &&
        ((o = p[l]),
        Object.keys(f).forEach(function (e) {
          var t = 0 <= [L, A].indexOf(e) ? 1 : -1,
            i = 0 <= [C, A].indexOf(e) ? "y" : "x";
          f[e] += o[i] * t;
        })),
      f
    );
  }
  var Pt = {
    name: "flip",
    enabled: !0,
    phase: "main",
    fn: function (e) {
      var p = e.state,
        t = e.options,
        e = e.name;
      if (!p.modifiersData[e]._skip) {
        for (
          var i = t.mainAxis,
            s = void 0 === i || i,
            i = t.altAxis,
            a = void 0 === i || i,
            i = t.fallbackPlacements,
            u = t.padding,
            h = t.boundary,
            m = t.rootBoundary,
            r = t.altBoundary,
            n = t.flipVariations,
            f = void 0 === n || n,
            g = t.allowedAutoPlacements,
            n = p.options.placement,
            t = I(n),
            i =
              i ||
              (t !== n && f
                ? I((i = n)) === je
                  ? []
                  : ((t = _t(i)), [xt(i), t, xt(t)])
                : [_t(n)]),
            o = [n].concat(i).reduce(function (e, t) {
              return e.concat(
                I(t) === je
                  ? ((i = p),
                    (s = (e = e =
                      void 0 ===
                      (e = {
                        placement: t,
                        boundary: h,
                        rootBoundary: m,
                        padding: u,
                        flipVariations: f,
                        allowedAutoPlacements: g,
                      })
                        ? {}
                        : e).placement),
                    (a = e.boundary),
                    (r = e.rootBoundary),
                    (n = e.padding),
                    (o = e.flipVariations),
                    (l = void 0 === (e = e.allowedAutoPlacements) ? We : e),
                    (d = mt(s)),
                    (e = d
                      ? o
                        ? Re
                        : Re.filter(function (e) {
                            return mt(e) === d;
                          })
                      : O),
                    (c = (s =
                      0 ===
                      (s = e.filter(function (e) {
                        return 0 <= l.indexOf(e);
                      })).length
                        ? e
                        : s).reduce(function (e, t) {
                      return (
                        (e[t] = Ot(i, {
                          placement: t,
                          boundary: a,
                          rootBoundary: r,
                          padding: n,
                        })[I(t)]),
                        e
                      );
                    }, {})),
                    Object.keys(c).sort(function (e, t) {
                      return c[e] - c[t];
                    }))
                  : t
              );
              var i, s, a, r, n, o, l, d, c;
            }, []),
            l = p.rects.reference,
            d = p.rects.popper,
            c = new Map(),
            v = !0,
            b = o[0],
            w = 0;
          w < o.length;
          w++
        ) {
          var y = o[w],
            _ = I(y),
            E = mt(y) === P,
            x = 0 <= [C, A].indexOf(_),
            T = x ? "width" : "height",
            S = Ot(p, {
              placement: y,
              boundary: h,
              rootBoundary: m,
              altBoundary: r,
              padding: u,
            }),
            x = x ? (E ? L : k) : E ? A : C,
            E = (l[T] > d[T] && (x = _t(x)), _t(x)),
            T = [];
          if (
            (s && T.push(S[_] <= 0),
            a && T.push(S[x] <= 0, S[E] <= 0),
            T.every(function (e) {
              return e;
            }))
          ) {
            (b = y), (v = !1);
            break;
          }
          c.set(y, T);
        }
        if (v)
          for (
            var M = f ? 3 : 1;
            0 < M &&
            "break" !==
              ((t) => {
                var e = o.find(function (e) {
                  e = c.get(e);
                  if (e)
                    return e.slice(0, t).every(function (e) {
                      return e;
                    });
                });
                if (e) return (b = e), "break";
              })(M);
            M--
          );
        p.placement !== b &&
          ((p.modifiersData[e]._skip = !0), (p.placement = b), (p.reset = !0));
      }
    },
    requiresIfExists: ["offset"],
    data: { _skip: !1 },
  };
  function It(e, t, i) {
    return {
      top: e.top - t.height - (i = void 0 === i ? { x: 0, y: 0 } : i).y,
      right: e.right - t.width + i.x,
      bottom: e.bottom - t.height + i.y,
      left: e.left - t.width - i.x,
    };
  }
  function Dt(t) {
    return [C, L, A, k].some(function (e) {
      return 0 <= t[e];
    });
  }
  var zt = {
      name: "hide",
      enabled: !0,
      phase: "main",
      requiresIfExists: ["preventOverflow"],
      fn: function (e) {
        var t = e.state,
          e = e.name,
          i = t.rects.reference,
          s = t.rects.popper,
          a = t.modifiersData.preventOverflow,
          r = Ot(t, { elementContext: "reference" }),
          n = Ot(t, { altBoundary: !0 }),
          r = It(r, i),
          i = It(n, s, a),
          n = Dt(r),
          s = Dt(i);
        (t.modifiersData[e] = {
          referenceClippingOffsets: r,
          popperEscapeOffsets: i,
          isReferenceHidden: n,
          hasPopperEscaped: s,
        }),
          (t.attributes.popper = Object.assign({}, t.attributes.popper, {
            "data-popper-reference-hidden": n,
            "data-popper-escaped": s,
          }));
      },
    },
    Nt = {
      name: "offset",
      enabled: !0,
      phase: "main",
      requires: ["popperOffsets"],
      fn: function (e) {
        var n = e.state,
          t = e.name,
          e = e.options.offset,
          o = void 0 === e ? [0, 0] : e,
          e = We.reduce(function (e, t) {
            return (
              (e[t] =
                ((t = t),
                (i = n.rects),
                (s = o),
                (a = I(t)),
                (r = 0 <= [k, C].indexOf(a) ? -1 : 1),
                (i =
                  "function" == typeof s
                    ? s(Object.assign({}, i, { placement: t }))
                    : s),
                (t = i[0] || 0),
                (s = (i[1] || 0) * r),
                0 <= [k, L].indexOf(a) ? { x: s, y: t } : { x: t, y: s })),
              e
            );
            var i, s, a, r;
          }, {}),
          i = e[n.placement],
          s = i.x,
          i = i.y;
        null != n.modifiersData.popperOffsets &&
          ((n.modifiersData.popperOffsets.x += s),
          (n.modifiersData.popperOffsets.y += i)),
          (n.modifiersData[t] = e);
      },
    },
    jt = {
      name: "popperOffsets",
      enabled: !0,
      phase: "read",
      fn: function (e) {
        var t = e.state;
        t.modifiersData[e.name] = kt({
          reference: t.rects.reference,
          element: t.rects.popper,
          placement: t.placement,
        });
      },
      data: {},
    },
    Ht = {
      name: "preventOverflow",
      enabled: !0,
      phase: "main",
      fn: function (e) {
        var t,
          i,
          s,
          a,
          r,
          n,
          o,
          l,
          d,
          c = e.state,
          p = e.options,
          e = e.name,
          u = p.mainAxis,
          u = void 0 === u || u,
          h = p.altAxis,
          h = void 0 !== h && h,
          m = p.tether,
          m = void 0 === m || m,
          f = p.tetherOffset,
          f = void 0 === f ? 0 : f,
          p = Ot(c, {
            boundary: p.boundary,
            rootBoundary: p.rootBoundary,
            padding: p.padding,
            altBoundary: p.altBoundary,
          }),
          g = I(c.placement),
          v = mt(c.placement),
          b = !v,
          w = dt(g),
          y = "x" === w ? "y" : "x",
          _ = c.modifiersData.popperOffsets,
          E = c.rects.reference,
          x = c.rects.popper,
          f =
            "function" == typeof f
              ? f(Object.assign({}, c.rects, { placement: c.placement }))
              : f,
          f =
            "number" == typeof f
              ? { mainAxis: f, altAxis: f }
              : Object.assign({ mainAxis: 0, altAxis: 0 }, f),
          T = c.modifiersData.offset
            ? c.modifiersData.offset[c.placement]
            : null,
          S = { x: 0, y: 0 };
        _ &&
          (u &&
            ((u = "y" === w ? "height" : "width"),
            (n = (o = _[w]) + p[(i = "y" === w ? C : k)]),
            (l = o - p[(d = "y" === w ? A : L)]),
            (t = m ? -x[u] / 2 : 0),
            (a = (v === P ? E : x)[u]),
            (v = v === P ? -x[u] : -E[u]),
            (r = c.elements.arrow),
            (r = m && r ? at(r) : { width: 0, height: 0 }),
            (i = (s = c.modifiersData["arrow#persistent"]
              ? c.modifiersData["arrow#persistent"].padding
              : { top: 0, right: 0, bottom: 0, left: 0 })[i]),
            (s = s[d]),
            (d = ct(0, E[u], r[u])),
            (r = b
              ? E[u] / 2 - t - d - i - f.mainAxis
              : a - d - i - f.mainAxis),
            (a = b
              ? -E[u] / 2 + t + d + s + f.mainAxis
              : v + d + s + f.mainAxis),
            (b = (i = c.elements.arrow && lt(c.elements.arrow))
              ? "y" === w
                ? i.clientTop || 0
                : i.clientLeft || 0
              : 0),
            (v = o + a - (t = null != (u = null == T ? void 0 : T[w]) ? u : 0)),
            (d = ct(m ? Je(n, o + r - t - b) : n, o, m ? M(l, v) : l)),
            (_[w] = d),
            (S[w] = d - o)),
          h &&
            ((s = "y" == y ? "height" : "width"),
            (a = (i = _[y]) + p["x" === w ? C : k]),
            (u = i - p["x" === w ? A : L]),
            (r = -1 !== [C, k].indexOf(g)),
            (b = null != (t = null == T ? void 0 : T[y]) ? t : 0),
            (n = r ? a : i - E[s] - x[s] - b + f.altAxis),
            (v = r ? i + E[s] + x[s] - b - f.altAxis : u),
            (o =
              m && r
                ? ((d = ct(n, i, (l = v))), l < d ? l : d)
                : ct(m ? n : a, i, m ? v : u)),
            (_[y] = o),
            (S[y] = o - i)),
          (c.modifiersData[e] = S));
      },
      requiresIfExists: ["offset"],
    };
  function qt(e) {
    var i = new Map(),
      s = new Set(),
      a = [];
    return (
      e.forEach(function (e) {
        i.set(e.name, e);
      }),
      e.forEach(function (e) {
        s.has(e.name) ||
          (function t(e) {
            s.add(e.name),
              []
                .concat(e.requires || [], e.requiresIfExists || [])
                .forEach(function (e) {
                  s.has(e) || ((e = i.get(e)) && t(e));
                }),
              a.push(e);
          })(e);
      }),
      a
    );
  }
  var Bt = { placement: "bottom", modifiers: [], strategy: "absolute" };
  function Ft() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return !t.some(function (e) {
      return !(e && "function" == typeof e.getBoundingClientRect);
    });
  }
  function Rt(e) {
    var e = (e = void 0 === e ? {} : e),
      t = e.defaultModifiers,
      l = void 0 === t ? [] : t,
      t = e.defaultOptions,
      d = void 0 === t ? Bt : t;
    return function (s, a, t) {
      void 0 === t && (t = d);
      var i,
        r,
        h = {
          placement: "bottom",
          orderedModifiers: [],
          options: Object.assign({}, Bt, d),
          modifiersData: {},
          elements: { reference: s, popper: a },
          attributes: {},
          styles: {},
        },
        n = [],
        m = !1,
        f = {
          state: h,
          setOptions: function (e) {
            e = "function" == typeof e ? e(h.options) : e;
            o(),
              (h.options = Object.assign({}, d, h.options, e)),
              (h.scrollParents = {
                reference: v(s)
                  ? Ct(s)
                  : s.contextElement
                  ? Ct(s.contextElement)
                  : [],
                popper: Ct(a),
              });
            (e = [].concat(l, h.options.modifiers)),
              (t = e.reduce(function (e, t) {
                var i = e[t.name];
                return (
                  (e[t.name] = i
                    ? Object.assign({}, i, t, {
                        options: Object.assign({}, i.options, t.options),
                        data: Object.assign({}, i.data, t.data),
                      })
                    : t),
                  e
                );
              }, {})),
              (i = qt(
                Object.keys(t).map(function (e) {
                  return t[e];
                })
              ));
            var t,
              i,
              e = Ke.reduce(function (e, t) {
                return e.concat(
                  i.filter(function (e) {
                    return e.phase === t;
                  })
                );
              }, []);
            return (
              (h.orderedModifiers = e.filter(function (e) {
                return e.enabled;
              })),
              h.orderedModifiers.forEach(function (e) {
                var t = e.name,
                  i = e.options,
                  e = e.effect;
                "function" == typeof e &&
                  ((e = e({
                    state: h,
                    name: t,
                    instance: f,
                    options: void 0 === i ? {} : i,
                  })),
                  n.push(e || function () {}));
              }),
              f.update()
            );
          },
          forceUpdate: function () {
            if (!m) {
              var e = h.elements,
                t = e.reference,
                e = e.popper;
              if (Ft(t, e)) {
                (h.rects = {
                  reference:
                    ((t = t),
                    (n = lt(e)),
                    void 0 === (o = "fixed" === h.options.strategy) && (o = !1),
                    (l = b(n)),
                    (d =
                      b(n) &&
                      ((p = (d = n).getBoundingClientRect()),
                      (c = et(p.width) / d.offsetWidth || 1),
                      (p = et(p.height) / d.offsetHeight || 1),
                      1 !== c || 1 !== p)),
                    (c = E(n)),
                    (p = st(t, d, o)),
                    (t = { scrollLeft: 0, scrollTop: 0 }),
                    (u = { x: 0, y: 0 }),
                    (!l && o) ||
                      (("body" === g(n) && !Mt(c)) ||
                        (t =
                          (l = n) !== y(l) && b(l)
                            ? {
                                scrollLeft: l.scrollLeft,
                                scrollTop: l.scrollTop,
                              }
                            : Tt(l)),
                      b(n)
                        ? (((u = st(n, !0)).x += n.clientLeft),
                          (u.y += n.clientTop))
                        : c && (u.x = St(c))),
                    {
                      x: p.left + t.scrollLeft - u.x,
                      y: p.top + t.scrollTop - u.y,
                      width: p.width,
                      height: p.height,
                    }),
                  popper: at(e),
                }),
                  (h.reset = !1),
                  (h.placement = h.options.placement),
                  h.orderedModifiers.forEach(function (e) {
                    return (h.modifiersData[e.name] = Object.assign(
                      {},
                      e.data
                    ));
                  });
                for (var i, s, a, r = 0; r < h.orderedModifiers.length; r++)
                  !0 !== h.reset
                    ? ((s = (i = h.orderedModifiers[r]).fn),
                      (a = i.options),
                      "function" == typeof s &&
                        (h =
                          s({
                            state: h,
                            options: void 0 === a ? {} : a,
                            name: i.name,
                            instance: f,
                          }) || h))
                    : ((h.reset = !1), (r = -1));
              }
            }
            var n, o, l, d, c, p, u;
          },
          update:
            ((i = function () {
              return new Promise(function (e) {
                f.forceUpdate(), e(h);
              });
            }),
            function () {
              return (r =
                r ||
                new Promise(function (e) {
                  Promise.resolve().then(function () {
                    (r = void 0), e(i());
                  });
                }));
            }),
          destroy: function () {
            o(), (m = !0);
          },
        };
      return (
        Ft(s, a) &&
          f.setOptions(t).then(function (e) {
            !m && t.onFirstUpdate && t.onFirstUpdate(e);
          }),
        f
      );
      function o() {
        n.forEach(function (e) {
          return e();
        }),
          (n = []);
      }
    };
  }
  var Wt = Rt(),
    $t = Rt({ defaultModifiers: [wt, jt, vt, Ze] }),
    Gt = Rt({ defaultModifiers: [wt, jt, vt, Ze, Nt, Pt, Ht, ht, zt] });
  let Xt = Object.freeze(
      Object.defineProperty(
        {
          __proto__: null,
          afterMain: Ye,
          afterRead: Ge,
          afterWrite: Ue,
          applyStyles: Ze,
          arrow: ht,
          auto: je,
          basePlacements: O,
          beforeMain: Xe,
          beforeRead: $e,
          beforeWrite: Ve,
          bottom: A,
          clippingParents: He,
          computeStyles: vt,
          createPopper: Gt,
          createPopperBase: Wt,
          createPopperLite: $t,
          detectOverflow: Ot,
          end: w,
          eventListeners: wt,
          flip: Pt,
          hide: zt,
          left: k,
          main: "main",
          modifierPhases: Ke,
          offset: Nt,
          placements: We,
          popper: Be,
          popperGenerator: Rt,
          popperOffsets: jt,
          preventOverflow: Ht,
          read: "read",
          reference: Fe,
          right: L,
          start: P,
          top: C,
          variationPlacements: Re,
          viewport: qe,
          write: "write",
        },
        Symbol.toStringTag,
        { value: "Module" }
      )
    ),
    Yt = "dropdown",
    Vt = ".bs.dropdown",
    Ut = ".data-api",
    Kt = "ArrowDown",
    Qt = "click" + Vt + Ut,
    Zt = "keydown" + Vt + Ut,
    Jt = "show",
    x = '[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',
    ei = (x, ".dropdown-menu"),
    ti = l() ? "top-end" : "top-start",
    ii = l() ? "top-start" : "top-end",
    si = l() ? "bottom-end" : "bottom-start",
    ai = l() ? "bottom-start" : "bottom-end",
    ri = l() ? "left-start" : "right-start",
    ni = l() ? "right-start" : "left-start",
    oi = {
      autoClose: !0,
      boundary: "clippingParents",
      display: "dynamic",
      offset: [0, 2],
      popperConfig: null,
      reference: "toggle",
    },
    li = {
      autoClose: "(boolean|string)",
      boundary: "(string|element)",
      display: "string",
      offset: "(array|string|function)",
      popperConfig: "(null|object|function)",
      reference: "(string|element|object)",
    };
  class T extends t {
    constructor(e, t) {
      super(e, t),
        (this._popper = null),
        (this._parent = this._element.parentNode),
        (this._menu =
          p.next(this._element, ei)[0] ||
          p.prev(this._element, ei)[0] ||
          p.findOne(ei, this._parent)),
        (this._inNavbar = this._detectNavbar());
    }
    static get Default() {
      return oi;
    }
    static get DefaultType() {
      return li;
    }
    static get NAME() {
      return Yt;
    }
    toggle() {
      return this._isShown() ? this.hide() : this.show();
    }
    show() {
      if (!o(this._element) && !this._isShown()) {
        let e = { relatedTarget: this._element };
        if (!m.trigger(this._element, "show.bs.dropdown", e).defaultPrevented) {
          if (
            (this._createPopper(),
            "ontouchstart" in document.documentElement &&
              !this._parent.closest(".navbar-nav"))
          )
            for (let e of [].concat(...document.body.children))
              m.on(e, "mouseover", F);
          this._element.focus(),
            this._element.setAttribute("aria-expanded", !0),
            this._menu.classList.add(Jt),
            this._element.classList.add(Jt),
            m.trigger(this._element, "shown.bs.dropdown", e);
        }
      }
    }
    hide() {
      var e;
      !o(this._element) &&
        this._isShown() &&
        ((e = { relatedTarget: this._element }), this._completeHide(e));
    }
    dispose() {
      this._popper && this._popper.destroy(), super.dispose();
    }
    update() {
      (this._inNavbar = this._detectNavbar()),
        this._popper && this._popper.update();
    }
    _completeHide(e) {
      if (!m.trigger(this._element, "hide.bs.dropdown", e).defaultPrevented) {
        if ("ontouchstart" in document.documentElement)
          for (let e of [].concat(...document.body.children))
            m.off(e, "mouseover", F);
        this._popper && this._popper.destroy(),
          this._menu.classList.remove(Jt),
          this._element.classList.remove(Jt),
          this._element.setAttribute("aria-expanded", "false"),
          c.removeDataAttribute(this._menu, "popper"),
          m.trigger(this._element, "hidden.bs.dropdown", e);
      }
    }
    _getConfig(e) {
      if (
        "object" != typeof (e = super._getConfig(e)).reference ||
        n(e.reference) ||
        "function" == typeof e.reference.getBoundingClientRect
      )
        return e;
      throw new TypeError(
        Yt.toUpperCase() +
          ': Option "reference" provided type "object" without a required "getBoundingClientRect" method.'
      );
    }
    _createPopper() {
      if (void 0 === Xt)
        throw new TypeError(
          "Bootstrap's dropdowns require Popper (https://popper.js.org/docs/v2/)"
        );
      let e = this._element;
      "parent" === this._config.reference
        ? (e = this._parent)
        : n(this._config.reference)
        ? (e = a(this._config.reference))
        : "object" == typeof this._config.reference &&
          (e = this._config.reference);
      var t = this._getPopperConfig();
      this._popper = Gt(e, this._menu, t);
    }
    _isShown() {
      return this._menu.classList.contains(Jt);
    }
    _getPlacement() {
      var e,
        t = this._parent;
      return t.classList.contains("dropend")
        ? ri
        : t.classList.contains("dropstart")
        ? ni
        : t.classList.contains("dropup-center")
        ? "top"
        : t.classList.contains("dropdown-center")
        ? "bottom"
        : ((e =
            "end" ===
            getComputedStyle(this._menu)
              .getPropertyValue("--bs-position")
              .trim()),
          t.classList.contains("dropup") ? (e ? ii : ti) : e ? ai : si);
    }
    _detectNavbar() {
      return null !== this._element.closest(".navbar");
    }
    _getOffset() {
      let t = this._config.offset;
      return "string" == typeof t
        ? t.split(",").map((e) => Number.parseInt(e, 10))
        : "function" == typeof t
        ? (e) => t(e, this._element)
        : t;
    }
    _getPopperConfig() {
      var e = {
        placement: this._getPlacement(),
        modifiers: [
          {
            name: "preventOverflow",
            options: { boundary: this._config.boundary },
          },
          { name: "offset", options: { offset: this._getOffset() } },
        ],
      };
      return (
        (!this._inNavbar && "static" !== this._config.display) ||
          (c.setDataAttribute(this._menu, "popper", "static"),
          (e.modifiers = [{ name: "applyStyles", enabled: !1 }])),
        { ...e, ...d(this._config.popperConfig, [void 0, e]) }
      );
    }
    _selectMenuItem({ key: e, target: t }) {
      var i = p
        .find(
          ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",
          this._menu
        )
        .filter((e) => r(e));
      i.length && X(i, t, e === Kt, !i.includes(t)).focus();
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = T.getOrCreateInstance(this, t);
        if ("string" == typeof t) {
          if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`);
          e[t]();
        }
      });
    }
    static clearMenus(t) {
      if (2 !== t.button && ("keyup" !== t.type || "Tab" === t.key)) {
        let e = p.find(
          '[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled).show'
        );
        for (var i of e) {
          let e = T.getInstance(i);
          var s;
          e &&
            !1 !== e._config.autoClose &&
            ((s = (i = t.composedPath()).includes(e._menu)),
            i.includes(e._element) ||
              ("inside" === e._config.autoClose && !s) ||
              ("outside" === e._config.autoClose && s) ||
              (e._menu.contains(t.target) &&
                (("keyup" === t.type && "Tab" === t.key) ||
                  /input|select|option|textarea|form/i.test(
                    t.target.tagName
                  ))) ||
              ((i = { relatedTarget: e._element }),
              "click" === t.type && (i.clickEvent = t),
              e._completeHide(i)));
        }
      }
    }
    static dataApiKeydownHandler(e) {
      var t = /input|textarea/i.test(e.target.tagName),
        i = "Escape" === e.key,
        s = ["ArrowUp", Kt].includes(e.key);
      (!s && !i) ||
        (t && !i) ||
        (e.preventDefault(),
        (t = this.matches(x)
          ? this
          : p.prev(this, x)[0] ||
            p.next(this, x)[0] ||
            p.findOne(x, e.delegateTarget.parentNode)),
        (i = T.getOrCreateInstance(t)),
        s
          ? (e.stopPropagation(), i.show(), i._selectMenuItem(e))
          : i._isShown() && (e.stopPropagation(), i.hide(), t.focus()));
    }
  }
  m.on(document, Zt, x, T.dataApiKeydownHandler),
    m.on(document, Zt, ei, T.dataApiKeydownHandler),
    m.on(document, Qt, T.clearMenus),
    m.on(document, "keyup.bs.dropdown.data-api", T.clearMenus),
    m.on(document, Qt, x, function (e) {
      e.preventDefault(), T.getOrCreateInstance(this).toggle();
    }),
    e(T);
  let di = "backdrop",
    ci = "mousedown.bs." + di,
    pi = {
      className: "modal-backdrop",
      clickCallback: null,
      isAnimated: !1,
      isVisible: !0,
      rootElement: "body",
    },
    ui = {
      className: "string",
      clickCallback: "(function|null)",
      isAnimated: "boolean",
      isVisible: "boolean",
      rootElement: "(element|string)",
    };
  class hi extends ce {
    constructor(e) {
      super(),
        (this._config = this._getConfig(e)),
        (this._isAppended = !1),
        (this._element = null);
    }
    static get Default() {
      return pi;
    }
    static get DefaultType() {
      return ui;
    }
    static get NAME() {
      return di;
    }
    show(e) {
      var t;
      this._config.isVisible
        ? (this._append(),
          (t = this._getElement()),
          this._config.isAnimated && R(t),
          t.classList.add("show"),
          this._emulateAnimation(() => {
            d(e);
          }))
        : d(e);
    }
    hide(e) {
      this._config.isVisible
        ? (this._getElement().classList.remove("show"),
          this._emulateAnimation(() => {
            this.dispose(), d(e);
          }))
        : d(e);
    }
    dispose() {
      this._isAppended &&
        (m.off(this._element, ci),
        this._element.remove(),
        (this._isAppended = !1));
    }
    _getElement() {
      var e;
      return (
        this._element ||
          (((e = document.createElement("div")).className =
            this._config.className),
          this._config.isAnimated && e.classList.add("fade"),
          (this._element = e)),
        this._element
      );
    }
    _configAfterMerge(e) {
      return (e.rootElement = a(e.rootElement)), e;
    }
    _append() {
      var e;
      this._isAppended ||
        ((e = this._getElement()),
        this._config.rootElement.append(e),
        m.on(e, ci, () => {
          d(this._config.clickCallback);
        }),
        (this._isAppended = !0));
    }
    _emulateAnimation(e) {
      G(e, this._getElement(), this._config.isAnimated);
    }
  }
  let mi = ".bs.focustrap",
    fi = (mi, mi, "backward"),
    gi = { autofocus: !0, trapElement: null },
    vi = { autofocus: "boolean", trapElement: "element" };
  class bi extends ce {
    constructor(e) {
      super(),
        (this._config = this._getConfig(e)),
        (this._isActive = !1),
        (this._lastTabNavDirection = null);
    }
    static get Default() {
      return gi;
    }
    static get DefaultType() {
      return vi;
    }
    static get NAME() {
      return "focustrap";
    }
    activate() {
      this._isActive ||
        (this._config.autofocus && this._config.trapElement.focus(),
        m.off(document, mi),
        m.on(document, "focusin.bs.focustrap", (e) => this._handleFocusin(e)),
        m.on(document, "keydown.tab.bs.focustrap", (e) =>
          this._handleKeydown(e)
        ),
        (this._isActive = !0));
    }
    deactivate() {
      this._isActive && ((this._isActive = !1), m.off(document, mi));
    }
    _handleFocusin(e) {
      var t = this._config.trapElement;
      e.target === document ||
        e.target === t ||
        t.contains(e.target) ||
        (0 === (e = p.focusableChildren(t)).length
          ? t
          : this._lastTabNavDirection === fi
          ? e[e.length - 1]
          : e[0]
        ).focus();
    }
    _handleKeydown(e) {
      "Tab" === e.key &&
        (this._lastTabNavDirection = e.shiftKey ? fi : "forward");
    }
  }
  let wi = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
    yi = ".sticky-top",
    _i = "padding-right",
    Ei = "margin-right";
  class xi {
    constructor() {
      this._element = document.body;
    }
    getWidth() {
      var e = document.documentElement.clientWidth;
      return Math.abs(window.innerWidth - e);
    }
    hide() {
      let t = this.getWidth();
      this._disableOverFlow(),
        this._setElementAttributes(this._element, _i, (e) => e + t),
        this._setElementAttributes(wi, _i, (e) => e + t),
        this._setElementAttributes(yi, Ei, (e) => e - t);
    }
    reset() {
      this._resetElementAttributes(this._element, "overflow"),
        this._resetElementAttributes(this._element, _i),
        this._resetElementAttributes(wi, _i),
        this._resetElementAttributes(yi, Ei);
    }
    isOverflowing() {
      return 0 < this.getWidth();
    }
    _disableOverFlow() {
      this._saveInitialAttribute(this._element, "overflow"),
        (this._element.style.overflow = "hidden");
    }
    _setElementAttributes(e, i, s) {
      let a = this.getWidth();
      this._applyManipulationCallback(e, (e) => {
        var t;
        (e !== this._element && window.innerWidth > e.clientWidth + a) ||
          (this._saveInitialAttribute(e, i),
          (t = window.getComputedStyle(e).getPropertyValue(i)),
          e.style.setProperty(i, s(Number.parseFloat(t)) + "px"));
      });
    }
    _saveInitialAttribute(e, t) {
      var i = e.style.getPropertyValue(t);
      i && c.setDataAttribute(e, t, i);
    }
    _resetElementAttributes(e, i) {
      this._applyManipulationCallback(e, (e) => {
        var t = c.getDataAttribute(e, i);
        null !== t
          ? (c.removeDataAttribute(e, i), e.style.setProperty(i, t))
          : e.style.removeProperty(i);
      });
    }
    _applyManipulationCallback(e, t) {
      if (n(e)) t(e);
      else for (var i of p.find(e, this._element)) t(i);
    }
  }
  let S = ".bs.modal",
    Ti = (S, S, "hidden" + S),
    Si = "show" + S,
    Mi = (S, S, S, S, S, S, "modal-open"),
    Ci = "modal-static",
    Ai = { backdrop: !0, focus: !0, keyboard: !0 },
    Li = {
      backdrop: "(boolean|string)",
      focus: "boolean",
      keyboard: "boolean",
    };
  class ki extends t {
    constructor(e, t) {
      super(e, t),
        (this._dialog = p.findOne(".modal-dialog", this._element)),
        (this._backdrop = this._initializeBackDrop()),
        (this._focustrap = this._initializeFocusTrap()),
        (this._isShown = !1),
        (this._isTransitioning = !1),
        (this._scrollBar = new xi()),
        this._addEventListeners();
    }
    static get Default() {
      return Ai;
    }
    static get DefaultType() {
      return Li;
    }
    static get NAME() {
      return "modal";
    }
    toggle(e) {
      return this._isShown ? this.hide() : this.show(e);
    }
    show(e) {
      this._isShown ||
        this._isTransitioning ||
        m.trigger(this._element, Si, { relatedTarget: e }).defaultPrevented ||
        ((this._isShown = !0),
        (this._isTransitioning = !0),
        this._scrollBar.hide(),
        document.body.classList.add(Mi),
        this._adjustDialog(),
        this._backdrop.show(() => this._showElement(e)));
    }
    hide() {
      !this._isShown ||
        this._isTransitioning ||
        m.trigger(this._element, "hide.bs.modal").defaultPrevented ||
        ((this._isShown = !1),
        (this._isTransitioning = !0),
        this._focustrap.deactivate(),
        this._element.classList.remove("show"),
        this._queueCallback(
          () => this._hideModal(),
          this._element,
          this._isAnimated()
        ));
    }
    dispose() {
      m.off(window, S),
        m.off(this._dialog, S),
        this._backdrop.dispose(),
        this._focustrap.deactivate(),
        super.dispose();
    }
    handleUpdate() {
      this._adjustDialog();
    }
    _initializeBackDrop() {
      return new hi({
        isVisible: Boolean(this._config.backdrop),
        isAnimated: this._isAnimated(),
      });
    }
    _initializeFocusTrap() {
      return new bi({ trapElement: this._element });
    }
    _showElement(e) {
      document.body.contains(this._element) ||
        document.body.append(this._element),
        (this._element.style.display = "block"),
        this._element.removeAttribute("aria-hidden"),
        this._element.setAttribute("aria-modal", !0),
        this._element.setAttribute("role", "dialog"),
        (this._element.scrollTop = 0);
      var t = p.findOne(".modal-body", this._dialog);
      t && (t.scrollTop = 0),
        R(this._element),
        this._element.classList.add("show"),
        this._queueCallback(
          () => {
            this._config.focus && this._focustrap.activate(),
              (this._isTransitioning = !1),
              m.trigger(this._element, "shown.bs.modal", { relatedTarget: e });
          },
          this._dialog,
          this._isAnimated()
        );
    }
    _addEventListeners() {
      m.on(this._element, "keydown.dismiss.bs.modal", (e) => {
        "Escape" === e.key &&
          (this._config.keyboard
            ? this.hide()
            : this._triggerBackdropTransition());
      }),
        m.on(window, "resize.bs.modal", () => {
          this._isShown && !this._isTransitioning && this._adjustDialog();
        }),
        m.on(this._element, "mousedown.dismiss.bs.modal", (t) => {
          m.one(this._element, "click.dismiss.bs.modal", (e) => {
            this._element === t.target &&
              this._element === e.target &&
              ("static" !== this._config.backdrop
                ? this._config.backdrop && this.hide()
                : this._triggerBackdropTransition());
          });
        });
    }
    _hideModal() {
      (this._element.style.display = "none"),
        this._element.setAttribute("aria-hidden", !0),
        this._element.removeAttribute("aria-modal"),
        this._element.removeAttribute("role"),
        (this._isTransitioning = !1),
        this._backdrop.hide(() => {
          document.body.classList.remove(Mi),
            this._resetAdjustments(),
            this._scrollBar.reset(),
            m.trigger(this._element, Ti);
        });
    }
    _isAnimated() {
      return this._element.classList.contains("fade");
    }
    _triggerBackdropTransition() {
      if (
        !m.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented
      ) {
        let e =
            this._element.scrollHeight > document.documentElement.clientHeight,
          t = this._element.style.overflowY;
        "hidden" === t ||
          this._element.classList.contains(Ci) ||
          (e || (this._element.style.overflowY = "hidden"),
          this._element.classList.add(Ci),
          this._queueCallback(() => {
            this._element.classList.remove(Ci),
              this._queueCallback(() => {
                this._element.style.overflowY = t;
              }, this._dialog);
          }, this._dialog),
          this._element.focus());
      }
    }
    _adjustDialog() {
      let e =
          this._element.scrollHeight > document.documentElement.clientHeight,
        t = this._scrollBar.getWidth(),
        i = 0 < t;
      if (i && !e) {
        let e = l() ? "paddingLeft" : "paddingRight";
        this._element.style[e] = t + "px";
      }
      if (!i && e) {
        let e = l() ? "paddingRight" : "paddingLeft";
        this._element.style[e] = t + "px";
      }
    }
    _resetAdjustments() {
      (this._element.style.paddingLeft = ""),
        (this._element.style.paddingRight = "");
    }
    static jQueryInterface(t, i) {
      return this.each(function () {
        var e = ki.getOrCreateInstance(this, t);
        if ("string" == typeof t) {
          if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`);
          e[t](i);
        }
      });
    }
  }
  m.on(
    document,
    "click.bs.modal.data-api",
    '[data-bs-toggle="modal"]',
    function (e) {
      let t = p.getElementFromSelector(this);
      ["A", "AREA"].includes(this.tagName) && e.preventDefault(),
        m.one(t, Si, (e) => {
          e.defaultPrevented ||
            m.one(t, Ti, () => {
              r(this) && this.focus();
            });
        });
      e = p.findOne(".modal.show");
      e && ki.getInstance(e).hide(), ki.getOrCreateInstance(t).toggle(this);
    }
  ),
    ue(ki),
    e(ki);
  let Oi = ".bs.offcanvas",
    Pi = "showing",
    Ii = ".offcanvas.show",
    Di = "hidePrevented" + Oi,
    zi = "hidden" + Oi,
    Ni = { backdrop: !0, keyboard: !0, scroll: !1 },
    ji = {
      backdrop: "(boolean|string)",
      keyboard: "boolean",
      scroll: "boolean",
    };
  class D extends t {
    constructor(e, t) {
      super(e, t),
        (this._isShown = !1),
        (this._backdrop = this._initializeBackDrop()),
        (this._focustrap = this._initializeFocusTrap()),
        this._addEventListeners();
    }
    static get Default() {
      return Ni;
    }
    static get DefaultType() {
      return ji;
    }
    static get NAME() {
      return "offcanvas";
    }
    toggle(e) {
      return this._isShown ? this.hide() : this.show(e);
    }
    show(e) {
      this._isShown ||
        m.trigger(this._element, "show.bs.offcanvas", { relatedTarget: e })
          .defaultPrevented ||
        ((this._isShown = !0),
        this._backdrop.show(),
        this._config.scroll || new xi().hide(),
        this._element.setAttribute("aria-modal", !0),
        this._element.setAttribute("role", "dialog"),
        this._element.classList.add(Pi),
        this._queueCallback(
          () => {
            (this._config.scroll && !this._config.backdrop) ||
              this._focustrap.activate(),
              this._element.classList.add("show"),
              this._element.classList.remove(Pi),
              m.trigger(this._element, "shown.bs.offcanvas", {
                relatedTarget: e,
              });
          },
          this._element,
          !0
        ));
    }
    hide() {
      !this._isShown ||
        m.trigger(this._element, "hide.bs.offcanvas").defaultPrevented ||
        (this._focustrap.deactivate(),
        this._element.blur(),
        (this._isShown = !1),
        this._element.classList.add("hiding"),
        this._backdrop.hide(),
        this._queueCallback(
          () => {
            this._element.classList.remove("show", "hiding"),
              this._element.removeAttribute("aria-modal"),
              this._element.removeAttribute("role"),
              this._config.scroll || new xi().reset(),
              m.trigger(this._element, zi);
          },
          this._element,
          !0
        ));
    }
    dispose() {
      this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose();
    }
    _initializeBackDrop() {
      var e = Boolean(this._config.backdrop);
      return new hi({
        className: "offcanvas-backdrop",
        isVisible: e,
        isAnimated: !0,
        rootElement: this._element.parentNode,
        clickCallback: e
          ? () => {
              "static" !== this._config.backdrop
                ? this.hide()
                : m.trigger(this._element, Di);
            }
          : null,
      });
    }
    _initializeFocusTrap() {
      return new bi({ trapElement: this._element });
    }
    _addEventListeners() {
      m.on(this._element, "keydown.dismiss.bs.offcanvas", (e) => {
        "Escape" === e.key &&
          (this._config.keyboard ? this.hide() : m.trigger(this._element, Di));
      });
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = D.getOrCreateInstance(this, t);
        if ("string" == typeof t) {
          if (void 0 === e[t] || t.startsWith("_") || "constructor" === t)
            throw new TypeError(`No method named "${t}"`);
          e[t](this);
        }
      });
    }
  }
  m.on(
    document,
    "click.bs.offcanvas.data-api",
    '[data-bs-toggle="offcanvas"]',
    function (e) {
      var t = p.getElementFromSelector(this);
      ["A", "AREA"].includes(this.tagName) && e.preventDefault(),
        o(this) ||
          (m.one(t, zi, () => {
            r(this) && this.focus();
          }),
          (e = p.findOne(Ii)) && e !== t && D.getInstance(e).hide(),
          D.getOrCreateInstance(t).toggle(this));
    }
  ),
    m.on(window, "load.bs.offcanvas.data-api", () => {
      for (var e of p.find(Ii)) D.getOrCreateInstance(e).show();
    }),
    m.on(window, "resize.bs.offcanvas", () => {
      for (var e of p.find("[aria-modal][class*=show][class*=offcanvas-]"))
        "fixed" !== getComputedStyle(e).position &&
          D.getOrCreateInstance(e).hide();
    }),
    ue(D),
    e(D);
  let Hi = {
      "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
      a: ["target", "href", "title", "rel"],
      area: [],
      b: [],
      br: [],
      col: [],
      code: [],
      dd: [],
      div: [],
      dl: [],
      dt: [],
      em: [],
      hr: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      i: [],
      img: ["src", "srcset", "alt", "title", "width", "height"],
      li: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      small: [],
      span: [],
      sub: [],
      sup: [],
      strong: [],
      u: [],
      ul: [],
    },
    qi = new Set([
      "background",
      "cite",
      "href",
      "itemtype",
      "longdesc",
      "poster",
      "src",
      "xlink:href",
    ]),
    Bi = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,
    Fi = {
      allowList: Hi,
      content: {},
      extraClass: "",
      html: !1,
      sanitize: !0,
      sanitizeFn: null,
      template: "<div></div>",
    },
    Ri = {
      allowList: "object",
      content: "object",
      extraClass: "(string|function)",
      html: "boolean",
      sanitize: "boolean",
      sanitizeFn: "(null|function)",
      template: "string",
    },
    Wi = {
      entry: "(string|element|function|null)",
      selector: "(string|element)",
    };
  class $i extends ce {
    constructor(e) {
      super(), (this._config = this._getConfig(e));
    }
    static get Default() {
      return Fi;
    }
    static get DefaultType() {
      return Ri;
    }
    static get NAME() {
      return "TemplateFactory";
    }
    getContent() {
      return Object.values(this._config.content)
        .map((e) => this._resolvePossibleFunction(e))
        .filter(Boolean);
    }
    hasContent() {
      return 0 < this.getContent().length;
    }
    changeContent(e) {
      return (
        this._checkContent(e),
        (this._config.content = { ...this._config.content, ...e }),
        this
      );
    }
    toHtml() {
      var i = document.createElement("div");
      i.innerHTML = this._maybeSanitize(this._config.template);
      for (let [e, t] of Object.entries(this._config.content))
        this._setContent(i, t, e);
      let e = i.children[0],
        t = this._resolvePossibleFunction(this._config.extraClass);
      return t && e.classList.add(...t.split(" ")), e;
    }
    _typeCheckConfig(e) {
      super._typeCheckConfig(e), this._checkContent(e.content);
    }
    _checkContent(e) {
      for (var [t, i] of Object.entries(e))
        super._typeCheckConfig({ selector: t, entry: i }, Wi);
    }
    _setContent(e, t, i) {
      i = p.findOne(i, e);
      i &&
        ((t = this._resolvePossibleFunction(t))
          ? n(t)
            ? this._putElementInTemplate(a(t), i)
            : this._config.html
            ? (i.innerHTML = this._maybeSanitize(t))
            : (i.textContent = t)
          : i.remove());
    }
    _maybeSanitize(i) {
      if (this._config.sanitize) {
        var s = i,
          a = this._config.allowList,
          r = this._config.sanitizeFn;
        if (!s.length) return s;
        if (r && "function" == typeof r) return r(s);
        let e = new window.DOMParser().parseFromString(s, "text/html"),
          t = [].concat(...e.body.querySelectorAll("*"));
        for (let s of t) {
          let e = s.nodeName.toLowerCase();
          if (Object.keys(a).includes(e)) {
            let t = [].concat(...s.attributes),
              i = [].concat(a["*"] || [], a[e] || []);
            for (let e of t)
              ((e, t) => {
                let i = e.nodeName.toLowerCase();
                return t.includes(i)
                  ? !qi.has(i) || Boolean(Bi.test(e.nodeValue))
                  : t.filter((e) => e instanceof RegExp).some((e) => e.test(i));
              })(e, i) || s.removeAttribute(e.nodeName);
          } else s.remove();
        }
        return e.body.innerHTML;
      }
      return i;
    }
    _resolvePossibleFunction(e) {
      return d(e, [void 0, this]);
    }
    _putElementInTemplate(e, t) {
      this._config.html
        ? ((t.innerHTML = ""), t.append(e))
        : (t.textContent = e.textContent);
    }
  }
  let Gi = new Set(["sanitize", "allowList", "sanitizeFn"]),
    Xi = "fade",
    Yi = "show",
    Vi = "hide.bs.modal",
    Ui = "hover",
    Ki = "focus",
    Qi = "click",
    Zi = {
      AUTO: "auto",
      TOP: "top",
      RIGHT: l() ? "left" : "right",
      BOTTOM: "bottom",
      LEFT: l() ? "right" : "left",
    },
    Ji = {
      allowList: Hi,
      animation: !0,
      boundary: "clippingParents",
      container: !1,
      customClass: "",
      delay: 0,
      fallbackPlacements: ["top", "right", "bottom", "left"],
      html: !1,
      offset: [0, 6],
      placement: "top",
      popperConfig: null,
      sanitize: !0,
      sanitizeFn: null,
      selector: !1,
      template:
        '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
      title: "",
      trigger: "hover focus",
    },
    es = {
      allowList: "object",
      animation: "boolean",
      boundary: "(string|element)",
      container: "(string|element|boolean)",
      customClass: "(string|function)",
      delay: "(number|object)",
      fallbackPlacements: "array",
      html: "boolean",
      offset: "(array|string|function)",
      placement: "(string|function)",
      popperConfig: "(null|object|function)",
      sanitize: "boolean",
      sanitizeFn: "(null|function)",
      selector: "(string|boolean)",
      template: "string",
      title: "(string|element|function)",
      trigger: "string",
    };
  class ts extends t {
    constructor(e, t) {
      if (void 0 === Xt)
        throw new TypeError(
          "Bootstrap's tooltips require Popper (https://popper.js.org/docs/v2/)"
        );
      super(e, t),
        (this._isEnabled = !0),
        (this._timeout = 0),
        (this._isHovered = null),
        (this._activeTrigger = {}),
        (this._popper = null),
        (this._templateFactory = null),
        (this._newContent = null),
        (this.tip = null),
        this._setListeners(),
        this._config.selector || this._fixTitle();
    }
    static get Default() {
      return Ji;
    }
    static get DefaultType() {
      return es;
    }
    static get NAME() {
      return "tooltip";
    }
    enable() {
      this._isEnabled = !0;
    }
    disable() {
      this._isEnabled = !1;
    }
    toggleEnabled() {
      this._isEnabled = !this._isEnabled;
    }
    toggle() {
      this._isEnabled && (this._isShown() ? this._leave() : this._enter());
    }
    dispose() {
      clearTimeout(this._timeout),
        m.off(this._element.closest(".modal"), Vi, this._hideModalHandler),
        this._element.getAttribute("data-bs-original-title") &&
          this._element.setAttribute(
            "title",
            this._element.getAttribute("data-bs-original-title")
          ),
        this._disposePopper(),
        super.dispose();
    }
    show() {
      if ("none" === this._element.style.display)
        throw new Error("Please use show on visible elements");
      if (this._isWithContent() && this._isEnabled) {
        let e = m.trigger(this._element, this.constructor.eventName("show")),
          t = (
            B(this._element) || this._element.ownerDocument.documentElement
          ).contains(this._element);
        if (!e.defaultPrevented && t) {
          this._disposePopper();
          var i = this._getTipElement(),
            s = (this._element.setAttribute(
              "aria-describedby",
              i.getAttribute("id")
            ),
            this._config).container;
          if (
            (this._element.ownerDocument.documentElement.contains(this.tip) ||
              (s.append(i),
              m.trigger(this._element, this.constructor.eventName("inserted"))),
            (this._popper = this._createPopper(i)),
            i.classList.add(Yi),
            "ontouchstart" in document.documentElement)
          )
            for (let e of [].concat(...document.body.children))
              m.on(e, "mouseover", F);
          this._queueCallback(
            () => {
              m.trigger(this._element, this.constructor.eventName("shown")),
                !1 === this._isHovered && this._leave(),
                (this._isHovered = !1);
            },
            this.tip,
            this._isAnimated()
          );
        }
      }
    }
    hide() {
      if (
        this._isShown() &&
        !m.trigger(this._element, this.constructor.eventName("hide"))
          .defaultPrevented
      ) {
        if (
          (this._getTipElement().classList.remove(Yi),
          "ontouchstart" in document.documentElement)
        )
          for (var e of [].concat(...document.body.children))
            m.off(e, "mouseover", F);
        (this._activeTrigger[Qi] = !1),
          (this._activeTrigger[Ki] = !1),
          (this._activeTrigger[Ui] = !1),
          (this._isHovered = null),
          this._queueCallback(
            () => {
              this._isWithActiveTrigger() ||
                (this._isHovered || this._disposePopper(),
                this._element.removeAttribute("aria-describedby"),
                m.trigger(this._element, this.constructor.eventName("hidden")));
            },
            this.tip,
            this._isAnimated()
          );
      }
    }
    update() {
      this._popper && this._popper.update();
    }
    _isWithContent() {
      return Boolean(this._getTitle());
    }
    _getTipElement() {
      return (
        this.tip ||
          (this.tip = this._createTipElement(
            this._newContent || this._getContentForTemplate()
          )),
        this.tip
      );
    }
    _createTipElement(e) {
      e = this._getTemplateFactory(e).toHtml();
      if (!e) return null;
      e.classList.remove(Xi, Yi),
        e.classList.add(`bs-${this.constructor.NAME}-auto`);
      var t = ((e) => {
        for (
          ;
          (e += Math.floor(1e6 * Math.random())), document.getElementById(e);

        );
        return e;
      })(this.constructor.NAME).toString();
      return (
        e.setAttribute("id", t), this._isAnimated() && e.classList.add(Xi), e
      );
    }
    setContent(e) {
      (this._newContent = e),
        this._isShown() && (this._disposePopper(), this.show());
    }
    _getTemplateFactory(e) {
      return (
        this._templateFactory
          ? this._templateFactory.changeContent(e)
          : (this._templateFactory = new $i({
              ...this._config,
              content: e,
              extraClass: this._resolvePossibleFunction(
                this._config.customClass
              ),
            })),
        this._templateFactory
      );
    }
    _getContentForTemplate() {
      return { ".tooltip-inner": this._getTitle() };
    }
    _getTitle() {
      return (
        this._resolvePossibleFunction(this._config.title) ||
        this._element.getAttribute("data-bs-original-title")
      );
    }
    _initializeOnDelegatedTarget(e) {
      return this.constructor.getOrCreateInstance(
        e.delegateTarget,
        this._getDelegateConfig()
      );
    }
    _isAnimated() {
      return (
        this._config.animation || (this.tip && this.tip.classList.contains(Xi))
      );
    }
    _isShown() {
      return this.tip && this.tip.classList.contains(Yi);
    }
    _createPopper(e) {
      var t = d(this._config.placement, [this, e, this._element]),
        t = Zi[t.toUpperCase()];
      return Gt(this._element, e, this._getPopperConfig(t));
    }
    _getOffset() {
      let t = this._config.offset;
      return "string" == typeof t
        ? t.split(",").map((e) => Number.parseInt(e, 10))
        : "function" == typeof t
        ? (e) => t(e, this._element)
        : t;
    }
    _resolvePossibleFunction(e) {
      return d(e, [this._element, this._element]);
    }
    _getPopperConfig(e) {
      e = {
        placement: e,
        modifiers: [
          {
            name: "flip",
            options: { fallbackPlacements: this._config.fallbackPlacements },
          },
          { name: "offset", options: { offset: this._getOffset() } },
          {
            name: "preventOverflow",
            options: { boundary: this._config.boundary },
          },
          {
            name: "arrow",
            options: { element: `.${this.constructor.NAME}-arrow` },
          },
          {
            name: "preSetPlacement",
            enabled: !0,
            phase: "beforeMain",
            fn: (e) => {
              this._getTipElement().setAttribute(
                "data-popper-placement",
                e.state.placement
              );
            },
          },
        ],
      };
      return { ...e, ...d(this._config.popperConfig, [void 0, e]) };
    }
    _setListeners() {
      let e = this._config.trigger.split(" ");
      for (var i of e)
        if ("click" === i)
          m.on(
            this._element,
            this.constructor.eventName("click"),
            this._config.selector,
            (e) => {
              e = this._initializeOnDelegatedTarget(e);
              (e._activeTrigger[Qi] = !(e._isShown() && e._activeTrigger[Qi])),
                e.toggle();
            }
          );
        else if ("manual" !== i) {
          let e =
              i === Ui
                ? this.constructor.eventName("mouseenter")
                : this.constructor.eventName("focusin"),
            t =
              i === Ui
                ? this.constructor.eventName("mouseleave")
                : this.constructor.eventName("focusout");
          m.on(this._element, e, this._config.selector, (e) => {
            var t = this._initializeOnDelegatedTarget(e);
            (t._activeTrigger["focusin" === e.type ? Ki : Ui] = !0), t._enter();
          }),
            m.on(this._element, t, this._config.selector, (e) => {
              var t = this._initializeOnDelegatedTarget(e);
              (t._activeTrigger["focusout" === e.type ? Ki : Ui] =
                t._element.contains(e.relatedTarget)),
                t._leave();
            });
        }
      (this._hideModalHandler = () => {
        this._element && this.hide();
      }),
        m.on(this._element.closest(".modal"), Vi, this._hideModalHandler);
    }
    _fixTitle() {
      var e = this._element.getAttribute("title");
      e &&
        (this._element.getAttribute("aria-label") ||
          this._element.textContent.trim() ||
          this._element.setAttribute("aria-label", e),
        this._element.setAttribute("data-bs-original-title", e),
        this._element.removeAttribute("title"));
    }
    _enter() {
      this._isShown() || this._isHovered
        ? (this._isHovered = !0)
        : ((this._isHovered = !0),
          this._setTimeout(() => {
            this._isHovered && this.show();
          }, this._config.delay.show));
    }
    _leave() {
      this._isWithActiveTrigger() ||
        ((this._isHovered = !1),
        this._setTimeout(() => {
          this._isHovered || this.hide();
        }, this._config.delay.hide));
    }
    _setTimeout(e, t) {
      clearTimeout(this._timeout), (this._timeout = setTimeout(e, t));
    }
    _isWithActiveTrigger() {
      return Object.values(this._activeTrigger).includes(!0);
    }
    _getConfig(e) {
      var t = c.getDataAttributes(this._element);
      for (let e of Object.keys(t)) Gi.has(e) && delete t[e];
      return (
        (e = { ...t, ...("object" == typeof e && e ? e : {}) }),
        (e = this._mergeConfigObj(e)),
        (e = this._configAfterMerge(e)),
        this._typeCheckConfig(e),
        e
      );
    }
    _configAfterMerge(e) {
      return (
        (e.container = !1 === e.container ? document.body : a(e.container)),
        "number" == typeof e.delay &&
          (e.delay = { show: e.delay, hide: e.delay }),
        "number" == typeof e.title && (e.title = e.title.toString()),
        "number" == typeof e.content && (e.content = e.content.toString()),
        e
      );
    }
    _getDelegateConfig() {
      var e,
        t,
        i = {};
      for ([e, t] of Object.entries(this._config))
        this.constructor.Default[e] !== t && (i[e] = t);
      return (i.selector = !1), (i.trigger = "manual"), i;
    }
    _disposePopper() {
      this._popper && (this._popper.destroy(), (this._popper = null)),
        this.tip && (this.tip.remove(), (this.tip = null));
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = ts.getOrCreateInstance(this, t);
        if ("string" == typeof t) {
          if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`);
          e[t]();
        }
      });
    }
  }
  e(ts);
  let is = {
      ...ts.Default,
      content: "",
      offset: [0, 8],
      placement: "right",
      template:
        '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
      trigger: "click",
    },
    ss = { ...ts.DefaultType, content: "(null|string|element|function)" };
  class as extends ts {
    static get Default() {
      return is;
    }
    static get DefaultType() {
      return ss;
    }
    static get NAME() {
      return "popover";
    }
    _isWithContent() {
      return this._getTitle() || this._getContent();
    }
    _getContentForTemplate() {
      return {
        ".popover-header": this._getTitle(),
        ".popover-body": this._getContent(),
      };
    }
    _getContent() {
      return this._resolvePossibleFunction(this._config.content);
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = as.getOrCreateInstance(this, t);
        if ("string" == typeof t) {
          if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`);
          e[t]();
        }
      });
    }
  }
  e(as);
  let rs = ".bs.scrollspy",
    ns = "click" + rs,
    os = "active",
    ls = "[href]",
    ds = {
      offset: null,
      rootMargin: "0px 0px -25%",
      smoothScroll: !1,
      target: null,
      threshold: [0.1, 0.5, 1],
    },
    cs = {
      offset: "(number|null)",
      rootMargin: "string",
      smoothScroll: "boolean",
      target: "element",
      threshold: "array",
    };
  class ps extends t {
    constructor(e, t) {
      super(e, t),
        (this._targetLinks = new Map()),
        (this._observableSections = new Map()),
        (this._rootElement =
          "visible" === getComputedStyle(this._element).overflowY
            ? null
            : this._element),
        (this._activeTarget = null),
        (this._observer = null),
        (this._previousScrollData = { visibleEntryTop: 0, parentScrollTop: 0 }),
        this.refresh();
    }
    static get Default() {
      return ds;
    }
    static get DefaultType() {
      return cs;
    }
    static get NAME() {
      return "scrollspy";
    }
    refresh() {
      this._initializeTargetsAndObservables(),
        this._maybeEnableSmoothScroll(),
        this._observer
          ? this._observer.disconnect()
          : (this._observer = this._getNewObserver());
      for (var e of this._observableSections.values())
        this._observer.observe(e);
    }
    dispose() {
      this._observer.disconnect(), super.dispose();
    }
    _configAfterMerge(e) {
      return (
        (e.target = a(e.target) || document.body),
        (e.rootMargin = e.offset ? e.offset + "px 0px -30%" : e.rootMargin),
        "string" == typeof e.threshold &&
          (e.threshold = e.threshold
            .split(",")
            .map((e) => Number.parseFloat(e))),
        e
      );
    }
    _maybeEnableSmoothScroll() {
      this._config.smoothScroll &&
        (m.off(this._config.target, ns),
        m.on(this._config.target, ns, ls, (e) => {
          var t = this._observableSections.get(e.target.hash);
          t &&
            (e.preventDefault(),
            (e = this._rootElement || window),
            (t = t.offsetTop - this._element.offsetTop),
            e.scrollTo
              ? e.scrollTo({ top: t, behavior: "smooth" })
              : (e.scrollTop = t));
        }));
    }
    _getNewObserver() {
      var e = {
        root: this._rootElement,
        threshold: this._config.threshold,
        rootMargin: this._config.rootMargin,
      };
      return new IntersectionObserver((e) => this._observerCallback(e), e);
    }
    _observerCallback(e) {
      let t = (e) => this._targetLinks.get("#" + e.target.id),
        i = (e) => {
          (this._previousScrollData.visibleEntryTop = e.target.offsetTop),
            this._process(t(e));
        },
        s = (this._rootElement || document.documentElement).scrollTop,
        a = s >= this._previousScrollData.parentScrollTop;
      this._previousScrollData.parentScrollTop = s;
      for (var r of e)
        if (r.isIntersecting) {
          let e =
            r.target.offsetTop >= this._previousScrollData.visibleEntryTop;
          if (a && e) {
            if ((i(r), !s)) return;
          } else a || e || i(r);
        } else (this._activeTarget = null), this._clearActiveClass(t(r));
    }
    _initializeTargetsAndObservables() {
      (this._targetLinks = new Map()), (this._observableSections = new Map());
      let e = p.find(ls, this._config.target);
      for (var t of e)
        if (t.hash && !o(t)) {
          let e = p.findOne(decodeURI(t.hash), this._element);
          r(e) &&
            (this._targetLinks.set(decodeURI(t.hash), t),
            this._observableSections.set(t.hash, e));
        }
    }
    _process(e) {
      this._activeTarget !== e &&
        (this._clearActiveClass(this._config.target),
        (this._activeTarget = e).classList.add(os),
        this._activateParents(e),
        m.trigger(this._element, "activate.bs.scrollspy", {
          relatedTarget: e,
        }));
    }
    _activateParents(e) {
      if (e.classList.contains("dropdown-item"))
        p.findOne(".dropdown-toggle", e.closest(".dropdown")).classList.add(os);
      else
        for (var t of p.parents(e, ".nav, .list-group"))
          for (let e of p.prev(
            t,
            ".nav-link, .nav-item > .nav-link, .list-group-item"
          ))
            e.classList.add(os);
    }
    _clearActiveClass(e) {
      e.classList.remove(os);
      var t = p.find(ls + "." + os, e);
      for (let e of t) e.classList.remove(os);
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = ps.getOrCreateInstance(this, t);
        if ("string" == typeof t) {
          if (void 0 === e[t] || t.startsWith("_") || "constructor" === t)
            throw new TypeError(`No method named "${t}"`);
          e[t]();
        }
      });
    }
  }
  m.on(window, "load.bs.scrollspy.data-api", () => {
    for (var e of p.find('[data-bs-spy="scroll"]')) ps.getOrCreateInstance(e);
  }),
    e(ps);
  let us = "ArrowRight",
    hs = "ArrowDown",
    ms = "Home",
    z = "active",
    fs = "show",
    gs = ".dropdown-toggle",
    vs = `:not(${gs})`,
    bs =
      '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',
    ws = `.nav-link${vs}, .list-group-item${vs}, [role="tab"]${vs}, ` + bs;
  z, z, z;
  class ys extends t {
    constructor(e) {
      super(e),
        (this._parent = this._element.closest(
          '.list-group, .nav, [role="tablist"]'
        )),
        this._parent &&
          (this._setInitialAttributes(this._parent, this._getChildren()),
          m.on(this._element, "keydown.bs.tab", (e) => this._keydown(e)));
    }
    static get NAME() {
      return "tab";
    }
    show() {
      var e,
        t,
        i = this._element;
      this._elemIsActive(i) ||
        ((t = (e = this._getActiveElem())
          ? m.trigger(e, "hide.bs.tab", { relatedTarget: i })
          : null),
        m.trigger(i, "show.bs.tab", { relatedTarget: e }).defaultPrevented) ||
        (t && t.defaultPrevented) ||
        (this._deactivate(e, i), this._activate(i, e));
    }
    _activate(e, t) {
      e &&
        (e.classList.add(z),
        this._activate(p.getElementFromSelector(e)),
        this._queueCallback(
          () => {
            "tab" === e.getAttribute("role")
              ? (e.removeAttribute("tabindex"),
                e.setAttribute("aria-selected", !0),
                this._toggleDropDown(e, !0),
                m.trigger(e, "shown.bs.tab", { relatedTarget: t }))
              : e.classList.add(fs);
          },
          e,
          e.classList.contains("fade")
        ));
    }
    _deactivate(e, t) {
      e &&
        (e.classList.remove(z),
        e.blur(),
        this._deactivate(p.getElementFromSelector(e)),
        this._queueCallback(
          () => {
            "tab" === e.getAttribute("role")
              ? (e.setAttribute("aria-selected", !1),
                e.setAttribute("tabindex", "-1"),
                this._toggleDropDown(e, !1),
                m.trigger(e, "hidden.bs.tab", { relatedTarget: t }))
              : e.classList.remove(fs);
          },
          e,
          e.classList.contains("fade")
        ));
    }
    _keydown(t) {
      if (["ArrowLeft", us, "ArrowUp", hs, ms, "End"].includes(t.key)) {
        t.stopPropagation(), t.preventDefault();
        var i,
          s = this._getChildren().filter((e) => !o(e));
        let e;
        (e = [ms, "End"].includes(t.key)
          ? s[t.key === ms ? 0 : s.length - 1]
          : ((i = [us, hs].includes(t.key)), X(s, t.target, i, !0))) &&
          (e.focus({ preventScroll: !0 }), ys.getOrCreateInstance(e).show());
      }
    }
    _getChildren() {
      return p.find(ws, this._parent);
    }
    _getActiveElem() {
      return this._getChildren().find((e) => this._elemIsActive(e)) || null;
    }
    _setInitialAttributes(e, t) {
      this._setAttributeIfNotExists(e, "role", "tablist");
      for (let e of t) this._setInitialAttributesOnChild(e);
    }
    _setInitialAttributesOnChild(e) {
      e = this._getInnerElement(e);
      var t = this._elemIsActive(e),
        i = this._getOuterElement(e);
      e.setAttribute("aria-selected", t),
        i !== e && this._setAttributeIfNotExists(i, "role", "presentation"),
        t || e.setAttribute("tabindex", "-1"),
        this._setAttributeIfNotExists(e, "role", "tab"),
        this._setInitialAttributesOnTargetPanel(e);
    }
    _setInitialAttributesOnTargetPanel(e) {
      var t = p.getElementFromSelector(e);
      t &&
        (this._setAttributeIfNotExists(t, "role", "tabpanel"), e.id) &&
        this._setAttributeIfNotExists(t, "aria-labelledby", "" + e.id);
    }
    _toggleDropDown(e, i) {
      let s = this._getOuterElement(e);
      s.classList.contains("dropdown") &&
        ((e = (e, t) => {
          e = p.findOne(e, s);
          e && e.classList.toggle(t, i);
        })(gs, z),
        e(".dropdown-menu", fs),
        s.setAttribute("aria-expanded", i));
    }
    _setAttributeIfNotExists(e, t, i) {
      e.hasAttribute(t) || e.setAttribute(t, i);
    }
    _elemIsActive(e) {
      return e.classList.contains(z);
    }
    _getInnerElement(e) {
      return e.matches(ws) ? e : p.findOne(ws, e);
    }
    _getOuterElement(e) {
      return e.closest(".nav-item, .list-group-item") || e;
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = ys.getOrCreateInstance(this);
        if ("string" == typeof t) {
          if (void 0 === e[t] || t.startsWith("_") || "constructor" === t)
            throw new TypeError(`No method named "${t}"`);
          e[t]();
        }
      });
    }
  }
  m.on(document, "click.bs.tab", bs, function (e) {
    ["A", "AREA"].includes(this.tagName) && e.preventDefault(),
      o(this) || ys.getOrCreateInstance(this).show();
  }),
    m.on(window, "load.bs.tab", () => {
      for (var e of p.find(
        '.active[data-bs-toggle="tab"], .active[data-bs-toggle="pill"], .active[data-bs-toggle="list"]'
      ))
        ys.getOrCreateInstance(e);
    }),
    e(ys);
  let _s = "show",
    Es = "showing",
    xs = { animation: "boolean", autohide: "boolean", delay: "number" },
    Ts = { animation: !0, autohide: !0, delay: 5e3 };
  class Ss extends t {
    constructor(e, t) {
      super(e, t),
        (this._timeout = null),
        (this._hasMouseInteraction = !1),
        (this._hasKeyboardInteraction = !1),
        this._setListeners();
    }
    static get Default() {
      return Ts;
    }
    static get DefaultType() {
      return xs;
    }
    static get NAME() {
      return "toast";
    }
    show() {
      m.trigger(this._element, "show.bs.toast").defaultPrevented ||
        (this._clearTimeout(),
        this._config.animation && this._element.classList.add("fade"),
        this._element.classList.remove("hide"),
        R(this._element),
        this._element.classList.add(_s, Es),
        this._queueCallback(
          () => {
            this._element.classList.remove(Es),
              m.trigger(this._element, "shown.bs.toast"),
              this._maybeScheduleHide();
          },
          this._element,
          this._config.animation
        ));
    }
    hide() {
      !this.isShown() ||
        m.trigger(this._element, "hide.bs.toast").defaultPrevented ||
        (this._element.classList.add(Es),
        this._queueCallback(
          () => {
            this._element.classList.add("hide"),
              this._element.classList.remove(Es, _s),
              m.trigger(this._element, "hidden.bs.toast");
          },
          this._element,
          this._config.animation
        ));
    }
    dispose() {
      this._clearTimeout(),
        this.isShown() && this._element.classList.remove(_s),
        super.dispose();
    }
    isShown() {
      return this._element.classList.contains(_s);
    }
    _maybeScheduleHide() {
      !this._config.autohide ||
        this._hasMouseInteraction ||
        this._hasKeyboardInteraction ||
        (this._timeout = setTimeout(() => {
          this.hide();
        }, this._config.delay));
    }
    _onInteraction(e, t) {
      switch (e.type) {
        case "mouseover":
        case "mouseout":
          this._hasMouseInteraction = t;
          break;
        case "focusin":
        case "focusout":
          this._hasKeyboardInteraction = t;
      }
      t
        ? this._clearTimeout()
        : this._element === (e = e.relatedTarget) ||
          this._element.contains(e) ||
          this._maybeScheduleHide();
    }
    _setListeners() {
      m.on(this._element, "mouseover.bs.toast", (e) =>
        this._onInteraction(e, !0)
      ),
        m.on(this._element, "mouseout.bs.toast", (e) =>
          this._onInteraction(e, !1)
        ),
        m.on(this._element, "focusin.bs.toast", (e) =>
          this._onInteraction(e, !0)
        ),
        m.on(this._element, "focusout.bs.toast", (e) =>
          this._onInteraction(e, !1)
        );
    }
    _clearTimeout() {
      clearTimeout(this._timeout), (this._timeout = null);
    }
    static jQueryInterface(t) {
      return this.each(function () {
        var e = Ss.getOrCreateInstance(this, t);
        if ("string" == typeof t) {
          if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`);
          e[t](this);
        }
      });
    }
  }
  return (
    ue(Ss),
    e(Ss),
    {
      Alert: he,
      Button: fe,
      Carousel: ke,
      Collapse: Ne,
      Dropdown: T,
      Modal: ki,
      Offcanvas: D,
      Popover: as,
      ScrollSpy: ps,
      Tab: ys,
      Toast: Ss,
      Tooltip: ts,
    }
  );
}),
  (() => {
    function r(t, i, e) {
      fetch(i, {
        method: "POST",
        body: e,
        headers: { "X-Requested-With": "XMLHttpRequest" },
      })
        .then((e) => {
          if (e.ok) return e.text();
          throw new Error(e.status + ` ${e.statusText} ` + e.url);
        })
        .then((e) => {
          if (
            (t.querySelector(".loading").classList.remove("d-block"),
            "OK" != e.trim())
          )
            throw new Error(
              e ||
                "Form submission failed and no error message returned from: " +
                  i
            );
          t.querySelector(".sent-message").classList.add("d-block"), t.reset();
        })
        .catch((e) => {
          n(t, e);
        });
    }
    function n(e, t) {
      e.querySelector(".loading").classList.remove("d-block"),
        (e.querySelector(".error-message").innerHTML = t),
        e.querySelector(".error-message").classList.add("d-block");
    }
    document.querySelectorAll(".php-email-form").forEach(function (e) {
      e.addEventListener("submit", function (e) {
        e.preventDefault();
        let i = this,
          s = i.getAttribute("action"),
          a = i.getAttribute("data-recaptcha-site-key");
        if (s) {
          i.querySelector(".loading").classList.add("d-block"),
            i.querySelector(".error-message").classList.remove("d-block"),
            i.querySelector(".sent-message").classList.remove("d-block");
          let t = new FormData(i);
          a
            ? "undefined" != typeof grecaptcha
              ? grecaptcha.ready(function () {
                  try {
                    grecaptcha
                      .execute(a, { action: "php_email_form_submit" })
                      .then((e) => {
                        t.set("recaptcha-response", e), r(i, s, t);
                      });
                  } catch (e) {
                    n(i, e);
                  }
                })
              : n(i, "The reCaptcha javascript API url is not loaded!")
            : r(i, s, t);
        } else n(i, "The form action property is not set!");
      });
    });
  })(),
  ((e, t) => {
    "object" == typeof exports && "undefined" != typeof module
      ? (module.exports = t())
      : "function" == typeof define && define.amd
      ? define(t)
      : (e.AOS = t());
  })(this, function () {
    var e =
        "undefined" != typeof window
          ? window
          : "undefined" != typeof global
          ? global
          : "undefined" != typeof self
          ? self
          : {},
      E = "Expected a function",
      i = NaN,
      s = "[object Symbol]",
      a = /^\s+|\s+$/g,
      r = /^[-+]0x[0-9a-f]+$/i,
      n = /^0b[01]+$/i,
      N = /^0o[0-7]+$/i,
      j = parseInt,
      t = "object" == typeof e && e && e.Object === Object && e,
      o = "object" == typeof self && self && self.Object === Object && self,
      H = t || o || Function("return this")(),
      q = Object.prototype.toString,
      B = Math.max,
      F = Math.min,
      x = function () {
        return H.Date.now();
      };
    function T(e) {
      var t = typeof e;
      return e && ("object" == t || "function" == t);
    }
    function S(e) {
      if ("number" == typeof e) return e;
      if (
        "symbol" == typeof (t = e) ||
        (t && "object" == typeof t && q.call(t) == s)
      )
        return i;
      if (
        "string" !=
        typeof (e = T(e)
          ? T((t = "function" == typeof e.valueOf ? e.valueOf() : e))
            ? t + ""
            : t
          : e)
      )
        return 0 === e ? e : +e;
      e = e.replace(a, "");
      var t = n.test(e);
      return t || N.test(e) ? j(e.slice(2), t ? 2 : 8) : r.test(e) ? i : +e;
    }
    function b() {
      return U.Date.now();
    }
    var R = function (e, t, i) {
        var s = !0,
          a = !0;
        if ("function" != typeof e) throw new TypeError(E);
        T(i) &&
          ((s = "leading" in i ? !!i.leading : s),
          (a = "trailing" in i ? !!i.trailing : a));
        var r,
          n,
          o,
          l,
          d,
          c,
          p = e,
          u = t,
          i = { leading: s, maxWait: t, trailing: a },
          h = 0,
          m = !1,
          f = !1,
          g = !0;
        if ("function" != typeof p) throw new TypeError(E);
        function v(e) {
          var t = r,
            i = n;
          return (r = n = void 0), (h = e), (l = p.apply(i, t));
        }
        function b(e) {
          var t = e - c;
          return void 0 === c || u <= t || t < 0 || (f && o <= e - h);
        }
        function w() {
          var e,
            t = x();
          if (b(t)) return y(t);
          d = setTimeout(w, ((e = u - (t - c)), f ? F(e, o - (t - h)) : e));
        }
        function y(e) {
          return (d = void 0), g && r ? v(e) : ((r = n = void 0), l);
        }
        function _() {
          var e = x(),
            t = b(e);
          if (((r = arguments), (n = this), (c = e), t)) {
            if (void 0 === d)
              return (h = e = c), (d = setTimeout(w, u)), m ? v(e) : l;
            if (f) return (d = setTimeout(w, u)), v(c);
          }
          return void 0 === d && (d = setTimeout(w, u)), l;
        }
        return (
          (u = S(u) || 0),
          T(i) &&
            ((m = !!i.leading),
            (o = (f = "maxWait" in i) ? B(S(i.maxWait) || 0, u) : o),
            (g = "trailing" in i ? !!i.trailing : g)),
          (_.cancel = function () {
            void 0 !== d && clearTimeout(d), (r = c = n = d = void (h = 0));
          }),
          (_.flush = function () {
            return void 0 === d ? l : y(x());
          }),
          _
        );
      },
      l = NaN,
      W = "[object Symbol]",
      $ = /^\s+|\s+$/g,
      G = /^[-+]0x[0-9a-f]+$/i,
      X = /^0b[01]+$/i,
      Y = /^0o[0-7]+$/i,
      V = parseInt,
      t = "object" == typeof e && e && e.Object === Object && e,
      o = "object" == typeof self && self && self.Object === Object && self,
      U = t || o || Function("return this")(),
      K = Object.prototype.toString,
      Q = Math.max,
      Z = Math.min;
    function w(e) {
      var t = typeof e;
      return e && ("object" == t || "function" == t);
    }
    function y(e) {
      if ("number" == typeof e) return e;
      if (
        "symbol" == typeof (t = e) ||
        (t && "object" == typeof t && K.call(t) == W)
      )
        return l;
      if (
        "string" !=
        typeof (e = w(e)
          ? w((t = "function" == typeof e.valueOf ? e.valueOf() : e))
            ? t + ""
            : t
          : e)
      )
        return 0 === e ? e : +e;
      e = e.replace($, "");
      var t = X.test(e);
      return t || Y.test(e) ? V(e.slice(2), t ? 2 : 8) : G.test(e) ? l : +e;
    }
    function d(s, i, e) {
      var a,
        r,
        n,
        o,
        l,
        d,
        c = 0,
        p = !1,
        u = !1,
        t = !0;
      if ("function" != typeof s) throw new TypeError("Expected a function");
      function h(e) {
        var t = a,
          i = r;
        return (a = r = void 0), (c = e), (o = s.apply(i, t));
      }
      function m(e) {
        var t = e - d;
        return void 0 === d || i <= t || t < 0 || (u && n <= e - c);
      }
      function f() {
        var e,
          t = b();
        if (m(t)) return g(t);
        l = setTimeout(f, ((e = i - (t - d)), u ? Z(e, n - (t - c)) : e));
      }
      function g(e) {
        return (l = void 0), t && a ? h(e) : ((a = r = void 0), o);
      }
      function v() {
        var e = b(),
          t = m(e);
        if (((a = arguments), (r = this), (d = e), t)) {
          if (void 0 === l)
            return (c = e = d), (l = setTimeout(f, i)), p ? h(e) : o;
          if (u) return (l = setTimeout(f, i)), h(d);
        }
        return void 0 === l && (l = setTimeout(f, i)), o;
      }
      return (
        (i = y(i) || 0),
        w(e) &&
          ((p = !!e.leading),
          (n = (u = "maxWait" in e) ? Q(y(e.maxWait) || 0, i) : n),
          (t = "trailing" in e ? !!e.trailing : t)),
        (v.cancel = function () {
          void 0 !== l && clearTimeout(l), (a = d = r = l = void (c = 0));
        }),
        (v.flush = function () {
          return void 0 === l ? o : g(b());
        }),
        v
      );
    }
    var c = function () {};
    function J(e) {
      e &&
        e.forEach(function (e) {
          var t = Array.prototype.slice.call(e.addedNodes),
            e = Array.prototype.slice.call(e.removedNodes);
          if (
            (function e(t) {
              for (var i, s = void 0, s = 0; s < t.length; s += 1) {
                if ((i = t[s]).dataset && i.dataset.aos) return 1;
                if (i.children && e(i.children)) return 1;
              }
            })(t.concat(e))
          )
            return c();
        });
    }
    function p() {
      return (
        window.MutationObserver ||
        window.WebKitMutationObserver ||
        window.MozMutationObserver
      );
    }
    var ee =
        Object.assign ||
        function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var i,
              s = arguments[t];
            for (i in s)
              Object.prototype.hasOwnProperty.call(s, i) && (e[i] = s[i]);
          }
          return e;
        },
      te =
        /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
      ie =
        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
      se =
        /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,
      ae =
        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i;
    function u(e, t) {
      for (var i = 0; i < t.length; i++) {
        var s = t[i];
        (s.enumerable = s.enumerable || !1),
          (s.configurable = !0),
          "value" in s && (s.writable = !0),
          Object.defineProperty(e, s.key, s);
      }
    }
    function h() {
      return navigator.userAgent || navigator.vendor || window.opera || "";
    }
    function m() {
      var e = document.querySelectorAll("[data-aos]");
      return Array.prototype.map.call(e, function (e) {
        return { node: e };
      });
    }
    function f() {
      return document.all && !window.atob;
    }
    function g() {
      (I =
        !!(0 < arguments.length && void 0 !== arguments[0] && arguments[0]) ||
        I) &&
        ((P = re(P, D)),
        L(P),
        window.addEventListener(
          "scroll",
          R(function () {
            L(P, D.once);
          }, D.throttleDelay)
        ));
    }
    function v() {
      if (((P = m()), M(D.disable) || f())) return _();
      g();
    }
    function _() {
      P.forEach(function (e, t) {
        e.node.removeAttribute("data-aos"),
          e.node.removeAttribute("data-aos-easing"),
          e.node.removeAttribute("data-aos-duration"),
          e.node.removeAttribute("data-aos-delay"),
          D.initClassName && e.node.classList.remove(D.initClassName),
          D.animatedClassName && e.node.classList.remove(D.animatedClassName);
      });
    }
    function M(e) {
      return (
        !0 === e ||
        ("mobile" === e && C.mobile()) ||
        ("phone" === e && C.phone()) ||
        ("tablet" === e && C.tablet()) ||
        ("function" == typeof e && !0 === e())
      );
    }
    (function (e, t, i) {
      t && u(e.prototype, t), i && u(e, i);
    })(z, [
      {
        key: "phone",
        value: function () {
          var e = h();
          return !(!te.test(e) && !ie.test(e.substr(0, 4)));
        },
      },
      {
        key: "mobile",
        value: function () {
          var e = h();
          return !(!se.test(e) && !ae.test(e.substr(0, 4)));
        },
      },
      {
        key: "tablet",
        value: function () {
          return this.mobile() && !this.phone();
        },
      },
      {
        key: "ie11",
        value: function () {
          return (
            "-ms-scroll-limit" in document.documentElement.style &&
            "-ms-ime-align" in document.documentElement.style
          );
        },
      },
    ]);
    var C = new z(),
      A = function (e, t) {
        var i = void 0;
        return (
          C.ie11()
            ? (i = document.createEvent("CustomEvent")).initCustomEvent(
                e,
                !0,
                !0,
                { detail: t }
              )
            : (i = new CustomEvent(e, { detail: t })),
          document.dispatchEvent(i)
        );
      },
      L = function (e) {
        return e.forEach(function (e, t) {
          function i() {
            var t, e;
            o.animated &&
              ((t = n),
              (e = a.animatedClassNames) &&
                e.forEach(function (e) {
                  return t.classList.remove(e);
                }),
              A("aos:out", n),
              o.options.id && A("aos:in:" + o.options.id, n),
              (o.animated = !1));
          }
          var s,
            a,
            r,
            n,
            o = e;
          (e = window.pageYOffset),
            (a = o.options),
            (r = o.position),
            (n = o.node),
            a.mirror && e >= r.out && !a.once
              ? i()
              : e >= r.in
              ? o.animated ||
                ((s = n),
                (e = a.animatedClassNames) &&
                  e.forEach(function (e) {
                    return s.classList.add(e);
                  }),
                A("aos:in", n),
                o.options.id && A("aos:in:" + o.options.id, n),
                (o.animated = !0))
              : o.animated && !a.once && i();
        });
      },
      k = function (e) {
        for (
          var t = 0, i = 0;
          e && !isNaN(e.offsetLeft) && !isNaN(e.offsetTop);

        )
          (t += e.offsetLeft - ("BODY" != e.tagName ? e.scrollLeft : 0)),
            (i += e.offsetTop - ("BODY" != e.tagName ? e.scrollTop : 0)),
            (e = e.offsetParent);
        return { top: i, left: t };
      },
      O = function (e, t, i) {
        if (void 0 !== (e = e.getAttribute("data-aos-" + t))) {
          if ("true" === e) return !0;
          if ("false" === e) return !1;
        }
        return e || i;
      },
      re = function (e, d) {
        return (
          e.forEach(function (e, t) {
            var i,
              s,
              a,
              r = O(e.node, "mirror", d.mirror),
              n = O(e.node, "once", d.once),
              o = O(e.node, "id"),
              l = d.useClassNames && e.node.getAttribute("data-aos"),
              l = [d.animatedClassName]
                .concat(l ? l.split(" ") : [])
                .filter(function (e) {
                  return "string" == typeof e;
                });
            d.initClassName && e.node.classList.add(d.initClassName),
              (e.position = {
                in: ((e, t, i) => {
                  var s = window.innerHeight,
                    a = O(e, "anchor"),
                    r = O(e, "anchor-placement"),
                    t = Number(O(e, "offset", r ? 0 : t)),
                    r = r || i,
                    n = e,
                    o =
                      (a &&
                        document.querySelectorAll(a) &&
                        (n = document.querySelectorAll(a)[0]),
                      k(n).top - s);
                  switch (r) {
                    case "top-bottom":
                      break;
                    case "center-bottom":
                      o += n.offsetHeight / 2;
                      break;
                    case "bottom-bottom":
                      o += n.offsetHeight;
                      break;
                    case "top-center":
                      o += s / 2;
                      break;
                    case "center-center":
                      o += s / 2 + n.offsetHeight / 2;
                      break;
                    case "bottom-center":
                      o += s / 2 + n.offsetHeight;
                      break;
                    case "top-top":
                      o += s;
                      break;
                    case "bottom-top":
                      o += s + n.offsetHeight;
                      break;
                    case "center-top":
                      o += s + n.offsetHeight / 2;
                  }
                  return o + t;
                })(e.node, d.offset, d.anchorPlacement),
                out:
                  r &&
                  ((i = e.node),
                  (s = d.offset),
                  window.innerHeight,
                  (a = O(i, "anchor")),
                  (s = O(i, "offset", s)),
                  a &&
                    document.querySelectorAll(a) &&
                    (i = document.querySelectorAll(a)[0]),
                  k(i).top + i.offsetHeight - s),
              }),
              (e.options = {
                once: n,
                mirror: r,
                animatedClassNames: l,
                id: o,
              });
          }),
          e
        );
      },
      P = [],
      I = !1,
      D = {
        offset: 120,
        delay: 0,
        easing: "ease",
        duration: 400,
        disable: !1,
        once: !1,
        mirror: !1,
        anchorPlacement: "top-bottom",
        startEvent: "DOMContentLoaded",
        animatedClassName: "aos-animate",
        initClassName: "aos-init",
        useClassNames: !1,
        disableMutationObserver: !1,
        throttleDelay: 99,
        debounceDelay: 50,
      };
    function z() {
      if (!(this instanceof z))
        throw new TypeError("Cannot call a class as a function");
    }
    return {
      init: function (e) {
        return (
          (D = ee(D, e)),
          (P = m()),
          D.disableMutationObserver ||
            p() ||
            (console.info(
              '\n      aos: MutationObserver is not supported on this browser,\n      code mutations observing has been disabled.\n      You may have to call "refreshHard()" by yourself.\n    '
            ),
            (D.disableMutationObserver = !0)),
          D.disableMutationObserver ||
            ((e = v),
            (t = window.document),
            (i = new (p())(J)),
            (c = e),
            i.observe(t.documentElement, {
              childList: !0,
              subtree: !0,
              removedNodes: !0,
            })),
          M(D.disable) || f()
            ? _()
            : (document
                .querySelector("body")
                .setAttribute("data-aos-easing", D.easing),
              document
                .querySelector("body")
                .setAttribute("data-aos-duration", D.duration),
              document
                .querySelector("body")
                .setAttribute("data-aos-delay", D.delay),
              -1 === ["DOMContentLoaded", "load"].indexOf(D.startEvent)
                ? document.addEventListener(D.startEvent, function () {
                    g(!0);
                  })
                : window.addEventListener("load", function () {
                    g(!0);
                  }),
              "DOMContentLoaded" === D.startEvent &&
                -1 < ["complete", "interactive"].indexOf(document.readyState) &&
                g(!0),
              window.addEventListener("resize", d(g, D.debounceDelay, !0)),
              window.addEventListener(
                "orientationchange",
                d(g, D.debounceDelay, !0)
              ),
              P)
        );
        var t, i;
      },
      refresh: g,
      refreshHard: v,
    };
  }),
  ((e, t) => {
    "object" == typeof exports && "object" == typeof module
      ? (module.exports = t())
      : "function" == typeof define && define.amd
      ? define([], t)
      : "object" == typeof exports
      ? (exports.PureCounter = t())
      : (e.PureCounter = t());
  })(self, function () {
    return (
      (s = {
        638: function (e) {
          function n(e) {
            return (
              ((e) => {
                if (Array.isArray(e)) return i(e);
              })(e) ||
              (() => {
                if (
                  ("undefined" != typeof Symbol &&
                    null != e[Symbol.iterator]) ||
                  null != e["@@iterator"]
                )
                  return Array.from(e);
              })() ||
              ((e) => {
                var t;
                if (e)
                  return "string" == typeof e
                    ? i(e, void 0)
                    : "Map" ===
                        (t =
                          "Object" ===
                            (t = Object.prototype.toString
                              .call(e)
                              .slice(8, -1)) && e.constructor
                            ? e.constructor.name
                            : t) || "Set" === t
                    ? Array.from(e)
                    : "Arguments" === t ||
                      /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                    ? i(e, void 0)
                    : void 0;
              })(e) ||
              (() => {
                throw new TypeError(
                  "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
                );
              })()
            );
          }
          function i(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var i = 0, s = new Array(t); i < t; i++) s[i] = e[i];
            return s;
          }
          function o(e, t) {
            var i,
              s,
              a = 1 < arguments.length && void 0 !== t ? t : {},
              r = {};
            for (i in e)
              (a == {} || a.hasOwnProperty(i)) &&
                ((s = c(e[i])), (r[i] = s), i.match(/duration|pulse/)) &&
                (r[i] = "boolean" != typeof s ? 1e3 * s : s);
            return Object.assign({}, a, r);
          }
          function l(e, t) {
            return Math.pow(e, t);
          }
          function d(e, t) {
            var o,
              i = {
                minimumFractionDigits: t.decimals,
                maximumFractionDigits: t.decimals,
              },
              s = "string" == typeof t.formater ? t.formater : void 0;
            return (
              (e = ((e, t) => {
                if (t.filesizing || t.currency) {
                  e = Math.abs(Number(e));
                  var i = 1e3,
                    s =
                      t.currency && "string" == typeof t.currency
                        ? t.currency
                        : "",
                    a = t.decimals || 1,
                    r = ["", "K", "M", "B", "T"],
                    n = "";
                  t.filesizing &&
                    ((i = 1024), (r = ["bytes", "KB", "MB", "GB", "TB"]));
                  for (var o = 4; 0 <= o; o--)
                    if (
                      (0 === o &&
                        (n = "".concat(e.toFixed(a), " ").concat(r[o])),
                      e >= l(i, o))
                    ) {
                      n = "".concat((e / l(i, o)).toFixed(a), " ").concat(r[o]);
                      break;
                    }
                  return s + n;
                }
                return parseFloat(e);
              })(e, t)),
              (s = e =
                t.formater ? e.toLocaleString(s, i) : parseInt(e).toString()),
              !t.formater || ("en-US" !== t.formater && !0 === t.separator)
                ? s
                : ((o = t.separator
                    ? "string" == typeof t.separator
                      ? t.separator
                      : ","
                    : ""),
                  s.replace(
                    /^(?:(\d{1,3},(?:\d{1,3},?)*)|(\d{1,3}\.(?:\d{1,3}\.?)*)|(\d{1,3}(?:\s\d{1,3})*))([\.,]?\d{0,2}?)$/gi,
                    function (e, t, i, s, a) {
                      var r = "",
                        n = "";
                      return (
                        void 0 !== t
                          ? ((r = t.replace(new RegExp(/,/gi, "gi"), o)),
                            (n = ","))
                          : void 0 !== i
                          ? (r = i.replace(new RegExp(/\./gi, "gi"), o))
                          : void 0 !== s &&
                            (r = s.replace(new RegExp(/ /gi, "gi"), o)),
                        void 0 !== a &&
                          ((t = "," !== n && "," !== o ? "," : "."),
                          (r +=
                            void 0 !== a
                              ? a.replace(new RegExp(/\.|,/gi, "gi"), t)
                              : "")),
                        r
                      );
                    }
                  ))
            );
          }
          function c(e) {
            return /^[0-9]+\.[0-9]+$/.test(e)
              ? parseFloat(e)
              : /^[0-9]+$/.test(e)
              ? parseInt(e)
              : /^true|false/i.test(e)
              ? /^true/i.test(e)
              : e;
          }
          function p(e) {
            for (
              var t = e.offsetTop,
                i = e.offsetLeft,
                s = e.offsetWidth,
                a = e.offsetHeight;
              e.offsetParent;

            )
              (t += (e = e.offsetParent).offsetTop), (i += e.offsetLeft);
            return (
              t >= window.pageYOffset &&
              i >= window.pageXOffset &&
              t + a <= window.pageYOffset + window.innerHeight &&
              i + s <= window.pageXOffset + window.innerWidth
            );
          }
          e.exports = function () {
            var s = o(
              0 < arguments.length && void 0 !== arguments[0]
                ? arguments[0]
                : {},
              {
                start: 0,
                end: 100,
                duration: 2e3,
                delay: 10,
                once: !0,
                pulse: !1,
                decimals: 0,
                legacy: !0,
                filesizing: !1,
                currency: !1,
                separator: !1,
                formater: "us-US",
                selector: ".purecounter",
              }
            );
            function a(e) {
              e.forEach(function (e) {
                !0 === i(e).legacy && p(e) && r([e]);
              });
            }
            function r(e, t) {
              e.forEach(function (e) {
                var o = e.target || e,
                  l = i(o);
                return l.duration <= 0
                  ? (o.innerHTML = d(l.end, l))
                  : (!t && !p(e)) || (t && e.intersectionRatio < 0.5)
                  ? ((e = l.start > l.end ? l.end : l.start),
                    (o.innerHTML = d(e, l)))
                  : void setTimeout(function () {
                      return (
                        (t = o),
                        (s = ((i = l).end - i.start) / (i.duration / i.delay)),
                        (a = "inc"),
                        i.end < i.start && ((a = "dec"), (s *= -1)),
                        (r = c(i.start)),
                        (t.innerHTML = d(r, i)),
                        !0 === i.once &&
                          t.setAttribute("data-purecounter-duration", 0),
                        void (n = setInterval(function () {
                          var e = (function (e, t, i) {
                            i =
                              2 < arguments.length && void 0 !== i ? i : "inc";
                            return (
                              (e = c(e)),
                              (t = c(t)),
                              parseFloat("inc" === i ? e + t : e - t)
                            );
                          })(r, s, a);
                          (t.innerHTML = d(e, i)),
                            (((r = e) >= i.end && "inc" == a) ||
                              (r <= i.end && "dec" == a)) &&
                              ((t.innerHTML = d(i.end, i)),
                              i.pulse &&
                                (t.setAttribute("data-purecounter-duration", 0),
                                setTimeout(function () {
                                  t.setAttribute(
                                    "data-purecounter-duration",
                                    i.duration / 1e3
                                  );
                                }, i.pulse)),
                              clearInterval(n));
                        }, i.delay))
                      );
                      var t, i, s, a, r, n;
                    }, l.delay);
              });
            }
            function i(e) {
              var t = s,
                e = [].filter.call(e.attributes, function (e) {
                  return /^data-purecounter-/.test(e.name);
                });
              return o(
                0 != e.length
                  ? Object.assign.apply(
                      Object,
                      [{}].concat(
                        n(
                          e.map(function (e) {
                            var t,
                              i = e.name,
                              e = e.value;
                            return (
                              (t = {}),
                              (i = i
                                .replace("data-purecounter-", "")
                                .toLowerCase()),
                              (e = c(e)),
                              i in t
                                ? Object.defineProperty(t, i, {
                                    value: e,
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0,
                                  })
                                : (t[i] = e),
                              t
                            );
                          })
                        )
                      )
                    )
                  : {},
                t
              );
            }
            !(function () {
              var t,
                i = document.querySelectorAll(s.selector);
              0 !== i.length &&
                ("IntersectionObserver" in window &&
                "IntersectionObserverEntry" in window &&
                "intersectionRatio" in
                  window.IntersectionObserverEntry.prototype
                  ? ((t = new IntersectionObserver(r.bind(this), {
                      root: null,
                      rootMargin: "20px",
                      threshold: 0.5,
                    })),
                    i.forEach(function (e) {
                      t.observe(e);
                    }))
                  : window.addEventListener &&
                    (a(i),
                    window.addEventListener(
                      "scroll",
                      function (e) {
                        a(i);
                      },
                      { passive: !0 }
                    )));
            })();
          };
        },
      }),
      (a = {}),
      (function e(t) {
        var i = a[t];
        return (
          void 0 !== i || ((i = a[t] = { exports: {} }), s[t](i, i.exports, e)),
          i.exports
        );
      })(638)
    );
    var s, a;
  });
var Swiper = (() => {
  function o(e) {
    return (
      null !== e &&
      "object" == typeof e &&
      "constructor" in e &&
      e.constructor === Object
    );
  }
  function a(t, i) {
    void 0 === t && (t = {}), void 0 === i && (i = {});
    let s = ["__proto__", "constructor", "prototype"];
    Object.keys(i)
      .filter((e) => s.indexOf(e) < 0)
      .forEach((e) => {
        void 0 === t[e]
          ? (t[e] = i[e])
          : o(i[e]) && o(t[e]) && 0 < Object.keys(i[e]).length && a(t[e], i[e]);
      });
  }
  let t = {
    body: {},
    addEventListener() {},
    removeEventListener() {},
    activeElement: { blur() {}, nodeName: "" },
    querySelector: () => null,
    querySelectorAll: () => [],
    getElementById: () => null,
    createEvent: () => ({ initEvent() {} }),
    createElement: () => ({
      children: [],
      childNodes: [],
      style: {},
      setAttribute() {},
      getElementsByTagName: () => [],
    }),
    createElementNS: () => ({}),
    importNode: () => null,
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: "",
    },
  };
  function L() {
    var e = "undefined" != typeof document ? document : {};
    return a(e, t), e;
  }
  let g = {
    document: t,
    navigator: { userAgent: "" },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: "",
    },
    history: { replaceState() {}, pushState() {}, go() {}, back() {} },
    CustomEvent: function () {
      return this;
    },
    addEventListener() {},
    removeEventListener() {},
    getComputedStyle: () => ({ getPropertyValue: () => "" }),
    Image() {},
    Date() {},
    screen: {},
    setTimeout() {},
    clearTimeout() {},
    matchMedia: () => ({}),
    requestAnimationFrame: (e) =>
      "undefined" == typeof setTimeout ? (e(), null) : setTimeout(e, 0),
    cancelAnimationFrame(e) {
      "undefined" != typeof setTimeout && clearTimeout(e);
    },
  };
  function N() {
    var e = "undefined" != typeof window ? window : {};
    return a(e, g), e;
  }
  function T(e) {
    return (e = void 0 === e ? "" : e)
      .trim()
      .split(" ")
      .filter((e) => !!e.trim());
  }
  function S(e, t) {
    return void 0 === t && (t = 0), setTimeout(e, t);
  }
  function v() {
    return Date.now();
  }
  function j(e, t) {
    void 0 === t && (t = "x");
    var i = N();
    let s, a, r;
    e = ((e) => {
      var t = N();
      let i;
      return (i =
        (i =
          !(i = t.getComputedStyle ? t.getComputedStyle(e, null) : i) &&
          e.currentStyle
            ? e.currentStyle
            : i) || e.style);
    })(e);
    return (
      i.WebKitCSSMatrix
        ? (6 < (a = e.transform || e.webkitTransform).split(",").length &&
            (a = a
              .split(", ")
              .map((e) => e.replace(",", "."))
              .join(", ")),
          (r = new i.WebKitCSSMatrix("none" === a ? "" : a)))
        : ((r =
            e.MozTransform ||
            e.OTransform ||
            e.MsTransform ||
            e.msTransform ||
            e.transform ||
            e
              .getPropertyValue("transform")
              .replace("translate(", "matrix(1, 0, 0, 1,")),
          (s = r.toString().split(","))),
      "x" === t &&
        (a = i.WebKitCSSMatrix
          ? r.m41
          : 16 === s.length
          ? parseFloat(s[12])
          : parseFloat(s[4])),
      (a =
        "y" === t
          ? i.WebKitCSSMatrix
            ? r.m42
            : 16 === s.length
            ? parseFloat(s[13])
            : parseFloat(s[5])
          : a) || 0
    );
  }
  function d(e) {
    return (
      "object" == typeof e &&
      null !== e &&
      e.constructor &&
      "Object" === Object.prototype.toString.call(e).slice(8, -1)
    );
  }
  function b(e) {
    let s = Object(arguments.length <= 0 ? void 0 : e),
      t = ["__proto__", "constructor", "prototype"];
    for (let e = 1; e < arguments.length; e += 1) {
      var a = e < 0 || arguments.length <= e ? void 0 : arguments[e];
      if (
        null != a &&
        ((i = a),
        !("undefined" != typeof window && void 0 !== window.HTMLElement
          ? i instanceof HTMLElement
          : i && (1 === i.nodeType || 11 === i.nodeType)))
      ) {
        let i = Object.keys(Object(a)).filter((e) => t.indexOf(e) < 0);
        for (let e = 0, t = i.length; e < t; e += 1) {
          var r = i[e],
            n = Object.getOwnPropertyDescriptor(a, r);
          void 0 !== n &&
            n.enumerable &&
            (d(s[r]) && d(a[r])
              ? a[r].__swiper__
                ? (s[r] = a[r])
                : b(s[r], a[r])
              : d(s[r]) || !d(a[r]) || ((s[r] = {}), a[r].__swiper__)
              ? (s[r] = a[r])
              : b(s[r], a[r]));
        }
      }
    }
    var i;
    return s;
  }
  function k(e, t, i) {
    e.style.setProperty(t, i);
  }
  function w(e) {
    let { swiper: i, targetPosition: s, side: a } = e,
      r = N(),
      n = -i.translate,
      o,
      l = null,
      d = i.params.speed,
      c =
        ((i.wrapperEl.style.scrollSnapType = "none"),
        r.cancelAnimationFrame(i.cssModeFrameID),
        s > n ? "next" : "prev"),
      p = (e, t) => ("next" === c && t <= e) || ("prev" === c && e <= t),
      u = () => {
        (o = new Date().getTime()), null === l && (l = o);
        var e = Math.max(Math.min((o - l) / d, 1), 0),
          e = 0.5 - Math.cos(e * Math.PI) / 2;
        let t = n + e * (s - n);
        p(t, s) && (t = s),
          i.wrapperEl.scrollTo({ [a]: t }),
          p(t, s)
            ? ((i.wrapperEl.style.overflow = "hidden"),
              (i.wrapperEl.style.scrollSnapType = ""),
              setTimeout(() => {
                (i.wrapperEl.style.overflow = ""),
                  i.wrapperEl.scrollTo({ [a]: t });
              }),
              r.cancelAnimationFrame(i.cssModeFrameID))
            : (i.cssModeFrameID = r.requestAnimationFrame(u));
      };
    u();
  }
  function r(e) {
    return (
      e.querySelector(".swiper-slide-transform") ||
      (e.shadowRoot && e.shadowRoot.querySelector(".swiper-slide-transform")) ||
      e
    );
  }
  function H(e, t) {
    void 0 === t && (t = "");
    var i = N(),
      s = [...e.children];
    return (
      i.HTMLSlotElement &&
        e instanceof HTMLSlotElement &&
        s.push(...e.assignedElements()),
      t ? s.filter((e) => e.matches(t)) : s
    );
  }
  function O(e) {
    try {
      console.warn(e);
    } catch (e) {}
  }
  function P(e, t) {
    void 0 === t && (t = []);
    e = document.createElement(e);
    return e.classList.add(...(Array.isArray(t) ? t : T(t))), e;
  }
  function q(e) {
    var t = N(),
      i = L(),
      s = e.getBoundingClientRect(),
      i = i.body,
      a = e.clientTop || i.clientTop || 0,
      i = e.clientLeft || i.clientLeft || 0,
      r = e === t ? t.scrollY : e.scrollTop,
      t = e === t ? t.scrollX : e.scrollLeft;
    return { top: s.top + r - a, left: s.left + t - i };
  }
  function M(e, t) {
    return N().getComputedStyle(e, null).getPropertyValue(t);
  }
  function C(e) {
    let t,
      i = e;
    if (i) {
      for (t = 0; null !== (i = i.previousSibling); )
        1 === i.nodeType && (t += 1);
      return t;
    }
  }
  function B(e, t) {
    var i = [];
    let s = e.parentElement;
    for (; s; ) (t && !s.matches(t)) || i.push(s), (s = s.parentElement);
    return i;
  }
  function f(i, s) {
    s &&
      i.addEventListener("transitionend", function e(t) {
        t.target === i &&
          (s.call(i, t), i.removeEventListener("transitionend", e));
      });
  }
  function A(e, t, i) {
    var s = N();
    return i
      ? e["width" === t ? "offsetWidth" : "offsetHeight"] +
          parseFloat(
            s
              .getComputedStyle(e, null)
              .getPropertyValue("width" === t ? "margin-right" : "margin-top")
          ) +
          parseFloat(
            s
              .getComputedStyle(e, null)
              .getPropertyValue("width" === t ? "margin-left" : "margin-bottom")
          )
      : e.offsetWidth;
  }
  function I(e) {
    return (Array.isArray(e) ? e : [e]).filter((e) => !!e);
  }
  function _(t) {
    return (e) =>
      0 < Math.abs(e) &&
      t.browser &&
      t.browser.need3dFix &&
      Math.abs(e) % 90 == 0
        ? e + 0.001
        : e;
  }
  function D(e, t) {
    void 0 === t && (t = ""),
      "undefined" != typeof trustedTypes
        ? (e.innerHTML = trustedTypes
            .createPolicy("html", { createHTML: (e) => e })
            .createHTML(t))
        : (e.innerHTML = t);
  }
  let y, e, R;
  function W() {
    return (y =
      y ||
      ((e = N()),
      {
        smoothScroll:
          (t = L()).documentElement &&
          t.documentElement.style &&
          "scrollBehavior" in t.documentElement.style,
        touch: !!(
          "ontouchstart" in e ||
          (e.DocumentTouch && t instanceof e.DocumentTouch)
        ),
      }));
    var e, t;
  }
  function $(p) {
    return (
      void 0 === p && (p = {}),
      (e =
        e ||
        (() => {
          var e = (void 0 === p ? {} : p).userAgent,
            t = W(),
            i = (r = N()).navigator.platform,
            e = e || r.navigator.userAgent,
            s = { ios: !1, android: !1 },
            a = r.screen.width,
            r = r.screen.height,
            n = e.match(/(Android);?[\s\/]+([\d.]+)?/);
          let o = e.match(/(iPad).*OS\s([\d_]+)/);
          var l = e.match(/(iPod)(.*OS\s([\d_]+))?/),
            d = !o && e.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
            c = "Win32" === i,
            i = "MacIntel" === i;
          return (
            !o &&
              i &&
              t.touch &&
              0 <=
                [
                  "1024x1366",
                  "1366x1024",
                  "834x1194",
                  "1194x834",
                  "834x1112",
                  "1112x834",
                  "768x1024",
                  "1024x768",
                  "820x1180",
                  "1180x820",
                  "810x1080",
                  "1080x810",
                ].indexOf(a + "x" + r) &&
              (o = (o = e.match(/(Version)\/([\d.]+)/)) || [0, 1, "13_0_0"]),
            n && !c && ((s.os = "android"), (s.android = !0)),
            (o || d || l) && ((s.os = "ios"), (s.ios = !0)),
            s
          );
        })())
    );
  }
  function G() {
    return (R =
      R ||
      (() => {
        let t = N(),
          e = $(),
          s = !1;
        function i() {
          var e = t.navigator.userAgent.toLowerCase();
          return (
            0 <= e.indexOf("safari") &&
            e.indexOf("chrome") < 0 &&
            e.indexOf("android") < 0
          );
        }
        if (i()) {
          let i = String(t.navigator.userAgent);
          if (i.includes("Version/")) {
            let [e, t] = i
              .split("Version/")[1]
              .split(" ")[0]
              .split(".")
              .map((e) => Number(e));
            s = e < 16 || (16 === e && t < 2);
          }
        }
        var a = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(
            t.navigator.userAgent
          ),
          r = i();
        return {
          isSafari: s || r,
          needPerspectiveFix: s,
          need3dFix: r || (a && e.ios),
          isWebView: a,
        };
      })());
  }
  let X = {
      on(e, i, s) {
        let a = this;
        if (a.eventsListeners && !a.destroyed && "function" == typeof i) {
          let t = s ? "unshift" : "push";
          e.split(" ").forEach((e) => {
            a.eventsListeners[e] || (a.eventsListeners[e] = []),
              a.eventsListeners[e][t](i);
          });
        }
        return a;
      },
      once(s, a, e) {
        let r = this;
        return !r.eventsListeners || r.destroyed || "function" != typeof a
          ? r
          : ((n.__emitterProxy = a), r.on(s, n, e));
        function n() {
          r.off(s, n), n.__emitterProxy && delete n.__emitterProxy;
          for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
            t[i] = arguments[i];
          a.apply(r, t);
        }
      },
      onAny(e, t) {
        var i = this;
        return (
          i.eventsListeners &&
            !i.destroyed &&
            "function" == typeof e &&
            ((t = t ? "unshift" : "push"),
            i.eventsAnyListeners.indexOf(e) < 0) &&
            i.eventsAnyListeners[t](e),
          i
        );
      },
      offAny(e) {
        var t = this;
        return (
          t.eventsListeners &&
            !t.destroyed &&
            t.eventsAnyListeners &&
            0 <= (e = t.eventsAnyListeners.indexOf(e)) &&
            t.eventsAnyListeners.splice(e, 1),
          t
        );
      },
      off(e, s) {
        let a = this;
        return (
          !a.eventsListeners ||
            a.destroyed ||
            (a.eventsListeners &&
              e.split(" ").forEach((i) => {
                void 0 === s
                  ? (a.eventsListeners[i] = [])
                  : a.eventsListeners[i] &&
                    a.eventsListeners[i].forEach((e, t) => {
                      (e === s ||
                        (e.__emitterProxy && e.__emitterProxy === s)) &&
                        a.eventsListeners[i].splice(t, 1);
                    });
              })),
          a
        );
      },
      emit() {
        let a = this;
        if (a.eventsListeners && !a.destroyed && a.eventsListeners) {
          let e, i, s;
          for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
            r[n] = arguments[n];
          (s =
            "string" == typeof r[0] || Array.isArray(r[0])
              ? ((e = r[0]), (i = r.slice(1, r.length)), a)
              : ((e = r[0].events), (i = r[0].data), r[0].context || a)),
            i.unshift(s),
            (Array.isArray(e) ? e : e.split(" ")).forEach((t) => {
              a.eventsAnyListeners &&
                a.eventsAnyListeners.length &&
                a.eventsAnyListeners.forEach((e) => {
                  e.apply(s, [t, ...i]);
                }),
                a.eventsListeners &&
                  a.eventsListeners[t] &&
                  a.eventsListeners[t].forEach((e) => {
                    e.apply(s, i);
                  });
            });
        }
        return a;
      },
    },
    Y = (e, t, i) => {
      t && !e.classList.contains(i)
        ? e.classList.add(i)
        : !t && e.classList.contains(i) && e.classList.remove(i);
    },
    p = (e, t, i) => {
      t && !e.classList.contains(i)
        ? e.classList.add(i)
        : !t && e.classList.contains(i) && e.classList.remove(i);
    },
    n = (i, e) => {
      if (i && !i.destroyed && i.params) {
        let t = e.closest(
          i.isElement ? "swiper-slide" : "." + i.params.slideClass
        );
        if (t) {
          let e = t.querySelector("." + i.params.lazyPreloaderClass);
          !e &&
            i.isElement &&
            (t.shadowRoot
              ? (e = t.shadowRoot.querySelector(
                  "." + i.params.lazyPreloaderClass
                ))
              : requestAnimationFrame(() => {
                  t.shadowRoot &&
                    (e = t.shadowRoot.querySelector(
                      "." + i.params.lazyPreloaderClass
                    )) &&
                    e.remove();
                })),
            e && e.remove();
        }
      }
    },
    l = (e, t) => {
      e.slides[t] &&
        (e = e.slides[t].querySelector('[loading="lazy"]')) &&
        e.removeAttribute("loading");
    },
    u = (o) => {
      if (o && !o.destroyed && o.params) {
        let n = o.params.lazyPreloadPrevNext,
          s = o.slides.length;
        if (s && n && !(n < 0)) {
          n = Math.min(n, s);
          let a =
              "auto" === o.params.slidesPerView
                ? o.slidesPerViewDynamic()
                : Math.ceil(o.params.slidesPerView),
            r = o.activeIndex;
          if (o.params.grid && 1 < o.params.grid.rows) {
            let i = r,
              s = [i - n];
            s.push(...Array.from({ length: n }).map((e, t) => i + a + t)),
              void o.slides.forEach((e, t) => {
                s.includes(e.column) && l(o, t);
              });
          } else {
            let i = r + a - 1;
            if (o.params.rewind || o.params.loop)
              for (let t = r - n; t <= i + n; t += 1) {
                let e = ((t % s) + s) % s;
                (e < r || e > i) && l(o, e);
              }
            else
              for (
                let e = Math.max(r - n, 0);
                e <= Math.min(i + n, s - 1);
                e += 1
              )
                e !== r && (e > i || e < r) && l(o, e);
          }
        }
      }
    },
    V = {
      updateSize: function () {
        var e = this;
        let t, i;
        var s = e.el;
        (t = null != e.params.width ? e.params.width : s.clientWidth),
          (i = null != e.params.height ? e.params.height : s.clientHeight),
          (0 === t && e.isHorizontal()) ||
            (0 === i && e.isVertical()) ||
            ((t =
              t -
              parseInt(M(s, "padding-left") || 0, 10) -
              parseInt(M(s, "padding-right") || 0, 10)),
            (i =
              i -
              parseInt(M(s, "padding-top") || 0, 10) -
              parseInt(M(s, "padding-bottom") || 0, 10)),
            Number.isNaN(t) && (t = 0),
            Number.isNaN(i) && (i = 0),
            Object.assign(e, {
              width: t,
              height: i,
              size: e.isHorizontal() ? t : i,
            }));
      },
      updateSlides: function () {
        let a = this;
        function d(e, t) {
          return parseFloat(e.getPropertyValue(a.getDirectionLabel(t)) || 0);
        }
        let r = a.params,
          {
            wrapperEl: e,
            slidesEl: t,
            size: n,
            rtlTranslate: i,
            wrongRTL: s,
          } = a,
          o = a.virtual && r.virtual.enabled,
          c = (o ? a.virtual : a).slides.length,
          p = H(t, `.${a.params.slideClass}, swiper-slide`),
          u = (o ? a.virtual.slides : p).length,
          h = [],
          m = [],
          f = [],
          g = r.slidesOffsetBefore,
          v =
            ("function" == typeof g && (g = r.slidesOffsetBefore.call(a)),
            r.slidesOffsetAfter);
        "function" == typeof v && (v = r.slidesOffsetAfter.call(a));
        var b = a.snapGrid.length,
          w = a.slidesGrid.length;
        let y = r.spaceBetween,
          _ = -g,
          E = 0,
          x = 0;
        if (void 0 !== n) {
          "string" == typeof y && 0 <= y.indexOf("%")
            ? (y = (parseFloat(y.replace("%", "")) / 100) * n)
            : "string" == typeof y && (y = parseFloat(y)),
            (a.virtualSize = -y),
            p.forEach((e) => {
              i ? (e.style.marginLeft = "") : (e.style.marginRight = ""),
                (e.style.marginBottom = ""),
                (e.style.marginTop = "");
            }),
            r.centeredSlides &&
              r.cssMode &&
              (k(e, "--swiper-centered-offset-before", ""),
              k(e, "--swiper-centered-offset-after", ""));
          var T = r.grid && 1 < r.grid.rows && a.grid;
          let l;
          T ? a.grid.initSlides(p) : a.grid && a.grid.unsetSlides();
          var S =
            "auto" === r.slidesPerView &&
            r.breakpoints &&
            0 <
              Object.keys(r.breakpoints).filter(
                (e) => void 0 !== r.breakpoints[e].slidesPerView
              ).length;
          for (let s = 0; s < u; s += 1) {
            let o;
            if (
              ((l = 0),
              p[s] && (o = p[s]),
              T && a.grid.updateSlide(s, o, p),
              !p[s] || "none" !== M(o, "display"))
            ) {
              if ("auto" === r.slidesPerView) {
                S && (p[s].style[a.getDirectionLabel("width")] = "");
                let t = getComputedStyle(o),
                  e = o.style.transform,
                  i = o.style.webkitTransform;
                if (
                  (e && (o.style.transform = "none"),
                  i && (o.style.webkitTransform = "none"),
                  r.roundLengths)
                )
                  l = a.isHorizontal() ? A(o, "width", !0) : A(o, "height", !0);
                else {
                  let i = d(t, "width"),
                    s = d(t, "padding-left"),
                    a = d(t, "padding-right"),
                    r = d(t, "margin-left"),
                    n = d(t, "margin-right"),
                    e = t.getPropertyValue("box-sizing");
                  if (e && "border-box" === e) l = i + r + n;
                  else {
                    let { clientWidth: e, offsetWidth: t } = o;
                    l = i + s + a + r + n + (t - e);
                  }
                }
                e && (o.style.transform = e),
                  i && (o.style.webkitTransform = i),
                  r.roundLengths && (l = Math.floor(l));
              } else
                (l = (n - (r.slidesPerView - 1) * y) / r.slidesPerView),
                  r.roundLengths && (l = Math.floor(l)),
                  p[s] && (p[s].style[a.getDirectionLabel("width")] = l + "px");
              p[s] && (p[s].swiperSlideSize = l),
                f.push(l),
                r.centeredSlides
                  ? ((_ = _ + l / 2 + E / 2 + y),
                    0 === E && 0 !== s && (_ = _ - n / 2 - y),
                    0 === s && (_ = _ - n / 2 - y),
                    Math.abs(_) < 0.001 && (_ = 0),
                    r.roundLengths && (_ = Math.floor(_)),
                    x % r.slidesPerGroup == 0 && h.push(_),
                    m.push(_))
                  : (r.roundLengths && (_ = Math.floor(_)),
                    (x - Math.min(a.params.slidesPerGroupSkip, x)) %
                      a.params.slidesPerGroup ==
                      0 && h.push(_),
                    m.push(_),
                    (_ = _ + l + y)),
                (a.virtualSize += l + y),
                (E = l),
                (x += 1);
            }
          }
          if (
            ((a.virtualSize = Math.max(a.virtualSize, n) + v),
            i &&
              s &&
              ("slide" === r.effect || "coverflow" === r.effect) &&
              (e.style.width = a.virtualSize + y + "px"),
            r.setWrapperSize &&
              (e.style[a.getDirectionLabel("width")] =
                a.virtualSize + y + "px"),
            T && a.grid.updateWrapperSize(l, h),
            !r.centeredSlides)
          ) {
            let i = [];
            for (let t = 0; t < h.length; t += 1) {
              let e = h[t];
              r.roundLengths && (e = Math.floor(e)),
                h[t] <= a.virtualSize - n && i.push(e);
            }
            (h = i),
              1 < Math.floor(a.virtualSize - n) - Math.floor(h[h.length - 1]) &&
                h.push(a.virtualSize - n);
          }
          if (o && r.loop) {
            let s = f[0] + y;
            if (1 < r.slidesPerGroup) {
              let t = Math.ceil(
                  (a.virtual.slidesBefore + a.virtual.slidesAfter) /
                    r.slidesPerGroup
                ),
                i = s * r.slidesPerGroup;
              for (let e = 0; e < t; e += 1) h.push(h[h.length - 1] + i);
            }
            for (
              let e = 0;
              e < a.virtual.slidesBefore + a.virtual.slidesAfter;
              e += 1
            )
              1 === r.slidesPerGroup && h.push(h[h.length - 1] + s),
                m.push(m[m.length - 1] + s),
                (a.virtualSize += s);
          }
          if ((0 === h.length && (h = [0]), 0 !== y)) {
            let t =
              a.isHorizontal() && i
                ? "marginLeft"
                : a.getDirectionLabel("marginRight");
            p.filter(
              (e, t) => !(r.cssMode && !r.loop) || t !== p.length - 1
            ).forEach((e) => {
              e.style[t] = y + "px";
            });
          }
          if (r.centeredSlides && r.centeredSlidesBounds) {
            let t = 0,
              i =
                (f.forEach((e) => {
                  t += e + (y || 0);
                }),
                (t -= y) > n ? t - n : 0);
            h = h.map((e) => (e <= 0 ? -g : e > i ? i + v : e));
          }
          if (r.centerInsufficientSlides) {
            let t = 0,
              e =
                (f.forEach((e) => {
                  t += e + (y || 0);
                }),
                (t -= y),
                (r.slidesOffsetBefore || 0) + (r.slidesOffsetAfter || 0));
            if (t + e < n) {
              let i = (n - t - e) / 2;
              h.forEach((e, t) => {
                h[t] = e - i;
              }),
                m.forEach((e, t) => {
                  m[t] = e + i;
                });
            }
          }
          if (
            (Object.assign(a, {
              slides: p,
              snapGrid: h,
              slidesGrid: m,
              slidesSizesGrid: f,
            }),
            r.centeredSlides && r.cssMode && !r.centeredSlidesBounds)
          ) {
            k(e, "--swiper-centered-offset-before", -h[0] + "px"),
              k(
                e,
                "--swiper-centered-offset-after",
                a.size / 2 - f[f.length - 1] / 2 + "px"
              );
            let t = -a.snapGrid[0],
              i = -a.slidesGrid[0];
            (a.snapGrid = a.snapGrid.map((e) => e + t)),
              (a.slidesGrid = a.slidesGrid.map((e) => e + i));
          }
          if (
            (u !== c && a.emit("slidesLengthChange"),
            h.length !== b &&
              (a.params.watchOverflow && a.checkOverflow(),
              a.emit("snapGridLengthChange")),
            m.length !== w && a.emit("slidesGridLengthChange"),
            r.watchSlidesProgress && a.updateSlidesOffset(),
            a.emit("slidesUpdated"),
            !(o || r.cssMode || ("slide" !== r.effect && "fade" !== r.effect)))
          ) {
            let e = r.containerModifierClass + "backface-hidden",
              t = a.el.classList.contains(e);
            u <= r.maxBackfaceHiddenSlides
              ? t || a.el.classList.add(e)
              : t && a.el.classList.remove(e);
          }
        }
      },
      updateAutoHeight: function (e) {
        let t = this,
          i = [],
          s = t.virtual && t.params.virtual.enabled,
          a,
          r = 0;
        "number" == typeof e
          ? t.setTransition(e)
          : !0 === e && t.setTransition(t.params.speed);
        var n = (e) => (s ? t.slides[t.getSlideIndexByData(e)] : t.slides[e]);
        if ("auto" !== t.params.slidesPerView && 1 < t.params.slidesPerView)
          if (t.params.centeredSlides)
            (t.visibleSlides || []).forEach((e) => {
              i.push(e);
            });
          else
            for (a = 0; a < Math.ceil(t.params.slidesPerView); a += 1) {
              let e = t.activeIndex + a;
              if (e > t.slides.length && !s) break;
              i.push(n(e));
            }
        else i.push(n(t.activeIndex));
        for (a = 0; a < i.length; a += 1)
          if (void 0 !== i[a]) {
            let e = i[a].offsetHeight;
            r = e > r ? e : r;
          }
        (!r && 0 !== r) || (t.wrapperEl.style.height = r + "px");
      },
      updateSlidesOffset: function () {
        var t = this,
          i = t.slides,
          s = t.isElement
            ? t.isHorizontal()
              ? t.wrapperEl.offsetLeft
              : t.wrapperEl.offsetTop
            : 0;
        for (let e = 0; e < i.length; e += 1)
          i[e].swiperSlideOffset =
            (t.isHorizontal() ? i[e].offsetLeft : i[e].offsetTop) -
            s -
            t.cssOverflowAdjustment();
      },
      updateSlidesProgress: function (e) {
        void 0 === e && (e = (this && this.translate) || 0);
        var a = this,
          r = a.params,
          { slides: n, rtlTranslate: o, snapGrid: l } = a;
        if (0 !== n.length) {
          void 0 === n[0].swiperSlideOffset && a.updateSlidesOffset();
          let i = o ? e : -e,
            s =
              ((a.visibleSlidesIndexes = []),
              (a.visibleSlides = []),
              r.spaceBetween);
          "string" == typeof s && 0 <= s.indexOf("%")
            ? (s = (parseFloat(s.replace("%", "")) / 100) * a.size)
            : "string" == typeof s && (s = parseFloat(s));
          for (let t = 0; t < n.length; t += 1) {
            var d = n[t];
            let e = d.swiperSlideOffset;
            r.cssMode && r.centeredSlides && (e -= n[0].swiperSlideOffset);
            var c =
                (i + (r.centeredSlides ? a.minTranslate() : 0) - e) /
                (d.swiperSlideSize + s),
              p =
                (i - l[0] + (r.centeredSlides ? a.minTranslate() : 0) - e) /
                (d.swiperSlideSize + s),
              u = -(i - e),
              h = u + a.slidesSizesGrid[t],
              m = 0 <= u && u <= a.size - a.slidesSizesGrid[t],
              u =
                (0 <= u && u < a.size - 1) ||
                (1 < h && h <= a.size) ||
                (u <= 0 && h >= a.size);
            u && (a.visibleSlides.push(d), a.visibleSlidesIndexes.push(t)),
              Y(d, u, r.slideVisibleClass),
              Y(d, m, r.slideFullyVisibleClass),
              (d.progress = o ? -c : c),
              (d.originalProgress = o ? -p : p);
          }
        }
      },
      updateProgress: function (n) {
        var o = this;
        if (void 0 === n) {
          let e = o.rtlTranslate ? -1 : 1;
          n = (o && o.translate && o.translate * e) || 0;
        }
        let e = o.params,
          i = o.maxTranslate() - o.minTranslate(),
          { progress: s, isBeginning: a, isEnd: r, progressLoop: l } = o,
          t = a,
          d = r;
        if (0 === i) (s = 0), (a = !0), (r = !0);
        else {
          s = (n - o.minTranslate()) / i;
          let e = Math.abs(n - o.minTranslate()) < 1,
            t = Math.abs(n - o.maxTranslate()) < 1;
          (a = e || s <= 0), (r = t || 1 <= s), e && (s = 0), t && (s = 1);
        }
        if (e.loop) {
          let e = o.getSlideIndexByData(0),
            t = o.getSlideIndexByData(o.slides.length - 1),
            i = o.slidesGrid[e],
            s = o.slidesGrid[t],
            a = o.slidesGrid[o.slidesGrid.length - 1],
            r = Math.abs(n);
          1 < (l = r >= i ? (r - i) / a : (r + a - s) / a) && --l;
        }
        Object.assign(o, {
          progress: s,
          progressLoop: l,
          isBeginning: a,
          isEnd: r,
        }),
          (e.watchSlidesProgress || (e.centeredSlides && e.autoHeight)) &&
            o.updateSlidesProgress(n),
          a && !t && o.emit("reachBeginning toEdge"),
          r && !d && o.emit("reachEnd toEdge"),
          ((t && !a) || (d && !r)) && o.emit("fromEdge"),
          o.emit("progress", s);
      },
      updateSlidesClasses: function () {
        let t = this,
          { slides: e, params: i, slidesEl: s, activeIndex: a } = t,
          r = t.virtual && i.virtual.enabled,
          n = t.grid && i.grid && 1 < i.grid.rows,
          o = (e) => H(s, `.${i.slideClass}${e}, swiper-slide` + e)[0],
          l,
          d,
          c;
        if (r)
          if (i.loop) {
            let e = a - t.virtual.slidesBefore;
            (e = e < 0 ? t.virtual.slides.length + e : e) >=
              t.virtual.slides.length && (e -= t.virtual.slides.length),
              (l = o(`[data-swiper-slide-index="${e}"]`));
          } else l = o(`[data-swiper-slide-index="${a}"]`);
        else
          n
            ? ((l = e.find((e) => e.column === a)),
              (c = e.find((e) => e.column === a + 1)),
              (d = e.find((e) => e.column === a - 1)))
            : (l = e[a]);
        l &&
          !n &&
          ((c = ((e, t) => {
            for (var i = []; e.nextElementSibling; ) {
              var s = e.nextElementSibling;
              (t && !s.matches(t)) || i.push(s), (e = s);
            }
            return i;
          })(l, `.${i.slideClass}, swiper-slide`)[0]),
          i.loop && !c && (c = e[0]),
          (d = ((e, t) => {
            for (var i = []; e.previousElementSibling; ) {
              var s = e.previousElementSibling;
              (t && !s.matches(t)) || i.push(s), (e = s);
            }
            return i;
          })(l, `.${i.slideClass}, swiper-slide`)[0]),
          i.loop) &&
          0 === !d &&
          (d = e[e.length - 1]),
          e.forEach((e) => {
            p(e, e === l, i.slideActiveClass),
              p(e, e === c, i.slideNextClass),
              p(e, e === d, i.slidePrevClass);
          }),
          t.emitSlidesClasses();
      },
      updateActiveIndex: function (e) {
        let s = this,
          t = s.rtlTranslate ? s.translate : -s.translate,
          {
            snapGrid: i,
            params: a,
            activeIndex: r,
            realIndex: n,
            snapIndex: o,
          } = s,
          l,
          d = e;
        e = (e) => {
          let t = e - s.virtual.slidesBefore;
          return (
            (t = t < 0 ? s.virtual.slides.length + t : t) >=
              s.virtual.slides.length && (t -= s.virtual.slides.length),
            t
          );
        };
        if (
          (void 0 === d &&
            (d = ((e) => {
              var { slidesGrid: t, params: i } = e,
                s = e.rtlTranslate ? e.translate : -e.translate;
              let a;
              for (let e = 0; e < t.length; e += 1)
                void 0 !== t[e + 1]
                  ? s >= t[e] && s < t[e + 1] - (t[e + 1] - t[e]) / 2
                    ? (a = e)
                    : s >= t[e] && s < t[e + 1] && (a = e + 1)
                  : s >= t[e] && (a = e);
              return (a =
                i.normalizeSlideIndex && (a < 0 || void 0 === a) ? 0 : a);
            })(s)),
          0 <= i.indexOf(t))
        )
          l = i.indexOf(t);
        else {
          let e = Math.min(a.slidesPerGroupSkip, d);
          l = e + Math.floor((d - e) / a.slidesPerGroup);
        }
        if ((l >= i.length && (l = i.length - 1), d !== r || s.params.loop))
          if (d === r && s.params.loop && s.virtual && s.params.virtual.enabled)
            s.realIndex = e(d);
          else {
            var c = s.grid && a.grid && 1 < a.grid.rows;
            let i;
            if (s.virtual && a.virtual.enabled && a.loop) i = e(d);
            else if (c) {
              let e = s.slides.find((e) => e.column === d),
                t = parseInt(e.getAttribute("data-swiper-slide-index"), 10);
              Number.isNaN(t) && (t = Math.max(s.slides.indexOf(e), 0)),
                (i = Math.floor(t / a.grid.rows));
            } else if (s.slides[d]) {
              let e = s.slides[d].getAttribute("data-swiper-slide-index");
              i = e ? parseInt(e, 10) : d;
            } else i = d;
            Object.assign(s, {
              previousSnapIndex: o,
              snapIndex: l,
              previousRealIndex: n,
              realIndex: i,
              previousIndex: r,
              activeIndex: d,
            }),
              s.initialized && u(s),
              s.emit("activeIndexChange"),
              s.emit("snapIndexChange"),
              (s.initialized || s.params.runCallbacksOnInit) &&
                (n !== i && s.emit("realIndexChange"), s.emit("slideChange"));
          }
        else l !== o && ((s.snapIndex = l), s.emit("snapIndexChange"));
      },
      updateClickedSlide: function (e, t) {
        let i = this,
          s = i.params,
          a = e.closest(`.${s.slideClass}, swiper-slide`);
        !a &&
          i.isElement &&
          t &&
          1 < t.length &&
          t.includes(e) &&
          [...t.slice(t.indexOf(e) + 1, t.length)].forEach((e) => {
            !a &&
              e.matches &&
              e.matches(`.${s.slideClass}, swiper-slide`) &&
              (a = e);
          });
        let r,
          n = !1;
        if (a)
          for (let e = 0; e < i.slides.length; e += 1)
            if (i.slides[e] === a) {
              (n = !0), (r = e);
              break;
            }
        a && n
          ? ((i.clickedSlide = a),
            i.virtual && i.params.virtual.enabled
              ? (i.clickedIndex = parseInt(
                  a.getAttribute("data-swiper-slide-index"),
                  10
                ))
              : (i.clickedIndex = r),
            s.slideToClickedSlide &&
              void 0 !== i.clickedIndex &&
              i.clickedIndex !== i.activeIndex &&
              i.slideToClickedSlide())
          : ((i.clickedSlide = void 0), (i.clickedIndex = void 0));
      },
    },
    U = {
      getTranslate: function (e) {
        void 0 === e && (e = this.isHorizontal() ? "x" : "y");
        var { params: t, rtlTranslate: i, translate: s, wrapperEl: a } = this;
        if (t.virtualTranslate) return i ? -s : s;
        if (t.cssMode) return s;
        let r = j(a, e);
        return (r += this.cssOverflowAdjustment()), (r = i ? -r : r) || 0;
      },
      setTranslate: function (e, t) {
        var i = this,
          { rtlTranslate: s, params: a, wrapperEl: r, progress: n } = i;
        let o = 0,
          l = 0;
        i.isHorizontal() ? (o = s ? -e : e) : (l = e),
          a.roundLengths && ((o = Math.floor(o)), (l = Math.floor(l))),
          (i.previousTranslate = i.translate),
          (i.translate = i.isHorizontal() ? o : l),
          a.cssMode
            ? (r[i.isHorizontal() ? "scrollLeft" : "scrollTop"] =
                i.isHorizontal() ? -o : -l)
            : a.virtualTranslate ||
              (i.isHorizontal()
                ? (o -= i.cssOverflowAdjustment())
                : (l -= i.cssOverflowAdjustment()),
              (r.style.transform = `translate3d(${o}px, ${l}px, 0px)`));
        s = i.maxTranslate() - i.minTranslate();
        (0 == s ? 0 : (e - i.minTranslate()) / s) !== n && i.updateProgress(e),
          i.emit("setTranslate", i.translate, t);
      },
      minTranslate: function () {
        return -this.snapGrid[0];
      },
      maxTranslate: function () {
        return -this.snapGrid[this.snapGrid.length - 1];
      },
      translateTo: function (e, t, i, s, a) {
        void 0 === e && (e = 0),
          void 0 === t && (t = this.params.speed),
          void 0 === i && (i = !0),
          void 0 === s && (s = !0);
        let r = this,
          { params: n, wrapperEl: o } = r;
        if (r.animating && n.preventInteractionOnTransition) return !1;
        var l = r.minTranslate(),
          d = r.maxTranslate(),
          l = s && l < e ? l : s && e < d ? d : e;
        if ((r.updateProgress(l), n.cssMode)) {
          let e = r.isHorizontal();
          if (0 === t) o[e ? "scrollLeft" : "scrollTop"] = -l;
          else {
            if (!r.support.smoothScroll)
              return (
                w({ swiper: r, targetPosition: -l, side: e ? "left" : "top" }),
                !0
              );
            o.scrollTo({ [e ? "left" : "top"]: -l, behavior: "smooth" });
          }
        } else
          0 === t
            ? (r.setTransition(0),
              r.setTranslate(l),
              i &&
                (r.emit("beforeTransitionStart", t, a),
                r.emit("transitionEnd")))
            : (r.setTransition(t),
              r.setTranslate(l),
              i &&
                (r.emit("beforeTransitionStart", t, a),
                r.emit("transitionStart")),
              r.animating ||
                ((r.animating = !0),
                r.onTranslateToWrapperTransitionEnd ||
                  (r.onTranslateToWrapperTransitionEnd = function (e) {
                    r &&
                      !r.destroyed &&
                      e.target === this &&
                      (r.wrapperEl.removeEventListener(
                        "transitionend",
                        r.onTranslateToWrapperTransitionEnd
                      ),
                      (r.onTranslateToWrapperTransitionEnd = null),
                      delete r.onTranslateToWrapperTransitionEnd,
                      (r.animating = !1),
                      i) &&
                      r.emit("transitionEnd");
                  }),
                r.wrapperEl.addEventListener(
                  "transitionend",
                  r.onTranslateToWrapperTransitionEnd
                )));
        return !0;
      },
    };
  function K(e) {
    var { swiper: e, runCallbacks: t, direction: i, step: s } = e,
      { activeIndex: a, previousIndex: r } = e;
    let n = i;
    (n = n || (r < a ? "next" : a < r ? "prev" : "reset")),
      e.emit("transition" + s),
      t && "reset" === n
        ? e.emit("slideResetTransition" + s)
        : t &&
          a !== r &&
          (e.emit("slideChangeTransition" + s),
          "next" === n
            ? e.emit("slideNextTransition" + s)
            : e.emit("slidePrevTransition" + s));
  }
  function Q(e, t, i) {
    var s = N(),
      e = e.params,
      a = e.edgeSwipeDetection,
      e = e.edgeSwipeThreshold;
    return (
      !a ||
      !(i <= e || i >= s.innerWidth - e) ||
      ("prevent" === a && (t.preventDefault(), !0))
    );
  }
  function Z(i) {
    var s = this,
      a = L();
    let r = i;
    r.originalEvent && (r = r.originalEvent);
    i = s.touchEventsData;
    if ("pointerdown" === r.type) {
      if (null !== i.pointerId && i.pointerId !== r.pointerId) return;
      i.pointerId = r.pointerId;
    } else
      "touchstart" === r.type &&
        1 === r.targetTouches.length &&
        (i.touchId = r.targetTouches[0].identifier);
    if ("touchstart" === r.type) Q(s, r, r.targetTouches[0].pageX);
    else {
      var { params: n, touches: o, enabled: l } = s;
      if (
        l &&
        (n.simulateTouch || "mouse" !== r.pointerType) &&
        (!s.animating || !n.preventInteractionOnTransition)
      ) {
        !s.animating && n.cssMode && n.loop && s.loopFix();
        let t = r.target;
        if (
          ("wrapper" !== n.touchEventsTarget ||
            ((e, t) => {
              var i = N();
              let s = t.contains(e);
              return (s =
                !s && i.HTMLSlotElement && t instanceof HTMLSlotElement
                  ? (s = [...t.assignedElements()].includes(e)) ||
                    ((t, e) => {
                      for (var i = [e]; 0 < i.length; ) {
                        let e = i.shift();
                        if (t === e) return !0;
                        i.push(
                          ...e.children,
                          ...(e.shadowRoot ? e.shadowRoot.children : []),
                          ...(e.assignedElements ? e.assignedElements() : [])
                        );
                      }
                    })(e, t)
                  : s);
            })(t, s.wrapperEl)) &&
          !(
            ("which" in r && 3 === r.which) ||
            ("button" in r && 0 < r.button) ||
            (i.isTouched && i.isMoved)
          )
        ) {
          var l = !!n.noSwipingClass && "" !== n.noSwipingClass,
            d = r.composedPath ? r.composedPath() : r.path,
            l =
              (l && r.target && r.target.shadowRoot && d && (t = d[0]),
              n.noSwipingSelector || "." + n.noSwipingClass),
            d = !(!r.target || !r.target.shadowRoot);
          if (
            n.noSwiping &&
            (d
              ? (function (s, e) {
                  return (function e(t) {
                    var i;
                    return t &&
                      t !== L() &&
                      t !== N() &&
                      ((i = (t = t.assignedSlot ? t.assignedSlot : t).closest(
                        s
                      )) ||
                        t.getRootNode)
                      ? i || e(t.getRootNode().host)
                      : null;
                  })((e = void 0 === t ? this : e));
                })(l, t)
              : t.closest(l))
          )
            s.allowClick = !0;
          else if (!n.swipeHandler || t.closest(n.swipeHandler)) {
            (o.currentX = r.pageX), (o.currentY = r.pageY);
            (d = o.currentX), (l = o.currentY);
            if (Q(s, r, d)) {
              Object.assign(i, {
                isTouched: !0,
                isMoved: !1,
                allowTouchCallbacks: !0,
                isScrolling: void 0,
                startMoving: void 0,
              }),
                (o.startX = d),
                (o.startY = l),
                (i.touchStartTime = v()),
                (s.allowClick = !0),
                s.updateSize(),
                (s.swipeDirection = void 0),
                0 < n.threshold && (i.allowThresholdMove = !1);
              let e = !0;
              t.matches(i.focusableElements) &&
                ((e = !1), "SELECT" === t.nodeName) &&
                (i.isTouched = !1),
                a.activeElement &&
                  a.activeElement.matches(i.focusableElements) &&
                  a.activeElement !== t &&
                  ("mouse" === r.pointerType ||
                    ("mouse" !== r.pointerType &&
                      !t.matches(i.focusableElements))) &&
                  a.activeElement.blur();
              d = e && s.allowTouchMove && n.touchStartPreventDefault;
              (!n.touchStartForcePreventDefault && !d) ||
                t.isContentEditable ||
                r.preventDefault(),
                n.freeMode &&
                  n.freeMode.enabled &&
                  s.freeMode &&
                  s.animating &&
                  !n.cssMode &&
                  s.freeMode.onTouchStart(),
                s.emit("touchStart", r);
            }
          }
        }
      }
    }
  }
  function J() {
    let e = this,
      { params: t, el: i } = e;
    var s, a, r, n, o;
    (i && 0 === i.offsetWidth) ||
      (t.breakpoints && e.setBreakpoint(),
      ({ allowSlideNext: s, allowSlidePrev: a, snapGrid: r } = e),
      (n = e.virtual && e.params.virtual.enabled),
      (e.allowSlideNext = !0),
      (e.allowSlidePrev = !0),
      e.updateSize(),
      e.updateSlides(),
      e.updateSlidesClasses(),
      (o = n && t.loop),
      !("auto" === t.slidesPerView || 1 < t.slidesPerView) ||
      !e.isEnd ||
      e.isBeginning ||
      e.params.centeredSlides ||
      o
        ? e.params.loop && !n
          ? e.slideToLoop(e.realIndex, 0, !1, !0)
          : e.slideTo(e.activeIndex, 0, !1, !0)
        : e.slideTo(e.slides.length - 1, 0, !1, !0),
      e.autoplay &&
        e.autoplay.running &&
        e.autoplay.paused &&
        (clearTimeout(e.autoplay.resizeTimeout),
        (e.autoplay.resizeTimeout = setTimeout(() => {
          e.autoplay &&
            e.autoplay.running &&
            e.autoplay.paused &&
            e.autoplay.resume();
        }, 500))),
      (e.allowSlidePrev = a),
      (e.allowSlideNext = s),
      e.params.watchOverflow && r !== e.snapGrid && e.checkOverflow());
  }
  let ee = (e, t) => {
      var i = L(),
        { params: s, el: a, wrapperEl: r, device: n } = e,
        o = !!s.nested,
        l = "on" === t ? "addEventListener" : "removeEventListener";
      a &&
        "string" != typeof a &&
        (i[l]("touchstart", e.onDocumentTouchStart, {
          passive: !1,
          capture: o,
        }),
        a[l]("touchstart", e.onTouchStart, { passive: !1 }),
        a[l]("pointerdown", e.onTouchStart, { passive: !1 }),
        i[l]("touchmove", e.onTouchMove, { passive: !1, capture: o }),
        i[l]("pointermove", e.onTouchMove, { passive: !1, capture: o }),
        i[l]("touchend", e.onTouchEnd, { passive: !0 }),
        i[l]("pointerup", e.onTouchEnd, { passive: !0 }),
        i[l]("pointercancel", e.onTouchEnd, { passive: !0 }),
        i[l]("touchcancel", e.onTouchEnd, { passive: !0 }),
        i[l]("pointerout", e.onTouchEnd, { passive: !0 }),
        i[l]("pointerleave", e.onTouchEnd, { passive: !0 }),
        i[l]("contextmenu", e.onTouchEnd, { passive: !0 }),
        (s.preventClicks || s.preventClicksPropagation) &&
          a[l]("click", e.onClick, !0),
        s.cssMode && r[l]("scroll", e.onScroll),
        s.updateOnWindowResize
          ? e[t](
              n.ios || n.android
                ? "resize orientationchange observerUpdate"
                : "resize observerUpdate",
              J,
              !0
            )
          : e[t]("observerUpdate", J, !0),
        a[l]("load", e.onLoad, { capture: !0 }));
    },
    te = (e, t) => e.grid && t.grid && 1 < t.grid.rows;
  var ie = {
    init: !0,
    direction: "horizontal",
    oneWayMovement: !1,
    swiperElementNodeName: "SWIPER-CONTAINER",
    touchEventsTarget: "wrapper",
    initialSlide: 0,
    speed: 300,
    cssMode: !1,
    updateOnWindowResize: !0,
    resizeObserver: !0,
    nested: !1,
    createElements: !1,
    eventsPrefix: "swiper",
    enabled: !0,
    focusableElements: "input, select, option, textarea, button, video, label",
    width: null,
    height: null,
    preventInteractionOnTransition: !1,
    userAgent: null,
    url: null,
    edgeSwipeDetection: !1,
    edgeSwipeThreshold: 20,
    autoHeight: !1,
    setWrapperSize: !1,
    virtualTranslate: !1,
    effect: "slide",
    breakpoints: void 0,
    breakpointsBase: "window",
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerGroup: 1,
    slidesPerGroupSkip: 0,
    slidesPerGroupAuto: !1,
    centeredSlides: !1,
    centeredSlidesBounds: !1,
    slidesOffsetBefore: 0,
    slidesOffsetAfter: 0,
    normalizeSlideIndex: !0,
    centerInsufficientSlides: !1,
    watchOverflow: !0,
    roundLengths: !1,
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: !0,
    shortSwipes: !0,
    longSwipes: !0,
    longSwipesRatio: 0.5,
    longSwipesMs: 300,
    followFinger: !0,
    allowTouchMove: !0,
    threshold: 5,
    touchMoveStopPropagation: !1,
    touchStartPreventDefault: !0,
    touchStartForcePreventDefault: !1,
    touchReleaseOnEdges: !1,
    uniqueNavElements: !0,
    resistance: !0,
    resistanceRatio: 0.85,
    watchSlidesProgress: !1,
    grabCursor: !1,
    preventClicks: !0,
    preventClicksPropagation: !0,
    slideToClickedSlide: !1,
    loop: !1,
    loopAddBlankSlides: !0,
    loopAdditionalSlides: 0,
    loopPreventsSliding: !0,
    rewind: !1,
    allowSlidePrev: !0,
    allowSlideNext: !0,
    swipeHandler: null,
    noSwiping: !0,
    noSwipingClass: "swiper-no-swiping",
    noSwipingSelector: null,
    passiveListeners: !0,
    maxBackfaceHiddenSlides: 10,
    containerModifierClass: "swiper-",
    slideClass: "swiper-slide",
    slideBlankClass: "swiper-slide-blank",
    slideActiveClass: "swiper-slide-active",
    slideVisibleClass: "swiper-slide-visible",
    slideFullyVisibleClass: "swiper-slide-fully-visible",
    slideNextClass: "swiper-slide-next",
    slidePrevClass: "swiper-slide-prev",
    wrapperClass: "swiper-wrapper",
    lazyPreloaderClass: "swiper-lazy-preloader",
    lazyPreloadPrevNext: 0,
    runCallbacksOnInit: !0,
    _emitClasses: !1,
  };
  let i = {
      eventsEmitter: X,
      update: V,
      translate: U,
      transition: {
        setTransition: function (e, t) {
          this.params.cssMode ||
            ((this.wrapperEl.style.transitionDuration = e + "ms"),
            (this.wrapperEl.style.transitionDelay = 0 === e ? "0ms" : "")),
            this.emit("setTransition", e, t);
        },
        transitionStart: function (e, t) {
          void 0 === e && (e = !0);
          var i = this.params;
          i.cssMode ||
            (i.autoHeight && this.updateAutoHeight(),
            K({ swiper: this, runCallbacks: e, direction: t, step: "Start" }));
        },
        transitionEnd: function (e, t) {
          void 0 === e && (e = !0);
          var i = this.params;
          (this.animating = !1),
            i.cssMode ||
              (this.setTransition(0),
              K({ swiper: this, runCallbacks: e, direction: t, step: "End" }));
        },
      },
      slide: {
        slideTo: function (e, i, t, s, a) {
          void 0 === t && (t = !0),
            "string" == typeof (e = void 0 === e ? 0 : e) &&
              (e = parseInt(e, 10));
          let r = this,
            n = e,
            {
              params: o,
              snapGrid: l,
              slidesGrid: d,
              previousIndex: c,
              activeIndex: p,
              rtlTranslate: u,
              wrapperEl: h,
              enabled: m,
            } = (n < 0 && (n = 0), r);
          if (
            (!m && !s && !a) ||
            r.destroyed ||
            (r.animating && o.preventInteractionOnTransition)
          )
            return !1;
          void 0 === i && (i = r.params.speed);
          e = Math.min(r.params.slidesPerGroupSkip, n);
          let f = e + Math.floor((n - e) / r.params.slidesPerGroup);
          var g = -l[(f = f >= l.length ? l.length - 1 : f)];
          if (o.normalizeSlideIndex)
            for (let s = 0; s < d.length; s += 1) {
              let e = -Math.floor(100 * g),
                t = Math.floor(100 * d[s]),
                i = Math.floor(100 * d[s + 1]);
              void 0 !== d[s + 1]
                ? e >= t && e < i - (i - t) / 2
                  ? (n = s)
                  : e >= t && e < i && (n = s + 1)
                : e >= t && (n = s);
            }
          if (r.initialized && n !== p) {
            if (
              !r.allowSlideNext &&
              (u
                ? g > r.translate && g > r.minTranslate()
                : g < r.translate && g < r.minTranslate())
            )
              return !1;
            if (
              !r.allowSlidePrev &&
              g > r.translate &&
              g > r.maxTranslate() &&
              (p || 0) !== n
            )
              return !1;
          }
          let v;
          n !== (c || 0) && t && r.emit("beforeSlideChangeStart"),
            r.updateProgress(g),
            (v = n > p ? "next" : n < p ? "prev" : "reset");
          var b = r.virtual && r.params.virtual.enabled;
          if (
            (!b || !a) &&
            ((u && -g === r.translate) || (!u && g === r.translate))
          )
            return (
              r.updateActiveIndex(n),
              o.autoHeight && r.updateAutoHeight(),
              r.updateSlidesClasses(),
              "slide" !== o.effect && r.setTranslate(g),
              "reset" != v && (r.transitionStart(t, v), r.transitionEnd(t, v)),
              !1
            );
          if (o.cssMode) {
            let e = r.isHorizontal(),
              t = u ? g : -g;
            if (0 === i)
              b &&
                ((r.wrapperEl.style.scrollSnapType = "none"),
                (r._immediateVirtual = !0)),
                b && !r._cssModeVirtualInitialSet && 0 < r.params.initialSlide
                  ? ((r._cssModeVirtualInitialSet = !0),
                    requestAnimationFrame(() => {
                      h[e ? "scrollLeft" : "scrollTop"] = t;
                    }))
                  : (h[e ? "scrollLeft" : "scrollTop"] = t),
                b &&
                  requestAnimationFrame(() => {
                    (r.wrapperEl.style.scrollSnapType = ""),
                      (r._immediateVirtual = !1);
                  });
            else {
              if (!r.support.smoothScroll)
                return (
                  w({ swiper: r, targetPosition: t, side: e ? "left" : "top" }),
                  !0
                );
              h.scrollTo({ [e ? "left" : "top"]: t, behavior: "smooth" });
            }
          } else {
            e = G().isSafari;
            b && !a && e && r.isElement && r.virtual.update(!1, !1, n),
              r.setTransition(i),
              r.setTranslate(g),
              r.updateActiveIndex(n),
              r.updateSlidesClasses(),
              r.emit("beforeTransitionStart", i, s),
              r.transitionStart(t, v),
              0 === i
                ? r.transitionEnd(t, v)
                : r.animating ||
                  ((r.animating = !0),
                  r.onSlideToWrapperTransitionEnd ||
                    (r.onSlideToWrapperTransitionEnd = function (e) {
                      r &&
                        !r.destroyed &&
                        e.target === this &&
                        (r.wrapperEl.removeEventListener(
                          "transitionend",
                          r.onSlideToWrapperTransitionEnd
                        ),
                        (r.onSlideToWrapperTransitionEnd = null),
                        delete r.onSlideToWrapperTransitionEnd,
                        r.transitionEnd(t, v));
                    }),
                  r.wrapperEl.addEventListener(
                    "transitionend",
                    r.onSlideToWrapperTransitionEnd
                  ));
          }
          return !0;
        },
        slideToLoop: function (e, t, i, n) {
          void 0 === i && (i = !0),
            "string" == typeof (e = void 0 === e ? 0 : e) &&
              (e = parseInt(e, 10));
          let o = this;
          if (!o.destroyed) {
            void 0 === t && (t = o.params.speed);
            var l = o.grid && o.params.grid && 1 < o.params.grid.rows;
            let r = e;
            if (o.params.loop)
              if (o.virtual && o.params.virtual.enabled)
                r += o.virtual.slidesBefore;
              else {
                let i;
                if (l) {
                  let t = r * o.params.grid.rows;
                  i = o.slides.find(
                    (e) => +e.getAttribute("data-swiper-slide-index") == t
                  ).column;
                } else i = o.getSlideIndexByData(r);
                let t = l
                    ? Math.ceil(o.slides.length / o.params.grid.rows)
                    : o.slides.length,
                  s = o.params.centeredSlides,
                  e = o.params.slidesPerView,
                  a =
                    ("auto" === e
                      ? (e = o.slidesPerViewDynamic())
                      : ((e = Math.ceil(
                          parseFloat(o.params.slidesPerView, 10)
                        )),
                        s && e % 2 == 0 && (e += 1)),
                    t - i < e);
                if (
                  (s && (a = a || i < Math.ceil(e / 2)),
                  (a =
                    n && s && "auto" !== o.params.slidesPerView && !l ? !1 : a))
                ) {
                  let e = s
                    ? i < o.activeIndex
                      ? "prev"
                      : "next"
                    : i - o.activeIndex - 1 < o.params.slidesPerView
                    ? "next"
                    : "prev";
                  o.loopFix({
                    direction: e,
                    slideTo: !0,
                    activeSlideIndex: "next" == e ? i + 1 : i - t + 1,
                    slideRealIndex: "next" == e ? o.realIndex : void 0,
                  });
                }
                if (l) {
                  let t = r * o.params.grid.rows;
                  r = o.slides.find(
                    (e) => +e.getAttribute("data-swiper-slide-index") == t
                  ).column;
                } else r = o.getSlideIndexByData(r);
              }
            return (
              requestAnimationFrame(() => {
                o.slideTo(r, t, i, n);
              }),
              o
            );
          }
        },
        slideNext: function (e, t, i) {
          void 0 === t && (t = !0);
          let s = this,
            { enabled: a, params: r, animating: n } = s;
          if (!a || s.destroyed) return s;
          void 0 === e && (e = s.params.speed);
          let o = r.slidesPerGroup,
            l =
              ("auto" === r.slidesPerView &&
                1 === r.slidesPerGroup &&
                r.slidesPerGroupAuto &&
                (o = Math.max(s.slidesPerViewDynamic("current", !0), 1)),
              s.activeIndex < r.slidesPerGroupSkip ? 1 : o),
            d = s.virtual && r.virtual.enabled;
          if (r.loop) {
            if (n && !d && r.loopPreventsSliding) return !1;
            if (
              (s.loopFix({ direction: "next" }),
              (s._clientLeft = s.wrapperEl.clientLeft),
              s.activeIndex === s.slides.length - 1 && r.cssMode)
            )
              return (
                requestAnimationFrame(() => {
                  s.slideTo(s.activeIndex + l, e, t, i);
                }),
                !0
              );
          }
          return r.rewind && s.isEnd
            ? s.slideTo(0, e, t, i)
            : s.slideTo(s.activeIndex + l, e, t, i);
        },
        slidePrev: function (t, i, s) {
          void 0 === i && (i = !0);
          let a = this,
            {
              params: e,
              snapGrid: r,
              slidesGrid: n,
              rtlTranslate: o,
              enabled: l,
              animating: d,
            } = a;
          if (!l || a.destroyed) return a;
          void 0 === t && (t = a.params.speed);
          var c = a.virtual && e.virtual.enabled;
          if (e.loop) {
            if (d && !c && e.loopPreventsSliding) return !1;
            a.loopFix({ direction: "prev" }),
              (a._clientLeft = a.wrapperEl.clientLeft);
          }
          function p(e) {
            return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);
          }
          let u = p(o ? a.translate : -a.translate),
            h = r.map((e) => p(e)),
            m = e.freeMode && e.freeMode.enabled,
            f = r[h.indexOf(u) - 1];
          if (void 0 === f && (e.cssMode || m)) {
            let i;
            r.forEach((e, t) => {
              u >= e && (i = t);
            }),
              void 0 !== i && (f = m ? r[i] : r[0 < i ? i - 1 : i]);
          }
          let g = 0;
          if (
            (void 0 !== f &&
              ((g = n.indexOf(f)) < 0 && (g = a.activeIndex - 1),
              "auto" === e.slidesPerView) &&
              1 === e.slidesPerGroup &&
              e.slidesPerGroupAuto &&
              ((g = g - a.slidesPerViewDynamic("previous", !0) + 1),
              (g = Math.max(g, 0))),
            e.rewind && a.isBeginning)
          ) {
            let e =
              a.params.virtual && a.params.virtual.enabled && a.virtual
                ? a.virtual.slides.length - 1
                : a.slides.length - 1;
            return a.slideTo(e, t, i, s);
          }
          return e.loop && 0 === a.activeIndex && e.cssMode
            ? (requestAnimationFrame(() => {
                a.slideTo(g, t, i, s);
              }),
              !0)
            : a.slideTo(g, t, i, s);
        },
        slideReset: function (e, t, i) {
          void 0 === t && (t = !0);
          if (!this.destroyed)
            return (
              void 0 === e && (e = this.params.speed),
              this.slideTo(this.activeIndex, e, t, i)
            );
        },
        slideToClosest: function (e, i, s, a) {
          void 0 === i && (i = !0), void 0 === a && (a = 0.5);
          var r = this;
          if (!r.destroyed) {
            void 0 === e && (e = r.params.speed);
            let t = r.activeIndex;
            var n = Math.min(r.params.slidesPerGroupSkip, t),
              n = n + Math.floor((t - n) / r.params.slidesPerGroup),
              o = r.rtlTranslate ? r.translate : -r.translate;
            if (o >= r.snapGrid[n]) {
              let e = r.snapGrid[n];
              o - e > (r.snapGrid[n + 1] - e) * a &&
                (t += r.params.slidesPerGroup);
            } else {
              let e = r.snapGrid[n - 1];
              o - e <= (r.snapGrid[n] - e) * a &&
                (t -= r.params.slidesPerGroup);
            }
            return (
              (t = Math.max(t, 0)),
              (t = Math.min(t, r.slidesGrid.length - 1)),
              r.slideTo(t, e, i, s)
            );
          }
        },
        slideToClickedSlide: function () {
          let i = this;
          if (!i.destroyed) {
            var { params: s, slidesEl: a } = i,
              r =
                "auto" === s.slidesPerView
                  ? i.slidesPerViewDynamic()
                  : s.slidesPerView;
            let e,
              t = i.getSlideIndexWhenGrid(i.clickedIndex);
            var n = i.isElement ? "swiper-slide" : "." + s.slideClass,
              o = i.grid && i.params.grid && 1 < i.params.grid.rows;
            s.loop
              ? i.animating ||
                ((e = parseInt(
                  i.clickedSlide.getAttribute("data-swiper-slide-index"),
                  10
                )),
                s.centeredSlides
                  ? i.slideToLoop(e)
                  : t >
                    (o
                      ? (i.slides.length - r) / 2 - (i.params.grid.rows - 1)
                      : i.slides.length - r)
                  ? (i.loopFix(),
                    (t = i.getSlideIndex(
                      H(a, n + `[data-swiper-slide-index="${e}"]`)[0]
                    )),
                    S(() => {
                      i.slideTo(t);
                    }))
                  : i.slideTo(t))
              : i.slideTo(t);
          }
        },
      },
      loop: {
        loopCreate: function (e, t) {
          let i = this,
            { params: s, slidesEl: a } = i;
          var r, n, o, l, d;
          !s.loop ||
            (i.virtual && i.params.virtual.enabled) ||
            ((r = () => {
              H(a, `.${s.slideClass}, swiper-slide`).forEach((e, t) => {
                e.setAttribute("data-swiper-slide-index", t);
              });
            }),
            (l = i.grid && s.grid && 1 < s.grid.rows),
            s.loopAddBlankSlides &&
              (1 < s.slidesPerGroup || l) &&
              ((n = H(a, "." + s.slideBlankClass)).forEach((e) => {
                e.remove();
              }),
              0 < n.length) &&
              (i.recalcSlides(), i.updateSlides()),
            (n = s.slidesPerGroup * (l ? s.grid.rows : 1)),
            (o = i.slides.length % n != 0),
            (l = l && i.slides.length % s.grid.rows != 0),
            (d = (t) => {
              for (let e = 0; e < t; e += 1) {
                let e = i.isElement
                  ? P("swiper-slide", [s.slideBlankClass])
                  : P("div", [s.slideClass, s.slideBlankClass]);
                i.slidesEl.append(e);
              }
            }),
            o
              ? s.loopAddBlankSlides
                ? (d(n - (i.slides.length % n)),
                  i.recalcSlides(),
                  i.updateSlides())
                : O(
                    "Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"
                  )
              : l &&
                (s.loopAddBlankSlides
                  ? (d(s.grid.rows - (i.slides.length % s.grid.rows)),
                    i.recalcSlides(),
                    i.updateSlides())
                  : O(
                      "Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"
                    )),
            r(),
            i.loopFix({
              slideRealIndex: e,
              direction: s.centeredSlides ? void 0 : "next",
              initial: t,
            }));
        },
        loopFix: function (g) {
          let {
              slideRealIndex: v,
              slideTo: b = !0,
              direction: w,
              setTranslate: y,
              activeSlideIndex: _,
              initial: E,
              byController: x,
              byMousewheel: T,
            } = void 0 === g ? {} : g,
            S = this;
          if (S.params.loop) {
            S.emit("beforeLoopFix");
            let {
                slides: d,
                allowSlidePrev: c,
                allowSlideNext: p,
                slidesEl: u,
                params: h,
              } = S,
              { centeredSlides: m, initialSlide: f } = h;
            if (
              ((S.allowSlidePrev = !0),
              (S.allowSlideNext = !0),
              S.virtual && h.virtual.enabled)
            )
              b &&
                (h.centeredSlides || 0 !== S.snapIndex
                  ? h.centeredSlides && S.snapIndex < h.slidesPerView
                    ? S.slideTo(
                        S.virtual.slides.length + S.snapIndex,
                        0,
                        !1,
                        !0
                      )
                    : S.snapIndex === S.snapGrid.length - 1 &&
                      S.slideTo(S.virtual.slidesBefore, 0, !1, !0)
                  : S.slideTo(S.virtual.slides.length, 0, !1, !0)),
                (S.allowSlidePrev = c),
                (S.allowSlideNext = p);
            else {
              let e = h.slidesPerView;
              "auto" === e
                ? (e = S.slidesPerViewDynamic())
                : ((e = Math.ceil(parseFloat(h.slidesPerView, 10))),
                  m && e % 2 == 0 && (e += 1));
              g = h.slidesPerGroupAuto ? e : h.slidesPerGroup;
              let i = m ? Math.max(g, Math.ceil(e / 2)) : g;
              i % g != 0 && (i += g - (i % g)),
                (i += h.loopAdditionalSlides),
                (S.loopedSlides = i);
              var M = S.grid && h.grid && 1 < h.grid.rows;
              d.length < e + i ||
              ("cards" === S.params.effect && d.length < e + 2 * i)
                ? O(
                    "Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled or not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters"
                  )
                : M &&
                  "row" === h.grid.fill &&
                  O(
                    "Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`"
                  );
              let s = [],
                a = [],
                r = M ? Math.ceil(d.length / h.grid.rows) : d.length,
                t = E && r - f < e && !m,
                n = t ? f : S.activeIndex;
              void 0 === _
                ? (_ = S.getSlideIndex(
                    d.find((e) => e.classList.contains(h.slideActiveClass))
                  ))
                : (n = _);
              var C = "next" === w || !w,
                A = "prev" === w || !w;
              let o = 0,
                l = 0;
              var L =
                (M ? d[_].column : _) + (m && void 0 === y ? -e / 2 + 0.5 : 0);
              if (L < i) {
                o = Math.max(i - L, g);
                for (let t = 0; t < i - L; t += 1) {
                  let e = t - Math.floor(t / r) * r;
                  if (M) {
                    let t = r - e - 1;
                    for (let e = d.length - 1; 0 <= e; --e)
                      d[e].column === t && s.push(e);
                  } else s.push(r - e - 1);
                }
              } else if (L + e > r - i) {
                (l = Math.max(L - (r - 2 * i), g)),
                  t && (l = Math.max(l, e - r + f + 1));
                for (let e = 0; e < l; e += 1) {
                  let i = e - Math.floor(e / r) * r;
                  M
                    ? d.forEach((e, t) => {
                        e.column === i && a.push(t);
                      })
                    : a.push(i);
                }
              }
              if (
                ((S.__preventObserver__ = !0),
                requestAnimationFrame(() => {
                  S.__preventObserver__ = !1;
                }),
                "cards" === S.params.effect &&
                  d.length < e + 2 * i &&
                  (a.includes(_) && a.splice(a.indexOf(_), 1), s.includes(_)) &&
                  s.splice(s.indexOf(_), 1),
                A &&
                  s.forEach((e) => {
                    (d[e].swiperLoopMoveDOM = !0),
                      u.prepend(d[e]),
                      (d[e].swiperLoopMoveDOM = !1);
                  }),
                C &&
                  a.forEach((e) => {
                    (d[e].swiperLoopMoveDOM = !0),
                      u.append(d[e]),
                      (d[e].swiperLoopMoveDOM = !1);
                  }),
                S.recalcSlides(),
                "auto" === h.slidesPerView
                  ? S.updateSlides()
                  : M &&
                    ((0 < s.length && A) || (0 < a.length && C)) &&
                    S.slides.forEach((e, t) => {
                      S.grid.updateSlide(t, e, S.slides);
                    }),
                h.watchSlidesProgress && S.updateSlidesOffset(),
                b)
              )
                if (0 < s.length && A) {
                  if (void 0 === v) {
                    let e = S.slidesGrid[n],
                      t = S.slidesGrid[n + o] - e;
                    T
                      ? S.setTranslate(S.translate - t)
                      : (S.slideTo(n + Math.ceil(o), 0, !1, !0),
                        y &&
                          ((S.touchEventsData.startTranslate =
                            S.touchEventsData.startTranslate - t),
                          (S.touchEventsData.currentTranslate =
                            S.touchEventsData.currentTranslate - t)));
                  } else if (y) {
                    let e = M ? s.length / h.grid.rows : s.length;
                    S.slideTo(S.activeIndex + e, 0, !1, !0),
                      (S.touchEventsData.currentTranslate = S.translate);
                  }
                } else if (0 < a.length && C)
                  if (void 0 === v) {
                    let e = S.slidesGrid[n],
                      t = S.slidesGrid[n - l] - e;
                    T
                      ? S.setTranslate(S.translate - t)
                      : (S.slideTo(n - l, 0, !1, !0),
                        y &&
                          ((S.touchEventsData.startTranslate =
                            S.touchEventsData.startTranslate - t),
                          (S.touchEventsData.currentTranslate =
                            S.touchEventsData.currentTranslate - t)));
                  } else {
                    let e = M ? a.length / h.grid.rows : a.length;
                    S.slideTo(S.activeIndex - e, 0, !1, !0);
                  }
              if (
                ((S.allowSlidePrev = c),
                (S.allowSlideNext = p),
                S.controller && S.controller.control && !x)
              ) {
                let t = {
                  slideRealIndex: v,
                  direction: w,
                  setTranslate: y,
                  activeSlideIndex: _,
                  byController: !0,
                };
                Array.isArray(S.controller.control)
                  ? S.controller.control.forEach((e) => {
                      !e.destroyed &&
                        e.params.loop &&
                        e.loopFix({
                          ...t,
                          slideTo:
                            e.params.slidesPerView === h.slidesPerView && b,
                        });
                    })
                  : S.controller.control instanceof S.constructor &&
                    S.controller.control.params.loop &&
                    S.controller.control.loopFix({
                      ...t,
                      slideTo:
                        S.controller.control.params.slidesPerView ===
                          h.slidesPerView && b,
                    });
              }
            }
            S.emit("loopFix");
          }
        },
        loopDestroy: function () {
          let e = this,
            { params: t, slidesEl: s } = e;
          if (t.loop && s && (!e.virtual || !e.params.virtual.enabled)) {
            e.recalcSlides();
            let i = [];
            e.slides.forEach((e) => {
              var t =
                void 0 === e.swiperSlideIndex
                  ? +e.getAttribute("data-swiper-slide-index")
                  : e.swiperSlideIndex;
              i[t] = e;
            }),
              e.slides.forEach((e) => {
                e.removeAttribute("data-swiper-slide-index");
              }),
              i.forEach((e) => {
                s.append(e);
              }),
              e.recalcSlides(),
              e.slideTo(e.realIndex, 0);
          }
        },
      },
      grabCursor: {
        setGrabCursor: function (e) {
          let t = this;
          var i;
          !t.params.simulateTouch ||
            (t.params.watchOverflow && t.isLocked) ||
            t.params.cssMode ||
            ((i =
              "container" === t.params.touchEventsTarget ? t.el : t.wrapperEl),
            t.isElement && (t.__preventObserver__ = !0),
            (i.style.cursor = "move"),
            (i.style.cursor = e ? "grabbing" : "grab"),
            t.isElement &&
              requestAnimationFrame(() => {
                t.__preventObserver__ = !1;
              }));
        },
        unsetGrabCursor: function () {
          let e = this;
          (e.params.watchOverflow && e.isLocked) ||
            e.params.cssMode ||
            (e.isElement && (e.__preventObserver__ = !0),
            (e[
              "container" === e.params.touchEventsTarget ? "el" : "wrapperEl"
            ].style.cursor = ""),
            e.isElement &&
              requestAnimationFrame(() => {
                e.__preventObserver__ = !1;
              }));
        },
      },
      events: {
        attachEvents: function () {
          var e = this,
            t = e.params;
          (e.onTouchStart = Z.bind(e)),
            (e.onTouchMove = function (t) {
              let i = L(),
                a = this,
                r = a.touchEventsData,
                { params: n, touches: o, rtlTranslate: l, enabled: e } = a;
              if (e && (n.simulateTouch || "mouse" !== t.pointerType)) {
                let e,
                  s = t;
                if (
                  "pointermove" ===
                  (s = s.originalEvent ? s.originalEvent : s).type
                ) {
                  if (null !== r.touchId) return;
                  if (s.pointerId !== r.pointerId) return;
                }
                if ("touchmove" === s.type) {
                  if (
                    !(e = [...s.changedTouches].find(
                      (e) => e.identifier === r.touchId
                    )) ||
                    e.identifier !== r.touchId
                  )
                    return;
                } else e = s;
                if (r.isTouched) {
                  var t = e.pageX,
                    d = e.pageY;
                  if (s.preventedByNestedSwiper) (o.startX = t), (o.startY = d);
                  else if (a.allowTouchMove) {
                    if (n.touchReleaseOnEdges && !n.loop)
                      if (a.isVertical()) {
                        if (
                          (d < o.startY && a.translate <= a.maxTranslate()) ||
                          (d > o.startY && a.translate >= a.minTranslate())
                        )
                          return (r.isTouched = !1), void (r.isMoved = !1);
                      } else {
                        if (
                          l &&
                          ((t > o.startX && -a.translate <= a.maxTranslate()) ||
                            (t < o.startX && -a.translate >= a.minTranslate()))
                        )
                          return;
                        if (
                          !l &&
                          ((t < o.startX && a.translate <= a.maxTranslate()) ||
                            (t > o.startX && a.translate >= a.minTranslate()))
                        )
                          return;
                      }
                    if (
                      (i.activeElement &&
                        i.activeElement.matches(r.focusableElements) &&
                        i.activeElement !== s.target &&
                        "mouse" !== s.pointerType &&
                        i.activeElement.blur(),
                      i.activeElement &&
                        s.target === i.activeElement &&
                        s.target.matches(r.focusableElements))
                    )
                      (r.isMoved = !0), (a.allowClick = !1);
                    else {
                      r.allowTouchCallbacks && a.emit("touchMove", s),
                        (o.previousX = o.currentX),
                        (o.previousY = o.currentY),
                        (o.currentX = t),
                        (o.currentY = d);
                      var c = o.currentX - o.startX,
                        p = o.currentY - o.startY;
                      if (
                        !(
                          a.params.threshold &&
                          Math.sqrt(c ** 2 + p ** 2) < a.params.threshold
                        )
                      )
                        if (
                          (void 0 === r.isScrolling &&
                            ((a.isHorizontal() && o.currentY === o.startY) ||
                            (a.isVertical() && o.currentX === o.startX)
                              ? (r.isScrolling = !1)
                              : 25 <= c * c + p * p &&
                                ((u =
                                  (180 * Math.atan2(Math.abs(p), Math.abs(c))) /
                                  Math.PI),
                                (r.isScrolling = a.isHorizontal()
                                  ? u > n.touchAngle
                                  : 90 - u > n.touchAngle))),
                          r.isScrolling && a.emit("touchMoveOpposite", s),
                          void 0 !== r.startMoving ||
                            (o.currentX === o.startX &&
                              o.currentY === o.startY) ||
                            (r.startMoving = !0),
                          r.isScrolling ||
                            ("touchmove" === s.type &&
                              r.preventTouchMoveFromPointerMove))
                        )
                          r.isTouched = !1;
                        else if (r.startMoving) {
                          (a.allowClick = !1),
                            !n.cssMode && s.cancelable && s.preventDefault(),
                            n.touchMoveStopPropagation &&
                              !n.nested &&
                              s.stopPropagation();
                          let i = a.isHorizontal() ? c : p,
                            e = a.isHorizontal()
                              ? o.currentX - o.previousX
                              : o.currentY - o.previousY;
                          n.oneWayMovement &&
                            ((i = Math.abs(i) * (l ? 1 : -1)),
                            (e = Math.abs(e) * (l ? 1 : -1))),
                            (o.diff = i),
                            (i *= n.touchRatio),
                            l && ((i = -i), (e = -e));
                          var u = a.touchesDirection,
                            c =
                              ((a.swipeDirection = 0 < i ? "prev" : "next"),
                              (a.touchesDirection = 0 < e ? "prev" : "next"),
                              a.params.loop && !n.cssMode),
                            p =
                              ("next" === a.touchesDirection &&
                                a.allowSlideNext) ||
                              ("prev" === a.touchesDirection &&
                                a.allowSlidePrev);
                          if (!r.isMoved) {
                            if (
                              (c &&
                                p &&
                                a.loopFix({ direction: a.swipeDirection }),
                              (r.startTranslate = a.getTranslate()),
                              a.setTransition(0),
                              a.animating)
                            ) {
                              let e = new window.CustomEvent("transitionend", {
                                bubbles: !0,
                                cancelable: !0,
                                detail: { bySwiperTouchMove: !0 },
                              });
                              a.wrapperEl.dispatchEvent(e);
                            }
                            (r.allowMomentumBounce = !1),
                              !n.grabCursor ||
                                (!0 !== a.allowSlideNext &&
                                  !0 !== a.allowSlidePrev) ||
                                a.setGrabCursor(!0),
                              a.emit("sliderFirstMove", s);
                          }
                          if (
                            (new Date().getTime(),
                            !1 !== n._loopSwapReset &&
                              r.isMoved &&
                              r.allowThresholdMove &&
                              u !== a.touchesDirection &&
                              c &&
                              p &&
                              1 <= Math.abs(i))
                          )
                            Object.assign(o, {
                              startX: t,
                              startY: d,
                              currentX: t,
                              currentY: d,
                              startTranslate: r.currentTranslate,
                            }),
                              (r.loopSwapReset = !0),
                              (r.startTranslate = r.currentTranslate);
                          else {
                            a.emit("sliderMove", s),
                              (r.isMoved = !0),
                              (r.currentTranslate = i + r.startTranslate);
                            let e = !0,
                              t = n.resistanceRatio;
                            if (
                              (n.touchReleaseOnEdges && (t = 0),
                              0 < i
                                ? (c &&
                                    p &&
                                    r.allowThresholdMove &&
                                    r.currentTranslate >
                                      (n.centeredSlides
                                        ? a.minTranslate() -
                                          a.slidesSizesGrid[a.activeIndex + 1] -
                                          ("auto" !== n.slidesPerView &&
                                          2 <= a.slides.length - n.slidesPerView
                                            ? a.slidesSizesGrid[
                                                a.activeIndex + 1
                                              ] + a.params.spaceBetween
                                            : 0) -
                                          a.params.spaceBetween
                                        : a.minTranslate()) &&
                                    a.loopFix({
                                      direction: "prev",
                                      setTranslate: !0,
                                      activeSlideIndex: 0,
                                    }),
                                  r.currentTranslate > a.minTranslate() &&
                                    ((e = !1), n.resistance) &&
                                    (r.currentTranslate =
                                      a.minTranslate() -
                                      1 +
                                      (-a.minTranslate() +
                                        r.startTranslate +
                                        i) **
                                        t))
                                : i < 0 &&
                                  (c &&
                                    p &&
                                    r.allowThresholdMove &&
                                    r.currentTranslate <
                                      (n.centeredSlides
                                        ? a.maxTranslate() +
                                          a.slidesSizesGrid[
                                            a.slidesSizesGrid.length - 1
                                          ] +
                                          a.params.spaceBetween +
                                          ("auto" !== n.slidesPerView &&
                                          2 <= a.slides.length - n.slidesPerView
                                            ? a.slidesSizesGrid[
                                                a.slidesSizesGrid.length - 1
                                              ] + a.params.spaceBetween
                                            : 0)
                                        : a.maxTranslate()) &&
                                    a.loopFix({
                                      direction: "next",
                                      setTranslate: !0,
                                      activeSlideIndex:
                                        a.slides.length -
                                        ("auto" === n.slidesPerView
                                          ? a.slidesPerViewDynamic()
                                          : Math.ceil(
                                              parseFloat(n.slidesPerView, 10)
                                            )),
                                    }),
                                  r.currentTranslate < a.maxTranslate()) &&
                                  ((e = !1), n.resistance) &&
                                  (r.currentTranslate =
                                    a.maxTranslate() +
                                    1 -
                                    (a.maxTranslate() - r.startTranslate - i) **
                                      t),
                              e && (s.preventedByNestedSwiper = !0),
                              !a.allowSlideNext &&
                                "next" === a.swipeDirection &&
                                r.currentTranslate < r.startTranslate &&
                                (r.currentTranslate = r.startTranslate),
                              !a.allowSlidePrev &&
                                "prev" === a.swipeDirection &&
                                r.currentTranslate > r.startTranslate &&
                                (r.currentTranslate = r.startTranslate),
                              a.allowSlidePrev ||
                                a.allowSlideNext ||
                                (r.currentTranslate = r.startTranslate),
                              0 < n.threshold)
                            ) {
                              if (
                                !(
                                  Math.abs(i) > n.threshold ||
                                  r.allowThresholdMove
                                )
                              )
                                return void (r.currentTranslate =
                                  r.startTranslate);
                              if (!r.allowThresholdMove)
                                return (
                                  (r.allowThresholdMove = !0),
                                  (o.startX = o.currentX),
                                  (o.startY = o.currentY),
                                  (r.currentTranslate = r.startTranslate),
                                  void (o.diff = a.isHorizontal()
                                    ? o.currentX - o.startX
                                    : o.currentY - o.startY)
                                );
                            }
                            n.followFinger &&
                              !n.cssMode &&
                              (((n.freeMode &&
                                n.freeMode.enabled &&
                                a.freeMode) ||
                                n.watchSlidesProgress) &&
                                (a.updateActiveIndex(),
                                a.updateSlidesClasses()),
                              n.freeMode &&
                                n.freeMode.enabled &&
                                a.freeMode &&
                                a.freeMode.onTouchMove(),
                              a.updateProgress(r.currentTranslate),
                              a.setTranslate(r.currentTranslate));
                          }
                        }
                    }
                  } else
                    s.target.matches(r.focusableElements) ||
                      (a.allowClick = !1),
                      r.isTouched &&
                        (Object.assign(o, {
                          startX: t,
                          startY: d,
                          currentX: t,
                          currentY: d,
                        }),
                        (r.touchStartTime = v()));
                } else
                  r.startMoving &&
                    r.isScrolling &&
                    a.emit("touchMoveOpposite", s);
              }
            }.bind(e)),
            (e.onTouchEnd = function (a) {
              let r = this,
                t = r.touchEventsData,
                e,
                n = a;
              if (
                "touchend" ===
                  (n = n.originalEvent ? n.originalEvent : n).type ||
                "touchcancel" === n.type
              ) {
                if (
                  !(e = [...n.changedTouches].find(
                    (e) => e.identifier === t.touchId
                  )) ||
                  e.identifier !== t.touchId
                )
                  return;
              } else {
                if (null !== t.touchId) return;
                if (n.pointerId !== t.pointerId) return;
                e = n;
              }
              if (
                ![
                  "pointercancel",
                  "pointerout",
                  "pointerleave",
                  "contextmenu",
                ].includes(n.type) ||
                (["pointercancel", "contextmenu"].includes(n.type) &&
                  (r.browser.isSafari || r.browser.isWebView))
              ) {
                (t.pointerId = null), (t.touchId = null);
                var {
                  params: o,
                  touches: a,
                  rtlTranslate: i,
                  slidesGrid: l,
                  enabled: d,
                } = r;
                if (d && (o.simulateTouch || "mouse" !== n.pointerType))
                  if (
                    (t.allowTouchCallbacks && r.emit("touchEnd", n),
                    (t.allowTouchCallbacks = !1),
                    t.isTouched)
                  ) {
                    o.grabCursor &&
                      t.isMoved &&
                      t.isTouched &&
                      (!0 === r.allowSlideNext || !0 === r.allowSlidePrev) &&
                      r.setGrabCursor(!1);
                    var c,
                      d = v(),
                      p = d - t.touchStartTime;
                    if (r.allowClick) {
                      let e = n.path || (n.composedPath && n.composedPath());
                      r.updateClickedSlide((e && e[0]) || n.target, e),
                        r.emit("tap click", n),
                        p < 300 &&
                          d - t.lastClickTime < 300 &&
                          r.emit("doubleTap doubleClick", n);
                    }
                    if (
                      ((t.lastClickTime = v()),
                      S(() => {
                        r.destroyed || (r.allowClick = !0);
                      }),
                      t.isTouched &&
                        t.isMoved &&
                        r.swipeDirection &&
                        (0 !== a.diff || t.loopSwapReset) &&
                        (t.currentTranslate !== t.startTranslate ||
                          t.loopSwapReset))
                    ) {
                      if (
                        ((t.isTouched = !1),
                        (t.isMoved = !1),
                        (t.startMoving = !1),
                        (c = o.followFinger
                          ? i
                            ? r.translate
                            : -r.translate
                          : -t.currentTranslate),
                        !o.cssMode)
                      )
                        if (o.freeMode && o.freeMode.enabled)
                          r.freeMode.onTouchEnd({ currentPos: c });
                        else {
                          var u = c >= -r.maxTranslate() && !r.params.loop;
                          let i = 0,
                            s = r.slidesSizesGrid[0];
                          for (
                            let t = 0;
                            t < l.length;
                            t += t < o.slidesPerGroupSkip ? 1 : o.slidesPerGroup
                          ) {
                            let e =
                              t < o.slidesPerGroupSkip - 1
                                ? 1
                                : o.slidesPerGroup;
                            void 0 !== l[t + e]
                              ? (u || (c >= l[t] && c < l[t + e])) &&
                                ((i = t), (s = l[t + e] - l[t]))
                              : (u || c >= l[t]) &&
                                ((i = t),
                                (s = l[l.length - 1] - l[l.length - 2]));
                          }
                          let e = null,
                            t = null;
                          o.rewind &&
                            (r.isBeginning
                              ? (t =
                                  o.virtual && o.virtual.enabled && r.virtual
                                    ? r.virtual.slides.length - 1
                                    : r.slides.length - 1)
                              : r.isEnd && (e = 0));
                          (d = (c - l[i]) / s),
                            (a =
                              i < o.slidesPerGroupSkip - 1
                                ? 1
                                : o.slidesPerGroup);
                          p > o.longSwipesMs
                            ? o.longSwipes
                              ? ("next" === r.swipeDirection &&
                                  (d >= o.longSwipesRatio
                                    ? r.slideTo(o.rewind && r.isEnd ? e : i + a)
                                    : r.slideTo(i)),
                                "prev" === r.swipeDirection &&
                                  (d > 1 - o.longSwipesRatio
                                    ? r.slideTo(i + a)
                                    : null !== t &&
                                      d < 0 &&
                                      Math.abs(d) > o.longSwipesRatio
                                    ? r.slideTo(t)
                                    : r.slideTo(i)))
                              : r.slideTo(r.activeIndex)
                            : o.shortSwipes
                            ? !r.navigation ||
                              (n.target !== r.navigation.nextEl &&
                                n.target !== r.navigation.prevEl)
                              ? ("next" === r.swipeDirection &&
                                  r.slideTo(null !== e ? e : i + a),
                                "prev" === r.swipeDirection &&
                                  r.slideTo(null !== t ? t : i))
                              : n.target === r.navigation.nextEl
                              ? r.slideTo(i + a)
                              : r.slideTo(i)
                            : r.slideTo(r.activeIndex);
                        }
                    } else
                      (t.isTouched = !1),
                        (t.isMoved = !1),
                        (t.startMoving = !1);
                  } else
                    t.isMoved && o.grabCursor && r.setGrabCursor(!1),
                      (t.isMoved = !1),
                      (t.startMoving = !1);
              }
            }.bind(e)),
            (e.onDocumentTouchStart = function () {
              this.documentTouchHandlerProceeded ||
                ((this.documentTouchHandlerProceeded = !0),
                this.params.touchReleaseOnEdges &&
                  (this.el.style.touchAction = "auto"));
            }.bind(e)),
            t.cssMode &&
              (e.onScroll = function () {
                var e = this,
                  { wrapperEl: t, rtlTranslate: i, enabled: s } = e;
                s &&
                  ((e.previousTranslate = e.translate),
                  e.isHorizontal()
                    ? (e.translate = -t.scrollLeft)
                    : (e.translate = -t.scrollTop),
                  0 === e.translate && (e.translate = 0),
                  e.updateActiveIndex(),
                  e.updateSlidesClasses(),
                  (0 == (s = e.maxTranslate() - e.minTranslate())
                    ? 0
                    : (e.translate - e.minTranslate()) / s) !== e.progress &&
                    e.updateProgress(i ? -e.translate : e.translate),
                  e.emit("setTranslate", e.translate, !1));
              }.bind(e)),
            (e.onClick = function (e) {
              var t = this;
              t.enabled &&
                !t.allowClick &&
                (t.params.preventClicks && e.preventDefault(),
                t.params.preventClicksPropagation) &&
                t.animating &&
                (e.stopPropagation(), e.stopImmediatePropagation());
            }.bind(e)),
            (e.onLoad = function (e) {
              var t = this;
              n(t, e.target),
                t.params.cssMode ||
                  ("auto" !== t.params.slidesPerView && !t.params.autoHeight) ||
                  t.update();
            }.bind(e)),
            ee(e, "on");
        },
        detachEvents: function () {
          ee(this, "off");
        },
      },
      breakpoints: {
        setBreakpoint: function () {
          let n = this,
            { realIndex: o, initialized: l, params: d, el: c } = n,
            p = d.breakpoints;
          if (p && 0 !== Object.keys(p).length) {
            var u = L(),
              h =
                "window" !== d.breakpointsBase && d.breakpointsBase
                  ? "container"
                  : d.breakpointsBase,
              u =
                ["window", "container"].includes(d.breakpointsBase) ||
                !d.breakpointsBase
                  ? n.el
                  : u.querySelector(d.breakpointsBase),
              h = n.getBreakpoint(p, h, u);
            if (h && n.currentBreakpoint !== h) {
              let s = (h in p ? p[h] : void 0) || n.originalParams,
                e = te(n, d),
                t = te(n, s),
                i = n.params.grabCursor,
                a = s.grabCursor,
                r = d.enabled;
              e && !t
                ? (c.classList.remove(
                    d.containerModifierClass + "grid",
                    d.containerModifierClass + "grid-column"
                  ),
                  n.emitContainerClasses())
                : !e &&
                  t &&
                  (c.classList.add(d.containerModifierClass + "grid"),
                  ((s.grid.fill && "column" === s.grid.fill) ||
                    (!s.grid.fill && "column" === d.grid.fill)) &&
                    c.classList.add(d.containerModifierClass + "grid-column"),
                  n.emitContainerClasses()),
                i && !a ? n.unsetGrabCursor() : !i && a && n.setGrabCursor(),
                ["navigation", "pagination", "scrollbar"].forEach((e) => {
                  var t, i;
                  void 0 !== s[e] &&
                    ((t = d[e] && d[e].enabled),
                    (i = s[e] && s[e].enabled),
                    t && !i && n[e].disable(),
                    !t) &&
                    i &&
                    n[e].enable();
                });
              var u = s.direction && s.direction !== d.direction,
                m = d.loop && (s.slidesPerView !== d.slidesPerView || u),
                f = d.loop,
                u =
                  (u && l && n.changeDirection(),
                  b(n.params, s),
                  n.params.enabled),
                g = n.params.loop;
              Object.assign(n, {
                allowTouchMove: n.params.allowTouchMove,
                allowSlideNext: n.params.allowSlideNext,
                allowSlidePrev: n.params.allowSlidePrev,
              }),
                r && !u ? n.disable() : !r && u && n.enable(),
                (n.currentBreakpoint = h),
                n.emit("_beforeBreakpoint", s),
                l &&
                  (m
                    ? (n.loopDestroy(), n.loopCreate(o), n.updateSlides())
                    : !f && g
                    ? (n.loopCreate(o), n.updateSlides())
                    : f && !g && n.loopDestroy()),
                n.emit("breakpoint", s);
            }
          }
        },
        getBreakpoint: function (e, n, o) {
          if ((void 0 === n && (n = "window"), e && ("container" !== n || o))) {
            let s = !1,
              a = N(),
              i = "window" === n ? a.innerHeight : o.clientHeight,
              r = Object.keys(e).map((e) => {
                var t;
                return "string" == typeof e && 0 === e.indexOf("@")
                  ? ((t = parseFloat(e.substr(1))), { value: i * t, point: e })
                  : { value: e, point: e };
              });
            r.sort((e, t) => parseInt(e.value, 10) - parseInt(t.value, 10));
            for (let i = 0; i < r.length; i += 1) {
              let { point: e, value: t } = r[i];
              "window" === n
                ? a.matchMedia(`(min-width: ${t}px)`).matches && (s = e)
                : t <= o.clientWidth && (s = e);
            }
            return s || "max";
          }
        },
      },
      checkOverflow: {
        checkOverflow: function () {
          let i = this,
            { isLocked: e, params: t } = i,
            s = t.slidesOffsetBefore;
          if (s) {
            let e = i.slides.length - 1,
              t = i.slidesGrid[e] + i.slidesSizesGrid[e] + 2 * s;
            i.isLocked = i.size > t;
          } else i.isLocked = 1 === i.snapGrid.length;
          !0 === t.allowSlideNext && (i.allowSlideNext = !i.isLocked),
            !0 === t.allowSlidePrev && (i.allowSlidePrev = !i.isLocked),
            e && e !== i.isLocked && (i.isEnd = !1),
            e !== i.isLocked && i.emit(i.isLocked ? "lock" : "unlock");
        },
      },
      classes: {
        addClasses: function () {
          var { classNames: e, params: t, rtl: i, el: s, device: a } = this,
            i = ((e, i) => {
              let s = [];
              return (
                e.forEach((t) => {
                  "object" == typeof t
                    ? Object.keys(t).forEach((e) => {
                        t[e] && s.push(i + e);
                      })
                    : "string" == typeof t && s.push(i + t);
                }),
                s
              );
            })(
              [
                "initialized",
                t.direction,
                { "free-mode": this.params.freeMode && t.freeMode.enabled },
                { autoheight: t.autoHeight },
                { rtl: i },
                { grid: t.grid && 1 < t.grid.rows },
                {
                  "grid-column":
                    t.grid && 1 < t.grid.rows && "column" === t.grid.fill,
                },
                { android: a.android },
                { ios: a.ios },
                { "css-mode": t.cssMode },
                { centered: t.cssMode && t.centeredSlides },
                { "watch-progress": t.watchSlidesProgress },
              ],
              t.containerModifierClass
            );
          e.push(...i), s.classList.add(...e), this.emitContainerClasses();
        },
        removeClasses: function () {
          var { el: e, classNames: t } = this;
          e &&
            "string" != typeof e &&
            (e.classList.remove(...t), this.emitContainerClasses());
        },
      },
    },
    c = {};
  class h {
    constructor() {
      let e, i;
      for (var t = arguments.length, s = new Array(t), a = 0; a < t; a++)
        s[a] = arguments[a];
      1 === s.length &&
      s[0].constructor &&
      "Object" === Object.prototype.toString.call(s[0]).slice(8, -1)
        ? (i = s[0])
        : ([e, i] = s),
        (i = b({}, (i = i || {}))),
        e && !i.el && (i.el = e);
      var r = L();
      if (
        i.el &&
        "string" == typeof i.el &&
        1 < r.querySelectorAll(i.el).length
      ) {
        let t = [];
        return (
          r.querySelectorAll(i.el).forEach((e) => {
            e = b({}, i, { el: e });
            t.push(new h(e));
          }),
          t
        );
      }
      let n = this,
        o =
          ((n.__swiper__ = !0),
          (n.support = W()),
          (n.device = $({ userAgent: i.userAgent })),
          (n.browser = G()),
          (n.eventsListeners = {}),
          (n.eventsAnyListeners = []),
          (n.modules = [...n.__modules__]),
          i.modules && Array.isArray(i.modules) && n.modules.push(...i.modules),
          {});
      n.modules.forEach((e) => {
        var s, a;
        e({
          params: i,
          swiper: n,
          extendParams:
            ((s = i),
            (a = o),
            function (e) {
              void 0 === e && (e = {});
              var t = Object.keys(e)[0],
                i = e[t];
              "object" == typeof i &&
                null !== i &&
                (!0 === s[t] && (s[t] = { enabled: !0 }),
                "navigation" === t &&
                  s[t] &&
                  s[t].enabled &&
                  !s[t].prevEl &&
                  !s[t].nextEl &&
                  (s[t].auto = !0),
                0 <= ["pagination", "scrollbar"].indexOf(t) &&
                  s[t] &&
                  s[t].enabled &&
                  !s[t].el &&
                  (s[t].auto = !0),
                t in s) &&
                "enabled" in i &&
                ("object" != typeof s[t] ||
                  "enabled" in s[t] ||
                  (s[t].enabled = !0),
                s[t] || (s[t] = { enabled: !1 })),
                b(a, e);
            }),
          on: n.on.bind(n),
          once: n.once.bind(n),
          off: n.off.bind(n),
          emit: n.emit.bind(n),
        });
      });
      r = b({}, ie, o);
      return (
        (n.params = b({}, r, c, i)),
        (n.originalParams = b({}, n.params)),
        (n.passedParams = b({}, i)),
        n.params &&
          n.params.on &&
          Object.keys(n.params.on).forEach((e) => {
            n.on(e, n.params.on[e]);
          }),
        n.params && n.params.onAny && n.onAny(n.params.onAny),
        Object.assign(n, {
          enabled: n.params.enabled,
          el: e,
          classNames: [],
          slides: [],
          slidesGrid: [],
          snapGrid: [],
          slidesSizesGrid: [],
          isHorizontal: () => "horizontal" === n.params.direction,
          isVertical: () => "vertical" === n.params.direction,
          activeIndex: 0,
          realIndex: 0,
          isBeginning: !0,
          isEnd: !1,
          translate: 0,
          previousTranslate: 0,
          progress: 0,
          velocity: 0,
          animating: !1,
          cssOverflowAdjustment() {
            return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;
          },
          allowSlideNext: n.params.allowSlideNext,
          allowSlidePrev: n.params.allowSlidePrev,
          touchEventsData: {
            isTouched: void 0,
            isMoved: void 0,
            allowTouchCallbacks: void 0,
            touchStartTime: void 0,
            isScrolling: void 0,
            currentTranslate: void 0,
            startTranslate: void 0,
            allowThresholdMove: void 0,
            focusableElements: n.params.focusableElements,
            lastClickTime: 0,
            clickTimeout: void 0,
            velocities: [],
            allowMomentumBounce: void 0,
            startMoving: void 0,
            pointerId: null,
            touchId: null,
          },
          allowClick: !0,
          allowTouchMove: n.params.allowTouchMove,
          touches: { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 },
          imagesToLoad: [],
          imagesLoaded: 0,
        }),
        n.emit("_swiper"),
        n.params.init && n.init(),
        n
      );
    }
    getDirectionLabel(e) {
      return this.isHorizontal()
        ? e
        : {
            width: "height",
            "margin-top": "margin-left",
            "margin-bottom ": "margin-right",
            "margin-left": "margin-top",
            "margin-right": "margin-bottom",
            "padding-left": "padding-top",
            "padding-right": "padding-bottom",
            marginRight: "marginBottom",
          }[e];
    }
    getSlideIndex(e) {
      var { slidesEl: t, params: i } = this,
        t = C(H(t, `.${i.slideClass}, swiper-slide`)[0]);
      return C(e) - t;
    }
    getSlideIndexByData(t) {
      return this.getSlideIndex(
        this.slides.find(
          (e) => +e.getAttribute("data-swiper-slide-index") === t
        )
      );
    }
    getSlideIndexWhenGrid(e) {
      return (
        this.grid &&
          this.params.grid &&
          1 < this.params.grid.rows &&
          ("column" === this.params.grid.fill
            ? (e = Math.floor(e / this.params.grid.rows))
            : "row" === this.params.grid.fill &&
              (e %= Math.ceil(this.slides.length / this.params.grid.rows))),
        e
      );
    }
    recalcSlides() {
      var { slidesEl: e, params: t } = this;
      this.slides = H(e, `.${t.slideClass}, swiper-slide`);
    }
    enable() {
      var e = this;
      e.enabled ||
        ((e.enabled = !0),
        e.params.grabCursor && e.setGrabCursor(),
        e.emit("enable"));
    }
    disable() {
      var e = this;
      e.enabled &&
        ((e.enabled = !1),
        e.params.grabCursor && e.unsetGrabCursor(),
        e.emit("disable"));
    }
    setProgress(e, t) {
      var i = this,
        s = ((e = Math.min(Math.max(e, 0), 1)), i.minTranslate()),
        e = (i.maxTranslate() - s) * e + s;
      i.translateTo(e, void 0 === t ? 0 : t),
        i.updateActiveIndex(),
        i.updateSlidesClasses();
    }
    emitContainerClasses() {
      let t = this;
      var e;
      t.params._emitClasses &&
        t.el &&
        ((e = t.el.className
          .split(" ")
          .filter(
            (e) =>
              0 === e.indexOf("swiper") ||
              0 === e.indexOf(t.params.containerModifierClass)
          )),
        t.emit("_containerClasses", e.join(" ")));
    }
    getSlideClasses(e) {
      let t = this;
      return t.destroyed
        ? ""
        : e.className
            .split(" ")
            .filter(
              (e) =>
                0 === e.indexOf("swiper-slide") ||
                0 === e.indexOf(t.params.slideClass)
            )
            .join(" ");
    }
    emitSlidesClasses() {
      let s = this;
      if (s.params._emitClasses && s.el) {
        let i = [];
        s.slides.forEach((e) => {
          var t = s.getSlideClasses(e);
          i.push({ slideEl: e, classNames: t }), s.emit("_slideClass", e, t);
        }),
          s.emit("_slideClasses", i);
      }
    }
    slidesPerViewDynamic(e, t) {
      void 0 === e && (e = "current"), void 0 === t && (t = !1);
      var {
        params: i,
        slides: s,
        slidesGrid: a,
        slidesSizesGrid: r,
        size: n,
        activeIndex: o,
      } = this;
      let l = 1;
      if ("number" == typeof i.slidesPerView) return i.slidesPerView;
      if (i.centeredSlides) {
        let t,
          i = s[o] ? Math.ceil(s[o].swiperSlideSize) : 0;
        for (let e = o + 1; e < s.length; e += 1)
          s[e] &&
            !t &&
            ((i += Math.ceil(s[e].swiperSlideSize)), (l += 1), i > n) &&
            (t = !0);
        for (let e = o - 1; 0 <= e; --e)
          s[e] &&
            !t &&
            ((i += s[e].swiperSlideSize), (l += 1), i > n) &&
            (t = !0);
      } else if ("current" === e)
        for (let e = o + 1; e < s.length; e += 1)
          (t ? a[e] + r[e] - a[o] < n : a[e] - a[o] < n) && (l += 1);
      else for (let e = o - 1; 0 <= e; --e) a[o] - a[e] < n && (l += 1);
      return l;
    }
    update() {
      let s = this;
      if (s && !s.destroyed) {
        let { snapGrid: e, params: t } = s,
          i;
        if (
          (t.breakpoints && s.setBreakpoint(),
          [...s.el.querySelectorAll('[loading="lazy"]')].forEach((e) => {
            e.complete && n(s, e);
          }),
          s.updateSize(),
          s.updateSlides(),
          s.updateProgress(),
          s.updateSlidesClasses(),
          t.freeMode && t.freeMode.enabled && !t.cssMode)
        )
          a(), t.autoHeight && s.updateAutoHeight();
        else {
          if (
            ("auto" === t.slidesPerView || 1 < t.slidesPerView) &&
            s.isEnd &&
            !t.centeredSlides
          ) {
            let e = (s.virtual && t.virtual.enabled ? s.virtual : s).slides;
            i = s.slideTo(e.length - 1, 0, !1, !0);
          } else i = s.slideTo(s.activeIndex, 0, !1, !0);
          i || a();
        }
        function a() {
          var e = s.rtlTranslate ? -1 * s.translate : s.translate,
            e = Math.min(Math.max(e, s.maxTranslate()), s.minTranslate());
          s.setTranslate(e), s.updateActiveIndex(), s.updateSlidesClasses();
        }
        t.watchOverflow && e !== s.snapGrid && s.checkOverflow(),
          s.emit("update");
      }
    }
    changeDirection(t, e) {
      void 0 === e && (e = !0);
      var i = this,
        s = i.params.direction;
      return (
        (t = t || ("horizontal" === s ? "vertical" : "horizontal")) === s ||
          ("horizontal" !== t && "vertical" !== t) ||
          (i.el.classList.remove("" + i.params.containerModifierClass + s),
          i.el.classList.add("" + i.params.containerModifierClass + t),
          i.emitContainerClasses(),
          (i.params.direction = t),
          i.slides.forEach((e) => {
            "vertical" === t ? (e.style.width = "") : (e.style.height = "");
          }),
          i.emit("changeDirection"),
          e && i.update()),
        i
      );
    }
    changeLanguageDirection(e) {
      var t = this;
      (t.rtl && "rtl" === e) ||
        (!t.rtl && "ltr" === e) ||
        ((t.rtl = "rtl" === e),
        (t.rtlTranslate = "horizontal" === t.params.direction && t.rtl),
        t.rtl
          ? (t.el.classList.add(t.params.containerModifierClass + "rtl"),
            (t.el.dir = "rtl"))
          : (t.el.classList.remove(t.params.containerModifierClass + "rtl"),
            (t.el.dir = "ltr")),
        t.update());
    }
    mount(s) {
      let a = this;
      if (!a.mounted) {
        let e = s || a.params.el;
        if (!(e = "string" == typeof e ? document.querySelector(e) : e))
          return !1;
        (e.swiper = a),
          e.parentNode &&
            e.parentNode.host &&
            e.parentNode.host.nodeName ===
              a.params.swiperElementNodeName.toUpperCase() &&
            (a.isElement = !0);
        let t = () =>
            "." + (a.params.wrapperClass || "").trim().split(" ").join("."),
          i =
            e && e.shadowRoot && e.shadowRoot.querySelector
              ? e.shadowRoot.querySelector(t())
              : H(e, t())[0];
        !i &&
          a.params.createElements &&
          ((i = P("div", a.params.wrapperClass)),
          e.append(i),
          H(e, "." + a.params.slideClass).forEach((e) => {
            i.append(e);
          })),
          Object.assign(a, {
            el: e,
            wrapperEl: i,
            slidesEl:
              a.isElement && !e.parentNode.host.slideSlots
                ? e.parentNode.host
                : i,
            hostEl: a.isElement ? e.parentNode.host : e,
            mounted: !0,
            rtl: "rtl" === e.dir.toLowerCase() || "rtl" === M(e, "direction"),
            rtlTranslate:
              "horizontal" === a.params.direction &&
              ("rtl" === e.dir.toLowerCase() || "rtl" === M(e, "direction")),
            wrongRTL: "-webkit-box" === M(i, "display"),
          });
      }
      return !0;
    }
    init(e) {
      let t = this;
      return (
        t.initialized ||
          (!1 !== t.mount(e) &&
            (t.emit("beforeInit"),
            t.params.breakpoints && t.setBreakpoint(),
            t.addClasses(),
            t.updateSize(),
            t.updateSlides(),
            t.params.watchOverflow && t.checkOverflow(),
            t.params.grabCursor && t.enabled && t.setGrabCursor(),
            t.params.loop && t.virtual && t.params.virtual.enabled
              ? t.slideTo(
                  t.params.initialSlide + t.virtual.slidesBefore,
                  0,
                  t.params.runCallbacksOnInit,
                  !1,
                  !0
                )
              : t.slideTo(
                  t.params.initialSlide,
                  0,
                  t.params.runCallbacksOnInit,
                  !1,
                  !0
                ),
            t.params.loop && t.loopCreate(void 0, !0),
            t.attachEvents(),
            (e = [...t.el.querySelectorAll('[loading="lazy"]')]),
            t.isElement &&
              e.push(...t.hostEl.querySelectorAll('[loading="lazy"]')),
            e.forEach((e) => {
              e.complete
                ? n(t, e)
                : e.addEventListener("load", (e) => {
                    n(t, e.target);
                  });
            }),
            u(t),
            (t.initialized = !0),
            u(t),
            t.emit("init"),
            t.emit("afterInit"))),
        t
      );
    }
    destroy(e, t) {
      void 0 === e && (e = !0), void 0 === t && (t = !0);
      let i = this,
        { params: s, el: a, wrapperEl: r, slides: n } = i;
      if (void 0 !== i.params && !i.destroyed) {
        if (
          (i.emit("beforeDestroy"),
          (i.initialized = !1),
          i.detachEvents(),
          s.loop && i.loopDestroy(),
          t &&
            (i.removeClasses(),
            a && "string" != typeof a && a.removeAttribute("style"),
            r && r.removeAttribute("style"),
            n) &&
            n.length &&
            n.forEach((e) => {
              e.classList.remove(
                s.slideVisibleClass,
                s.slideFullyVisibleClass,
                s.slideActiveClass,
                s.slideNextClass,
                s.slidePrevClass
              ),
                e.removeAttribute("style"),
                e.removeAttribute("data-swiper-slide-index");
            }),
          i.emit("destroy"),
          Object.keys(i.eventsListeners).forEach((e) => {
            i.off(e);
          }),
          !1 !== e)
        ) {
          i.el && "string" != typeof i.el && (i.el.swiper = null);
          {
            let t = i;
            Object.keys(t).forEach((e) => {
              try {
                t[e] = null;
              } catch (e) {}
              try {
                delete t[e];
              } catch (e) {}
            });
          }
        }
        i.destroyed = !0;
      }
      return null;
    }
    static extendDefaults(e) {
      b(c, e);
    }
    static get extendedDefaults() {
      return c;
    }
    static get defaults() {
      return ie;
    }
    static installModule(e) {
      h.prototype.__modules__ || (h.prototype.__modules__ = []);
      var t = h.prototype.__modules__;
      "function" == typeof e && t.indexOf(e) < 0 && t.push(e);
    }
    static use(e) {
      return (
        Array.isArray(e)
          ? e.forEach((e) => h.installModule(e))
          : h.installModule(e),
        h
      );
    }
  }
  function z(i, s, a, r) {
    return (
      i.params.createElements &&
        Object.keys(r).forEach((t) => {
          if (!a[t] && !0 === a.auto) {
            let e = H(i.el, "." + r[t])[0];
            e || (((e = P("div", r[t])).className = r[t]), i.el.append(e)),
              (a[t] = e),
              (s[t] = e);
          }
        }),
      a
    );
  }
  function F(e) {
    return (
      "." +
      (e = void 0 === e ? "" : e)
        .trim()
        .replace(/([\.:!+\/()[\]])/g, "\\$1")
        .replace(/ /g, ".")
    );
  }
  function m(e) {
    let {
        effect: i,
        swiper: s,
        on: t,
        setTranslate: a,
        setTransition: r,
        overwriteParams: n,
        perspective: o,
        recreateShadows: l,
        getEffectParams: d,
      } = e,
      c;
    t("beforeInit", () => {
      var e;
      s.params.effect === i &&
        (s.classNames.push("" + s.params.containerModifierClass + i),
        o && o() && s.classNames.push(s.params.containerModifierClass + "3d"),
        (e = n ? n() : {}),
        Object.assign(s.params, e),
        Object.assign(s.originalParams, e));
    }),
      t("setTranslate _virtualUpdated", () => {
        s.params.effect === i && a();
      }),
      t("setTransition", (e, t) => {
        s.params.effect === i && r(t);
      }),
      t("transitionEnd", () => {
        s.params.effect === i &&
          l &&
          d &&
          d().slideShadows &&
          (s.slides.forEach((e) => {
            e.querySelectorAll(
              ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
            ).forEach((e) => e.remove());
          }),
          l());
      }),
      t("virtualUpdate", () => {
        s.params.effect === i &&
          (s.slides.length || (c = !0),
          requestAnimationFrame(() => {
            c && s.slides && s.slides.length && (a(), (c = !1));
          }));
      });
  }
  function E(e, t) {
    var i = r(t);
    return (
      i !== t &&
        ((i.style.backfaceVisibility = "hidden"),
        (i.style["-webkit-backface-visibility"] = "hidden")),
      i
    );
  }
  function s(e) {
    let { swiper: i, duration: t, transformElements: s, allSlides: a } = e,
      r = i.activeIndex;
    if (i.params.virtualTranslate && 0 !== t) {
      let t = !1;
      (a
        ? s
        : s.filter((e) => {
            var t,
              e = e.classList.contains("swiper-slide-transform")
                ? (t = e).parentElement ||
                  i.slides.find(
                    (e) => e.shadowRoot && e.shadowRoot === t.parentNode
                  )
                : e;
            return i.getSlideIndex(e) === r;
          })
      ).forEach((e) => {
        f(e, () => {
          var e;
          t ||
            (i &&
              !i.destroyed &&
              ((t = !0),
              (i.animating = !1),
              (e = new window.CustomEvent("transitionend", {
                bubbles: !0,
                cancelable: !0,
              })),
              i.wrapperEl.dispatchEvent(e)));
        });
      });
    }
  }
  function x(e, t, i) {
    (i =
      "swiper-slide-shadow" +
      (i ? "-" + i : "") +
      (e ? " swiper-slide-shadow-" + e : "")),
      (e = r(t));
    let s = e.querySelector("." + i.split(" ").join("."));
    return s || ((s = P("div", i.split(" "))), e.append(s)), s;
  }
  return (
    Object.keys(i).forEach((t) => {
      Object.keys(i[t]).forEach((e) => {
        h.prototype[e] = i[t][e];
      });
    }),
    h.use([
      function (e) {
        let { swiper: r, on: t, emit: i } = e,
          s = N(),
          a = null,
          n = null,
          o = () => {
            r &&
              !r.destroyed &&
              r.initialized &&
              (i("beforeResize"), i("resize"));
          },
          l = () => {
            r && !r.destroyed && r.initialized && i("orientationchange");
          };
        t("init", () => {
          r.params.resizeObserver && void 0 !== s.ResizeObserver
            ? r &&
              !r.destroyed &&
              r.initialized &&
              (a = new ResizeObserver((i) => {
                n = s.requestAnimationFrame(() => {
                  var { width: e, height: t } = r;
                  let s = e,
                    a = t;
                  i.forEach((e) => {
                    var { contentBoxSize: e, contentRect: t, target: i } = e;
                    (i && i !== r.el) ||
                      ((s = t ? t.width : (e[0] || e).inlineSize),
                      (a = t ? t.height : (e[0] || e).blockSize));
                  }),
                    (s === e && a === t) || o();
                });
              })).observe(r.el)
            : (s.addEventListener("resize", o),
              s.addEventListener("orientationchange", l));
        }),
          t("destroy", () => {
            n && s.cancelAnimationFrame(n),
              a && a.unobserve && r.el && (a.unobserve(r.el), (a = null)),
              s.removeEventListener("resize", o),
              s.removeEventListener("orientationchange", l);
          });
      },
      function (e) {
        function i(e, t) {
          void 0 === t && (t = {});
          var i = new (o.MutationObserver || o.WebkitMutationObserver)((e) => {
            var t;
            s.__preventObserver__ ||
              (1 === e.length
                ? r("observerUpdate", e[0])
                : ((t = function () {
                    r("observerUpdate", e[0]);
                  }),
                  o.requestAnimationFrame
                    ? o.requestAnimationFrame(t)
                    : o.setTimeout(t, 0)));
          });
          i.observe(e, {
            attributes: void 0 === t.attributes || t.attributes,
            childList: s.isElement || (void 0 === t.childList || t).childList,
            characterData: void 0 === t.characterData || t.characterData,
          }),
            n.push(i);
        }
        let { swiper: s, extendParams: t, on: a, emit: r } = e,
          n = [],
          o = N();
        t({ observer: !1, observeParents: !1, observeSlideChildren: !1 }),
          a("init", () => {
            if (s.params.observer) {
              if (s.params.observeParents) {
                var t = B(s.hostEl);
                for (let e = 0; e < t.length; e += 1) i(t[e]);
              }
              i(s.hostEl, { childList: s.params.observeSlideChildren }),
                i(s.wrapperEl, { attributes: !1 });
            }
          }),
          a("destroy", () => {
            n.forEach((e) => {
              e.disconnect();
            }),
              n.splice(0, n.length);
          });
      },
    ]),
    h.use([
      function (e) {
        let t,
          { swiper: M, extendParams: i, on: s, emit: C } = e;
        i({
          virtual: {
            enabled: !1,
            slides: [],
            cache: !0,
            renderSlide: null,
            renderExternal: null,
            renderExternalUpdate: !0,
            addSlidesBefore: 0,
            addSlidesAfter: 0,
          },
        });
        e = L();
        M.virtual = {
          cache: {},
          from: void 0,
          to: void 0,
          slides: [],
          offset: 0,
          slidesGrid: [],
        };
        let a = e.createElement("div");
        function A(e, t) {
          var i = M.params.virtual;
          if (i.cache && M.virtual.cache[t]) return M.virtual.cache[t];
          let s;
          return (
            i.renderSlide
              ? "string" == typeof (s = i.renderSlide.call(M, e, t)) &&
                (D(a, s), (s = a.children[0]))
              : (s = M.isElement
                  ? P("swiper-slide")
                  : P("div", M.params.slideClass)),
            s.setAttribute("data-swiper-slide-index", t),
            i.renderSlide || D(s, e),
            i.cache && (M.virtual.cache[t] = s),
            s
          );
        }
        function n(h, m, f) {
          var {
            slidesPerView: g,
            slidesPerGroup: v,
            centeredSlides: b,
            loop: w,
            initialSlide: y,
          } = M.params;
          if (!(m && !w && 0 < y)) {
            let { addSlidesBefore: e, addSlidesAfter: t } = M.params.virtual,
              {
                from: i,
                to: s,
                slides: a,
                slidesGrid: r,
                offset: n,
              } = M.virtual;
            M.params.cssMode || M.updateActiveIndex();
            m = void 0 === f ? M.activeIndex || 0 : f;
            let o,
              l,
              d,
              c =
                ((o = M.rtlTranslate
                  ? "right"
                  : M.isHorizontal()
                  ? "left"
                  : "top"),
                m -
                  (d = b
                    ? ((l = Math.floor(g / 2) + v + t),
                      Math.floor(g / 2) + v + e)
                    : ((l = g + (v - 1) + t), (w ? g : v) + e))),
              p = m + l,
              u =
                (w || ((c = Math.max(c, 0)), (p = Math.min(p, a.length - 1))),
                (M.slidesGrid[c] || 0) - (M.slidesGrid[0] || 0));
            if (
              (w && m >= d
                ? ((c -= d), b || (u += M.slidesGrid[0]))
                : w && m < d && ((c = -d), b) && (u += M.slidesGrid[0]),
              Object.assign(M.virtual, {
                from: c,
                to: p,
                offset: u,
                slidesGrid: M.slidesGrid,
                slidesBefore: d,
                slidesAfter: l,
              }),
              i !== c || s !== p || h)
            )
              if (M.params.virtual.renderExternal)
                M.params.virtual.renderExternal.call(M, {
                  offset: u,
                  from: c,
                  to: p,
                  slides: (() => {
                    var t = [];
                    for (let e = c; e <= p; e += 1) t.push(a[e]);
                    return t;
                  })(),
                }),
                  M.params.virtual.renderExternalUpdate
                    ? S()
                    : C("virtualUpdate");
              else {
                var _ = [],
                  E = [],
                  x = (e) => {
                    let t = e;
                    return (
                      e < 0
                        ? (t = a.length + e)
                        : t >= a.length && (t -= a.length),
                      t
                    );
                  };
                if (h)
                  M.slides
                    .filter((e) =>
                      e.matches(`.${M.params.slideClass}, swiper-slide`)
                    )
                    .forEach((e) => {
                      e.remove();
                    });
                else
                  for (let e = i; e <= s; e += 1)
                    if (e < c || e > p) {
                      let t = x(e);
                      M.slides
                        .filter((e) =>
                          e.matches(
                            `.${M.params.slideClass}[data-swiper-slide-index="${t}"], swiper-slide[data-swiper-slide-index="${t}"]`
                          )
                        )
                        .forEach((e) => {
                          e.remove();
                        });
                    }
                var y = w ? -a.length : 0,
                  T = w ? 2 * a.length : a.length;
                for (let t = y; t < T; t += 1)
                  if (t >= c && t <= p) {
                    let e = x(t);
                    void 0 === s || h
                      ? E.push(e)
                      : (t > s && E.push(e), t < i && _.push(e));
                  }
                if (
                  (E.forEach((e) => {
                    M.slidesEl.append(A(a[e], e));
                  }),
                  w)
                )
                  for (let t = _.length - 1; 0 <= t; --t) {
                    let e = _[t];
                    M.slidesEl.prepend(A(a[e], e));
                  }
                else
                  _.sort((e, t) => t - e),
                    _.forEach((e) => {
                      M.slidesEl.prepend(A(a[e], e));
                    });
                H(M.slidesEl, ".swiper-slide, swiper-slide").forEach((e) => {
                  e.style[o] = u - Math.abs(M.cssOverflowAdjustment()) + "px";
                }),
                  S();
              }
            else
              M.slidesGrid !== r &&
                u !== n &&
                M.slides.forEach((e) => {
                  e.style[o] = u - Math.abs(M.cssOverflowAdjustment()) + "px";
                }),
                M.updateProgress(),
                C("virtualUpdate");
            function S() {
              M.updateSlides(),
                M.updateProgress(),
                M.updateSlidesClasses(),
                C("virtualUpdate");
            }
          }
        }
        s("beforeInit", () => {
          if (M.params.virtual.enabled) {
            let e;
            var t;
            void 0 === M.passedParams.virtual.slides &&
              (t = [...M.slidesEl.children].filter((e) =>
                e.matches(`.${M.params.slideClass}, swiper-slide`)
              )) &&
              t.length &&
              ((M.virtual.slides = [...t]),
              (e = !0),
              t.forEach((e, t) => {
                e.setAttribute("data-swiper-slide-index", t),
                  (M.virtual.cache[t] = e).remove();
              })),
              e || (M.virtual.slides = M.params.virtual.slides),
              M.classNames.push(M.params.containerModifierClass + "virtual"),
              (M.params.watchSlidesProgress = !0),
              n(!(M.originalParams.watchSlidesProgress = !0), !0);
          }
        }),
          s("setTranslate", () => {
            M.params.virtual.enabled &&
              (M.params.cssMode && !M._immediateVirtual
                ? (clearTimeout(t),
                  (t = setTimeout(() => {
                    n();
                  }, 100)))
                : n());
          }),
          s("init update resize", () => {
            M.params.virtual.enabled &&
              M.params.cssMode &&
              k(M.wrapperEl, "--swiper-virtual-size", M.virtualSize + "px");
          }),
          Object.assign(M.virtual, {
            appendSlide: function (t) {
              if ("object" == typeof t && "length" in t)
                for (let e = 0; e < t.length; e += 1)
                  t[e] && M.virtual.slides.push(t[e]);
              else M.virtual.slides.push(t);
              n(!0);
            },
            prependSlide: function (t) {
              let e = M.activeIndex,
                i = e + 1,
                r = 1;
              if (Array.isArray(t)) {
                for (let e = 0; e < t.length; e += 1)
                  t[e] && M.virtual.slides.unshift(t[e]);
                (i = e + t.length), (r = t.length);
              } else M.virtual.slides.unshift(t);
              if (M.params.virtual.cache) {
                let s = M.virtual.cache,
                  a = {};
                Object.keys(s).forEach((e) => {
                  var t = s[e],
                    i = t.getAttribute("data-swiper-slide-index");
                  i &&
                    t.setAttribute(
                      "data-swiper-slide-index",
                      parseInt(i, 10) + r
                    ),
                    (a[parseInt(e, 10) + r] = t);
                }),
                  (M.virtual.cache = a);
              }
              n(!0), M.slideTo(i, 0);
            },
            removeSlide: function (i) {
              if (null != i) {
                let t = M.activeIndex;
                if (Array.isArray(i))
                  for (let e = i.length - 1; 0 <= e; --e)
                    M.params.virtual.cache &&
                      (delete M.virtual.cache[i[e]],
                      Object.keys(M.virtual.cache).forEach((e) => {
                        i < e &&
                          ((M.virtual.cache[e - 1] = M.virtual.cache[e]),
                          M.virtual.cache[e - 1].setAttribute(
                            "data-swiper-slide-index",
                            e - 1
                          ),
                          delete M.virtual.cache[e]);
                      })),
                      M.virtual.slides.splice(i[e], 1),
                      i[e] < t && --t,
                      (t = Math.max(t, 0));
                else
                  M.params.virtual.cache &&
                    (delete M.virtual.cache[i],
                    Object.keys(M.virtual.cache).forEach((e) => {
                      i < e &&
                        ((M.virtual.cache[e - 1] = M.virtual.cache[e]),
                        M.virtual.cache[e - 1].setAttribute(
                          "data-swiper-slide-index",
                          e - 1
                        ),
                        delete M.virtual.cache[e]);
                    })),
                    M.virtual.slides.splice(i, 1),
                    i < t && --t,
                    (t = Math.max(t, 0));
                n(!0), M.slideTo(t, 0);
              }
            },
            removeAllSlides: function () {
              (M.virtual.slides = []),
                M.params.virtual.cache && (M.virtual.cache = {}),
                n(!0),
                M.slideTo(0, 0);
            },
            update: n,
          });
      },
      function (e) {
        let { swiper: p, extendParams: t, on: i, emit: u } = e,
          h = L(),
          m = N();
        function s(c) {
          if (p.enabled) {
            let l = p.rtlTranslate,
              e = c,
              t =
                (e = e.originalEvent ? e.originalEvent : e).keyCode ||
                e.charCode,
              i = p.params.keyboard.pageUpDown,
              s = i && 33 === t,
              a = i && 34 === t,
              r = 37 === t,
              n = 39 === t,
              o = 38 === t,
              d = 40 === t;
            if (
              !p.allowSlideNext &&
              ((p.isHorizontal() && n) || (p.isVertical() && d) || a)
            )
              return !1;
            if (
              !p.allowSlidePrev &&
              ((p.isHorizontal() && r) || (p.isVertical() && o) || s)
            )
              return !1;
            if (
              !(
                e.shiftKey ||
                e.altKey ||
                e.ctrlKey ||
                e.metaKey ||
                (h.activeElement &&
                  (h.activeElement.isContentEditable ||
                    (h.activeElement.nodeName &&
                      ("input" === h.activeElement.nodeName.toLowerCase() ||
                        "textarea" ===
                          h.activeElement.nodeName.toLowerCase()))))
              )
            ) {
              if (
                p.params.keyboard.onlyInViewport &&
                (s || a || r || n || o || d)
              ) {
                let i = !1;
                if (
                  0 < B(p.el, `.${p.params.slideClass}, swiper-slide`).length &&
                  0 === B(p.el, "." + p.params.slideActiveClass).length
                )
                  return;
                let e = p.el,
                  t = e.clientWidth,
                  s = e.clientHeight,
                  a = m.innerWidth,
                  r = m.innerHeight,
                  n = q(e),
                  o =
                    (l && (n.left -= e.scrollLeft),
                    [
                      [n.left, n.top],
                      [n.left + t, n.top],
                      [n.left, n.top + s],
                      [n.left + t, n.top + s],
                    ]);
                for (let t = 0; t < o.length; t += 1) {
                  let e = o[t];
                  0 <= e[0] &&
                    e[0] <= a &&
                    0 <= e[1] &&
                    e[1] <= r &&
                    ((0 === e[0] && 0 === e[1]) || (i = !0));
                }
                if (!i) return;
              }
              p.isHorizontal()
                ? ((s || a || r || n) &&
                    (e.preventDefault
                      ? e.preventDefault()
                      : (e.returnValue = !1)),
                  (((a || n) && !l) || ((s || r) && l)) && p.slideNext(),
                  (((s || r) && !l) || ((a || n) && l)) && p.slidePrev())
                : ((s || a || o || d) &&
                    (e.preventDefault
                      ? e.preventDefault()
                      : (e.returnValue = !1)),
                  (a || d) && p.slideNext(),
                  (s || o) && p.slidePrev()),
                u("keyPress", t);
            }
          }
        }
        function a() {
          p.keyboard.enabled ||
            (h.addEventListener("keydown", s), (p.keyboard.enabled = !0));
        }
        function r() {
          p.keyboard.enabled &&
            (h.removeEventListener("keydown", s), (p.keyboard.enabled = !1));
        }
        (p.keyboard = { enabled: !1 }),
          t({ keyboard: { enabled: !1, onlyInViewport: !0, pageUpDown: !0 } }),
          i("init", () => {
            p.params.keyboard.enabled && a();
          }),
          i("destroy", () => {
            p.keyboard.enabled && r();
          }),
          Object.assign(p.keyboard, { enable: a, disable: r });
      },
      function (e) {
        let { swiper: c, extendParams: t, on: i, emit: p } = e,
          s = N(),
          u;
        t({
          mousewheel: {
            enabled: !1,
            releaseOnEdges: !1,
            invert: !1,
            forceToAxis: !1,
            sensitivity: 1,
            eventsTarget: "container",
            thresholdDelta: null,
            thresholdTime: null,
            noMousewheelClass: "swiper-no-mousewheel",
          },
        }),
          (c.mousewheel = { enabled: !1 });
        let h,
          a = v(),
          m = [];
        function r() {
          c.enabled && (c.mouseEntered = !0);
        }
        function n() {
          c.enabled && (c.mouseEntered = !1);
        }
        function f(e) {
          (c.params.mousewheel.thresholdDelta &&
            e.delta < c.params.mousewheel.thresholdDelta) ||
            (c.params.mousewheel.thresholdTime &&
              v() - a < c.params.mousewheel.thresholdTime) ||
            (6 <= e.delta && v() - a < 60) ||
            (e.direction < 0
              ? (c.isEnd && !c.params.loop) ||
                c.animating ||
                (c.slideNext(), p("scroll", e.raw))
              : (c.isBeginning && !c.params.loop) ||
                c.animating ||
                (c.slidePrev(), p("scroll", e.raw)),
            (a = new s.Date().getTime()));
        }
        function o(s) {
          let n = s,
            a = !0;
          if (
            c.enabled &&
            !s.target.closest("." + c.params.mousewheel.noMousewheelClass)
          ) {
            var o = c.params.mousewheel;
            c.params.cssMode && n.preventDefault();
            let e = c.el,
              t =
                (e =
                  "container" !== c.params.mousewheel.eventsTarget
                    ? document.querySelector(c.params.mousewheel.eventsTarget)
                    : e) && e.contains(n.target);
            if (!c.mouseEntered && !t && !o.releaseOnEdges) return !0;
            n.originalEvent && (n = n.originalEvent);
            let r = 0;
            var l = c.rtlTranslate ? -1 : 1,
              d = ((e) => {
                let t = 0,
                  i = 0,
                  s = 0,
                  a = 0;
                return (
                  "detail" in e && (i = e.detail),
                  "wheelDelta" in e && (i = -e.wheelDelta / 120),
                  "wheelDeltaY" in e && (i = -e.wheelDeltaY / 120),
                  "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120),
                  "axis" in e &&
                    e.axis === e.HORIZONTAL_AXIS &&
                    ((t = i), (i = 0)),
                  (s = 10 * t),
                  (a = 10 * i),
                  "deltaY" in e && (a = e.deltaY),
                  "deltaX" in e && (s = e.deltaX),
                  e.shiftKey && !s && ((s = a), (a = 0)),
                  (s || a) &&
                    e.deltaMode &&
                    (1 === e.deltaMode
                      ? ((s *= 40), (a *= 40))
                      : ((s *= 800), (a *= 800))),
                  s && !t && (t = s < 1 ? -1 : 1),
                  a && !i && (i = a < 1 ? -1 : 1),
                  { spinX: t, spinY: i, pixelX: s, pixelY: a }
                );
              })(n);
            if (o.forceToAxis)
              if (c.isHorizontal()) {
                if (!(Math.abs(d.pixelX) > Math.abs(d.pixelY))) return !0;
                r = -d.pixelX * l;
              } else {
                if (!(Math.abs(d.pixelY) > Math.abs(d.pixelX))) return !0;
                r = -d.pixelY;
              }
            else
              r =
                Math.abs(d.pixelX) > Math.abs(d.pixelY)
                  ? -d.pixelX * l
                  : -d.pixelY;
            if (0 === r) return !0;
            o.invert && (r = -r);
            let i = c.getTranslate() + r * o.sensitivity;
            if (
              ((i = i >= c.minTranslate() ? c.minTranslate() : i) <=
                c.maxTranslate() && (i = c.maxTranslate()),
              (a =
                !!c.params.loop ||
                !(i === c.minTranslate() || i === c.maxTranslate())) &&
                c.params.nested &&
                n.stopPropagation(),
              c.params.freeMode && c.params.freeMode.enabled)
            ) {
              let s = {
                  time: v(),
                  delta: Math.abs(r),
                  direction: Math.sign(r),
                },
                a =
                  h &&
                  s.time < h.time + 500 &&
                  s.delta <= h.delta &&
                  s.direction === h.direction;
              if (!a) {
                h = void 0;
                let e = c.getTranslate() + r * o.sensitivity,
                  t = c.isBeginning,
                  i = c.isEnd;
                if (
                  ((e = e >= c.minTranslate() ? c.minTranslate() : e) <=
                    c.maxTranslate() && (e = c.maxTranslate()),
                  c.setTransition(0),
                  c.setTranslate(e),
                  c.updateProgress(),
                  c.updateActiveIndex(),
                  c.updateSlidesClasses(),
                  ((!t && c.isBeginning) || (!i && c.isEnd)) &&
                    c.updateSlidesClasses(),
                  c.params.loop &&
                    c.loopFix({
                      direction: s.direction < 0 ? "next" : "prev",
                      byMousewheel: !0,
                    }),
                  c.params.freeMode.sticky)
                ) {
                  clearTimeout(u), (u = void 0), 15 <= m.length && m.shift();
                  let e = m.length ? m[m.length - 1] : void 0,
                    t = m[0];
                  if (
                    (m.push(s),
                    e && (s.delta > e.delta || s.direction !== e.direction))
                  )
                    m.splice(0);
                  else if (
                    15 <= m.length &&
                    s.time - t.time < 500 &&
                    1 <= t.delta - s.delta &&
                    s.delta <= 6
                  ) {
                    let e = 0 < r ? 0.8 : 0.2;
                    (h = s),
                      m.splice(0),
                      (u = S(() => {
                        !c.destroyed &&
                          c.params &&
                          c.slideToClosest(c.params.speed, !0, void 0, e);
                      }, 0));
                  }
                  u =
                    u ||
                    S(() => {
                      !c.destroyed &&
                        c.params &&
                        ((h = s),
                        m.splice(0),
                        c.slideToClosest(c.params.speed, !0, void 0, 0.5));
                    }, 500);
                }
                if (
                  (a || p("scroll", n),
                  c.params.autoplay &&
                    c.params.autoplay.disableOnInteraction &&
                    c.autoplay.stop(),
                  o.releaseOnEdges &&
                    (e === c.minTranslate() || e === c.maxTranslate()))
                )
                  return !0;
              }
            } else {
              let e = {
                  time: v(),
                  delta: Math.abs(r),
                  direction: Math.sign(r),
                  raw: s,
                },
                t =
                  (2 <= m.length && m.shift(),
                  m.length ? m[m.length - 1] : void 0);
              if (
                (m.push(e),
                (!t ||
                  e.direction !== t.direction ||
                  e.delta > t.delta ||
                  e.time > t.time + 150) &&
                  f(e),
                ((e) => {
                  var t = c.params.mousewheel;
                  if (e.direction < 0) {
                    if (c.isEnd && !c.params.loop && t.releaseOnEdges) return 1;
                  } else if (
                    c.isBeginning &&
                    !c.params.loop &&
                    t.releaseOnEdges
                  )
                    return 1;
                })(e))
              )
                return !0;
            }
            return (
              n.preventDefault ? n.preventDefault() : (n.returnValue = !1), !1
            );
          }
        }
        function l(e) {
          let t = c.el;
          (t =
            "container" !== c.params.mousewheel.eventsTarget
              ? document.querySelector(c.params.mousewheel.eventsTarget)
              : t)[e]("mouseenter", r),
            t[e]("mouseleave", n),
            t[e]("wheel", o);
        }
        function d() {
          return c.params.cssMode
            ? (c.wrapperEl.removeEventListener("wheel", o), !0)
            : !c.mousewheel.enabled &&
                (l("addEventListener"), (c.mousewheel.enabled = !0));
        }
        function g() {
          return c.params.cssMode
            ? (c.wrapperEl.addEventListener(event, o), !0)
            : !!c.mousewheel.enabled &&
                (l("removeEventListener"), !(c.mousewheel.enabled = !1));
        }
        i("init", () => {
          !c.params.mousewheel.enabled && c.params.cssMode && g(),
            c.params.mousewheel.enabled && d();
        }),
          i("destroy", () => {
            c.params.cssMode && d(), c.mousewheel.enabled && g();
          }),
          Object.assign(c.mousewheel, { enable: d, disable: g });
      },
      function (e) {
        let { swiper: n, extendParams: t, on: i, emit: o } = e;
        function a(e) {
          let t;
          return !(
            e &&
            "string" == typeof e &&
            n.isElement &&
            (t = n.el.querySelector(e) || n.hostEl.querySelector(e))
          ) &&
            (e &&
              ("string" == typeof e && (t = [...document.querySelectorAll(e)]),
              n.params.uniqueNavElements &&
              "string" == typeof e &&
              t &&
              1 < t.length &&
              1 === n.el.querySelectorAll(e).length
                ? (t = n.el.querySelector(e))
                : t && 1 === t.length && (t = t[0])),
            e) &&
            !t
            ? e
            : t;
        }
        function s(e, t) {
          let i = n.params.navigation;
          (e = I(e)).forEach((e) => {
            e &&
              (e.classList[t ? "add" : "remove"](...i.disabledClass.split(" ")),
              "BUTTON" === e.tagName && (e.disabled = t),
              n.params.watchOverflow) &&
              n.enabled &&
              e.classList[n.isLocked ? "add" : "remove"](i.lockClass);
          });
        }
        function r() {
          var { nextEl: e, prevEl: t } = n.navigation;
          n.params.loop
            ? (s(t, !1), s(e, !1))
            : (s(t, n.isBeginning && !n.params.rewind),
              s(e, n.isEnd && !n.params.rewind));
        }
        function l(e) {
          e.preventDefault(),
            (n.isBeginning && !n.params.loop && !n.params.rewind) ||
              (n.slidePrev(), o("navigationPrev"));
        }
        function d(e) {
          e.preventDefault(),
            (n.isEnd && !n.params.loop && !n.params.rewind) ||
              (n.slideNext(), o("navigationNext"));
        }
        function c() {
          let i = n.params.navigation;
          if (
            ((n.params.navigation = z(
              n,
              n.originalParams.navigation,
              n.params.navigation,
              { nextEl: "swiper-button-next", prevEl: "swiper-button-prev" }
            )),
            i.nextEl || i.prevEl)
          ) {
            var e = a(i.nextEl),
              s = a(i.prevEl);
            Object.assign(n.navigation, { nextEl: e, prevEl: s }),
              (e = I(e)),
              (s = I(s));
            let t = (e, t) => {
              e && e.addEventListener("click", "next" === t ? d : l),
                !n.enabled && e && e.classList.add(...i.lockClass.split(" "));
            };
            e.forEach((e) => t(e, "next")), s.forEach((e) => t(e, "prev"));
          }
        }
        function p() {
          var { nextEl: e, prevEl: t } = n.navigation,
            e = I(e),
            t = I(t);
          let i = (e, t) => {
            e.removeEventListener("click", "next" === t ? d : l),
              e.classList.remove(
                ...n.params.navigation.disabledClass.split(" ")
              );
          };
          e.forEach((e) => i(e, "next")), t.forEach((e) => i(e, "prev"));
        }
        t({
          navigation: {
            nextEl: null,
            prevEl: null,
            hideOnClick: !1,
            disabledClass: "swiper-button-disabled",
            hiddenClass: "swiper-button-hidden",
            lockClass: "swiper-button-lock",
            navigationDisabledClass: "swiper-navigation-disabled",
          },
        }),
          (n.navigation = { nextEl: null, prevEl: null }),
          i("init", () => {
            (!1 === n.params.navigation.enabled ? u : (c(), r))();
          }),
          i("toEdge fromEdge lock unlock", () => {
            r();
          }),
          i("destroy", () => {
            p();
          }),
          i("enable disable", () => {
            var { nextEl: e, prevEl: t } = n.navigation,
              e = I(e),
              t = I(t);
            n.enabled
              ? r()
              : [...e, ...t]
                  .filter((e) => !!e)
                  .forEach((e) =>
                    e.classList.add(n.params.navigation.lockClass)
                  );
          }),
          i("click", (e, t) => {
            let { nextEl: i, prevEl: s } = n.navigation;
            (i = I(i)), (s = I(s));
            var a = t.target;
            let r = s.includes(a) || i.includes(a);
            if (n.isElement && !r) {
              let e = t.path || (t.composedPath && t.composedPath());
              e && (r = e.find((e) => i.includes(e) || s.includes(e)));
            }
            if (
              n.params.navigation.hideOnClick &&
              !r &&
              (!(
                n.pagination &&
                n.params.pagination &&
                n.params.pagination.clickable
              ) ||
                (n.pagination.el !== a && !n.pagination.el.contains(a)))
            ) {
              let e;
              i.length
                ? (e = i[0].classList.contains(n.params.navigation.hiddenClass))
                : s.length &&
                  (e = s[0].classList.contains(
                    n.params.navigation.hiddenClass
                  )),
                o(!0 === e ? "navigationShow" : "navigationHide"),
                [...i, ...s]
                  .filter((e) => !!e)
                  .forEach((e) =>
                    e.classList.toggle(n.params.navigation.hiddenClass)
                  );
            }
          });
        let u = () => {
          n.el.classList.add(
            ...n.params.navigation.navigationDisabledClass.split(" ")
          ),
            p();
        };
        Object.assign(n.navigation, {
          enable: () => {
            n.el.classList.remove(
              ...n.params.navigation.navigationDisabledClass.split(" ")
            ),
              c(),
              r();
          },
          disable: u,
          update: r,
          init: c,
          destroy: p,
        });
      },
      function (e) {
        let { swiper: d, extendParams: t, on: i, emit: c } = e;
        e = "swiper-pagination";
        let p,
          u =
            (t({
              pagination: {
                el: null,
                bulletElement: "span",
                clickable: !1,
                hideOnClick: !1,
                renderBullet: null,
                renderProgressbar: null,
                renderFraction: null,
                renderCustom: null,
                progressbarOpposite: !1,
                type: "bullets",
                dynamicBullets: !1,
                dynamicMainBullets: 1,
                formatFractionCurrent: (e) => e,
                formatFractionTotal: (e) => e,
                bulletClass: e + "-bullet",
                bulletActiveClass: e + "-bullet-active",
                modifierClass: e + "-",
                currentClass: e + "-current",
                totalClass: e + "-total",
                hiddenClass: e + "-hidden",
                progressbarFillClass: e + "-progressbar-fill",
                progressbarOppositeClass: e + "-progressbar-opposite",
                clickableClass: e + "-clickable",
                lockClass: e + "-lock",
                horizontalClass: e + "-horizontal",
                verticalClass: e + "-vertical",
                paginationDisabledClass: e + "-disabled",
              },
            }),
            (d.pagination = { el: null, bullets: [] }),
            0);
        function a() {
          return (
            !d.params.pagination.el ||
            !d.pagination.el ||
            (Array.isArray(d.pagination.el) && 0 === d.pagination.el.length)
          );
        }
        function h(e, t) {
          var i = d.params.pagination.bulletActiveClass;
          (e =
            e && e[("prev" === t ? "previous" : "next") + "ElementSibling"]) &&
            (e.classList.add(i + "-" + t),
            (e = e[("prev" === t ? "previous" : "next") + "ElementSibling"])) &&
            e.classList.add(i + `-${t}-` + t);
        }
        function s(e) {
          var t = e.target.closest(F(d.params.pagination.bulletClass));
          if (t) {
            e.preventDefault();
            var i,
              s,
              a,
              t = C(t) * d.params.slidesPerGroup;
            if (d.params.loop) {
              if (d.realIndex !== t) {
                (i = d.realIndex), (s = t);
                let e =
                  (s %= a = d.slides.length) == 1 + (i %= a)
                    ? "next"
                    : s == i - 1
                    ? "previous"
                    : void 0;
                "next" === e
                  ? d.slideNext()
                  : "previous" === e
                  ? d.slidePrev()
                  : d.slideToLoop(t);
              }
            } else d.slideTo(t);
          }
        }
        function r() {
          let o = d.rtl,
            l = d.params.pagination;
          if (!a()) {
            let n,
              e,
              t = d.pagination.el,
              i =
                ((t = I(t)),
                (d.virtual && d.params.virtual.enabled ? d.virtual : d).slides
                  .length),
              r = d.params.loop
                ? Math.ceil(i / d.params.slidesPerGroup)
                : d.snapGrid.length;
            if (
              (d.params.loop
                ? ((e = d.previousRealIndex || 0),
                  (n =
                    1 < d.params.slidesPerGroup
                      ? Math.floor(d.realIndex / d.params.slidesPerGroup)
                      : d.realIndex))
                : void 0 !== d.snapIndex
                ? ((n = d.snapIndex), (e = d.previousSnapIndex))
                : ((e = d.previousIndex || 0), (n = d.activeIndex || 0)),
              "bullets" === l.type &&
                d.pagination.bullets &&
                0 < d.pagination.bullets.length)
            ) {
              let s = d.pagination.bullets,
                i,
                a,
                r;
              if (
                (l.dynamicBullets &&
                  ((p = A(s[0], d.isHorizontal() ? "width" : "height", !0)),
                  t.forEach((e) => {
                    e.style[d.isHorizontal() ? "width" : "height"] =
                      p * (l.dynamicMainBullets + 4) + "px";
                  }),
                  1 < l.dynamicMainBullets &&
                    void 0 !== e &&
                    ((u += n - (e || 0)) > l.dynamicMainBullets - 1
                      ? (u = l.dynamicMainBullets - 1)
                      : u < 0 && (u = 0)),
                  (i = Math.max(n - u, 0)),
                  (a = i + (Math.min(s.length, l.dynamicMainBullets) - 1)),
                  (r = (a + i) / 2)),
                s.forEach((e) => {
                  var t = [
                    ...[
                      "",
                      "-next",
                      "-next-next",
                      "-prev",
                      "-prev-prev",
                      "-main",
                    ].map((e) => "" + l.bulletActiveClass + e),
                  ]
                    .map((e) =>
                      "string" == typeof e && e.includes(" ") ? e.split(" ") : e
                    )
                    .flat();
                  e.classList.remove(...t);
                }),
                1 < t.length)
              )
                s.forEach((e) => {
                  var t = C(e);
                  t === n
                    ? e.classList.add(...l.bulletActiveClass.split(" "))
                    : d.isElement && e.setAttribute("part", "bullet"),
                    l.dynamicBullets &&
                      (t >= i &&
                        t <= a &&
                        e.classList.add(
                          ...(l.bulletActiveClass + "-main").split(" ")
                        ),
                      t === i && h(e, "prev"),
                      t === a) &&
                      h(e, "next");
                });
              else {
                let e = s[n];
                if (
                  (e && e.classList.add(...l.bulletActiveClass.split(" ")),
                  d.isElement &&
                    s.forEach((e, t) => {
                      e.setAttribute(
                        "part",
                        t === n ? "bullet-active" : "bullet"
                      );
                    }),
                  l.dynamicBullets)
                ) {
                  let e = s[i],
                    t = s[a];
                  for (let e = i; e <= a; e += 1)
                    s[e] &&
                      s[e].classList.add(
                        ...(l.bulletActiveClass + "-main").split(" ")
                      );
                  h(e, "prev"), h(t, "next");
                }
              }
              if (l.dynamicBullets) {
                let e = Math.min(s.length, l.dynamicMainBullets + 4),
                  t = (p * e - p) / 2 - r * p,
                  i = o ? "right" : "left";
                s.forEach((e) => {
                  e.style[d.isHorizontal() ? i : "top"] = t + "px";
                });
              }
            }
            t.forEach((s, e) => {
              if (
                ("fraction" === l.type &&
                  (s.querySelectorAll(F(l.currentClass)).forEach((e) => {
                    e.textContent = l.formatFractionCurrent(n + 1);
                  }),
                  s.querySelectorAll(F(l.totalClass)).forEach((e) => {
                    e.textContent = l.formatFractionTotal(r);
                  })),
                "progressbar" === l.type)
              ) {
                var a = l.progressbarOpposite
                  ? d.isHorizontal()
                    ? "vertical"
                    : "horizontal"
                  : d.isHorizontal()
                  ? "horizontal"
                  : "vertical";
                let e = (n + 1) / r,
                  t = 1,
                  i = 1;
                "horizontal" == a ? (t = e) : (i = e),
                  s.querySelectorAll(F(l.progressbarFillClass)).forEach((e) => {
                    (e.style.transform = `translate3d(0,0,0) scaleX(${t}) scaleY(${i})`),
                      (e.style.transitionDuration = d.params.speed + "ms");
                  });
              }
              "custom" === l.type && l.renderCustom
                ? (D(s, l.renderCustom(d, n + 1, r)),
                  0 === e && c("paginationRender", s))
                : (0 === e && c("paginationRender", s),
                  c("paginationUpdate", s)),
                d.params.watchOverflow &&
                  d.enabled &&
                  s.classList[d.isLocked ? "add" : "remove"](l.lockClass);
            });
          }
        }
        function n() {
          let s = d.params.pagination;
          if (!a()) {
            var e =
                d.virtual && d.params.virtual.enabled
                  ? d.virtual.slides.length
                  : d.grid && 1 < d.params.grid.rows
                  ? d.slides.length / Math.ceil(d.params.grid.rows)
                  : d.slides.length,
              t = I((t = d.pagination.el));
            let i = "";
            if ("bullets" === s.type) {
              let t = d.params.loop
                ? Math.ceil(e / d.params.slidesPerGroup)
                : d.snapGrid.length;
              d.params.freeMode &&
                d.params.freeMode.enabled &&
                t > e &&
                (t = e);
              for (let e = 0; e < t; e += 1)
                s.renderBullet
                  ? (i += s.renderBullet.call(d, e, s.bulletClass))
                  : (i += `<${s.bulletElement} ${
                      d.isElement ? 'part="bullet"' : ""
                    } class="${s.bulletClass}"></${s.bulletElement}>`);
            }
            "fraction" === s.type &&
              (i = s.renderFraction
                ? s.renderFraction.call(d, s.currentClass, s.totalClass)
                : `<span class="${s.currentClass}"></span> / <span class="${s.totalClass}"></span>`),
              "progressbar" === s.type &&
                (i = s.renderProgressbar
                  ? s.renderProgressbar.call(d, s.progressbarFillClass)
                  : `<span class="${s.progressbarFillClass}"></span>`),
              (d.pagination.bullets = []),
              t.forEach((e) => {
                "custom" !== s.type && D(e, i || ""),
                  "bullets" === s.type &&
                    d.pagination.bullets.push(
                      ...e.querySelectorAll(F(s.bulletClass))
                    );
              }),
              "custom" !== s.type && c("paginationRender", t[0]);
          }
        }
        function o() {
          d.params.pagination = z(
            d,
            d.originalParams.pagination,
            d.params.pagination,
            { el: "swiper-pagination" }
          );
          let t = d.params.pagination;
          if (t.el) {
            let e;
            (e =
              (e =
                (e =
                  "string" == typeof t.el && d.isElement
                    ? d.el.querySelector(t.el)
                    : e) || "string" != typeof t.el
                  ? e
                  : [...document.querySelectorAll(t.el)]) || t.el) &&
              0 !== e.length &&
              (d.params.uniqueNavElements &&
                "string" == typeof t.el &&
                Array.isArray(e) &&
                1 < e.length &&
                1 < (e = [...d.el.querySelectorAll(t.el)]).length &&
                (e = e.find((e) => B(e, ".swiper")[0] === d.el)),
              Array.isArray(e) && 1 === e.length && (e = e[0]),
              Object.assign(d.pagination, { el: e }),
              (e = I(e)).forEach((e) => {
                "bullets" === t.type &&
                  t.clickable &&
                  e.classList.add(...(t.clickableClass || "").split(" ")),
                  e.classList.add(t.modifierClass + t.type),
                  e.classList.add(
                    d.isHorizontal() ? t.horizontalClass : t.verticalClass
                  ),
                  "bullets" === t.type &&
                    t.dynamicBullets &&
                    (e.classList.add(
                      "" + t.modifierClass + t.type + "-dynamic"
                    ),
                    (u = 0),
                    t.dynamicMainBullets < 1) &&
                    (t.dynamicMainBullets = 1),
                  "progressbar" === t.type &&
                    t.progressbarOpposite &&
                    e.classList.add(t.progressbarOppositeClass),
                  t.clickable && e.addEventListener("click", s),
                  d.enabled || e.classList.add(t.lockClass);
              }));
          }
        }
        function l() {
          let t = d.params.pagination;
          var e;
          a() ||
            ((e = d.pagination.el) &&
              (e = I(e)).forEach((e) => {
                e.classList.remove(t.hiddenClass),
                  e.classList.remove(t.modifierClass + t.type),
                  e.classList.remove(
                    d.isHorizontal() ? t.horizontalClass : t.verticalClass
                  ),
                  t.clickable &&
                    (e.classList.remove(...(t.clickableClass || "").split(" ")),
                    e.removeEventListener("click", s));
              }),
            d.pagination.bullets &&
              d.pagination.bullets.forEach((e) =>
                e.classList.remove(...t.bulletActiveClass.split(" "))
              ));
        }
        i("changeDirection", () => {
          if (d.pagination && d.pagination.el) {
            let t = d.params.pagination;
            var e = d.pagination.el;
            (e = I(e)).forEach((e) => {
              e.classList.remove(t.horizontalClass, t.verticalClass),
                e.classList.add(
                  d.isHorizontal() ? t.horizontalClass : t.verticalClass
                );
            });
          }
        }),
          i("init", () => {
            (!1 === d.params.pagination.enabled ? m : (o(), n(), r))();
          }),
          i("activeIndexChange", () => {
            void 0 === d.snapIndex && r();
          }),
          i("snapIndexChange", () => {
            r();
          }),
          i("snapGridLengthChange", () => {
            n(), r();
          }),
          i("destroy", () => {
            l();
          }),
          i("enable disable", () => {
            var e = d.pagination.el;
            e &&
              (e = I(e)).forEach((e) =>
                e.classList[d.enabled ? "remove" : "add"](
                  d.params.pagination.lockClass
                )
              );
          }),
          i("lock unlock", () => {
            r();
          }),
          i("click", (e, t) => {
            var t = t.target,
              i = I(d.pagination.el);
            if (
              d.params.pagination.el &&
              d.params.pagination.hideOnClick &&
              i &&
              0 < i.length &&
              !t.classList.contains(d.params.pagination.bulletClass) &&
              (!d.navigation ||
                !(
                  (d.navigation.nextEl && t === d.navigation.nextEl) ||
                  (d.navigation.prevEl && t === d.navigation.prevEl)
                ))
            ) {
              let e = i[0].classList.contains(d.params.pagination.hiddenClass);
              c(!0 === e ? "paginationShow" : "paginationHide"),
                i.forEach((e) =>
                  e.classList.toggle(d.params.pagination.hiddenClass)
                );
            }
          });
        let m = () => {
          d.el.classList.add(d.params.pagination.paginationDisabledClass);
          var e = d.pagination.el;
          e &&
            (e = I(e)).forEach((e) =>
              e.classList.add(d.params.pagination.paginationDisabledClass)
            ),
            l();
        };
        Object.assign(d.pagination, {
          enable: () => {
            d.el.classList.remove(d.params.pagination.paginationDisabledClass);
            var e = d.pagination.el;
            e &&
              (e = I(e)).forEach((e) =>
                e.classList.remove(d.params.pagination.paginationDisabledClass)
              ),
              o(),
              n(),
              r();
          },
          disable: m,
          render: n,
          update: r,
          init: o,
          destroy: l,
        });
      },
      function (e) {
        let { swiper: l, extendParams: t, on: i, emit: r } = e,
          n = L(),
          o,
          d,
          c,
          s,
          p = !1,
          u = null,
          h = null;
        function a() {
          if (l.params.scrollbar.el && l.scrollbar.el) {
            let { scrollbar: e, rtlTranslate: t } = l,
              { dragEl: i, el: s } = e,
              a = l.params.scrollbar,
              r = l.params.loop ? l.progressLoop : l.progress,
              n = d,
              o = (c - d) * r;
            t
              ? 0 < (o = -o)
                ? ((n = d - o), (o = 0))
                : -o + d > c && (n = c + o)
              : o < 0
              ? ((n = d + o), (o = 0))
              : o + d > c && (n = c - o),
              l.isHorizontal()
                ? ((i.style.transform = `translate3d(${o}px, 0, 0)`),
                  (i.style.width = n + "px"))
                : ((i.style.transform = `translate3d(0px, ${o}px, 0)`),
                  (i.style.height = n + "px")),
              a.hide &&
                (clearTimeout(u),
                (s.style.opacity = 1),
                (u = setTimeout(() => {
                  (s.style.opacity = 0), (s.style.transitionDuration = "400ms");
                }, 1e3)));
          }
        }
        function m() {
          var e, t, i;
          l.params.scrollbar.el &&
            l.scrollbar.el &&
            ((e = l.scrollbar),
            ({ dragEl: t, el: i } = e),
            (t.style.width = ""),
            (t.style.height = ""),
            (c = l.isHorizontal() ? i.offsetWidth : i.offsetHeight),
            (s =
              l.size /
              (l.virtualSize +
                l.params.slidesOffsetBefore -
                (l.params.centeredSlides ? l.snapGrid[0] : 0))),
            (d =
              "auto" === l.params.scrollbar.dragSize
                ? c * s
                : parseInt(l.params.scrollbar.dragSize, 10)),
            l.isHorizontal()
              ? (t.style.width = d + "px")
              : (t.style.height = d + "px"),
            (i.style.display = 1 <= s ? "none" : ""),
            l.params.scrollbar.hide && (i.style.opacity = 0),
            l.params.watchOverflow) &&
            l.enabled &&
            e.el.classList[l.isLocked ? "add" : "remove"](
              l.params.scrollbar.lockClass
            );
        }
        function f(e) {
          return l.isHorizontal() ? e.clientX : e.clientY;
        }
        function g(e) {
          var { scrollbar: t, rtlTranslate: i } = l,
            t = t.el;
          let s;
          (s =
            (f(e) -
              q(t)[l.isHorizontal() ? "left" : "top"] -
              (null !== o ? o : d / 2)) /
            (c - d)),
            (s = Math.max(Math.min(s, 1), 0)),
            i && (s = 1 - s);
          e = l.minTranslate() + (l.maxTranslate() - l.minTranslate()) * s;
          l.updateProgress(e),
            l.setTranslate(e),
            l.updateActiveIndex(),
            l.updateSlidesClasses();
        }
        function v(e) {
          var t = l.params.scrollbar,
            { scrollbar: i, wrapperEl: s } = l,
            { el: i, dragEl: a } = i;
          (p = !0),
            (o =
              e.target === a
                ? f(e) -
                  e.target.getBoundingClientRect()[
                    l.isHorizontal() ? "left" : "top"
                  ]
                : null),
            e.preventDefault(),
            e.stopPropagation(),
            (s.style.transitionDuration = "100ms"),
            (a.style.transitionDuration = "100ms"),
            g(e),
            clearTimeout(h),
            (i.style.transitionDuration = "0ms"),
            t.hide && (i.style.opacity = 1),
            l.params.cssMode &&
              (l.wrapperEl.style["scroll-snap-type"] = "none"),
            r("scrollbarDragStart", e);
        }
        function b(e) {
          var { scrollbar: t, wrapperEl: i } = l,
            { el: t, dragEl: s } = t;
          p &&
            (e.preventDefault && e.cancelable
              ? e.preventDefault()
              : (e.returnValue = !1),
            g(e),
            (i.style.transitionDuration = "0ms"),
            (t.style.transitionDuration = "0ms"),
            (s.style.transitionDuration = "0ms"),
            r("scrollbarDragMove", e));
        }
        function w(e) {
          let t = l.params.scrollbar,
            { scrollbar: i, wrapperEl: s } = l,
            a = i.el;
          p &&
            ((p = !1),
            l.params.cssMode &&
              ((l.wrapperEl.style["scroll-snap-type"] = ""),
              (s.style.transitionDuration = "")),
            t.hide &&
              (clearTimeout(h),
              (h = S(() => {
                (a.style.opacity = 0), (a.style.transitionDuration = "400ms");
              }, 1e3))),
            r("scrollbarDragEnd", e),
            t.snapOnRelease) &&
            l.slideToClosest();
        }
        function y(e) {
          var t,
            { scrollbar: i, params: s } = l,
            i = i.el;
          i &&
            ((t = !!s.passiveListeners && { passive: !1, capture: !1 }),
            (s = !!s.passiveListeners && { passive: !0, capture: !1 }),
            (i = i)) &&
            (i[(i = "on" === e ? "addEventListener" : "removeEventListener")](
              "pointerdown",
              v,
              t
            ),
            n[i]("pointermove", b, t),
            n[i]("pointerup", w, s));
        }
        function _() {
          var { scrollbar: i, el: s } = l,
            a =
              ((l.params.scrollbar = z(
                l,
                l.originalParams.scrollbar,
                l.params.scrollbar,
                { el: "swiper-scrollbar" }
              )),
              l.params.scrollbar);
          if (a.el) {
            let e, t;
            if (
              (e =
                "string" == typeof a.el && l.isElement
                  ? l.el.querySelector(a.el)
                  : e) ||
              "string" != typeof a.el
            )
              e = e || a.el;
            else if (!(e = n.querySelectorAll(a.el)).length) return;
            (e =
              0 <
              (e =
                l.params.uniqueNavElements &&
                "string" == typeof a.el &&
                1 < e.length &&
                1 === s.querySelectorAll(a.el).length
                  ? s.querySelector(a.el)
                  : e).length
                ? e[0]
                : e).classList.add(
              l.isHorizontal() ? a.horizontalClass : a.verticalClass
            ),
              e &&
                ((t = e.querySelector(F(l.params.scrollbar.dragClass))) ||
                  ((t = P("div", l.params.scrollbar.dragClass)), e.append(t))),
              Object.assign(i, { el: e, dragEl: t }),
              a.draggable && l.params.scrollbar.el && l.scrollbar.el && y("on"),
              e &&
                e.classList[l.enabled ? "remove" : "add"](
                  ...T(l.params.scrollbar.lockClass)
                );
          }
        }
        function E() {
          var e = l.params.scrollbar,
            t = l.scrollbar.el;
          t &&
            t.classList.remove(
              ...T(l.isHorizontal() ? e.horizontalClass : e.verticalClass)
            ),
            l.params.scrollbar.el && l.scrollbar.el && y("off");
        }
        t({
          scrollbar: {
            el: null,
            dragSize: "auto",
            hide: !1,
            draggable: !1,
            snapOnRelease: !0,
            lockClass: "swiper-scrollbar-lock",
            dragClass: "swiper-scrollbar-drag",
            scrollbarDisabledClass: "swiper-scrollbar-disabled",
            horizontalClass: "swiper-scrollbar-horizontal",
            verticalClass: "swiper-scrollbar-vertical",
          },
        }),
          (l.scrollbar = { el: null, dragEl: null }),
          i("changeDirection", () => {
            if (l.scrollbar && l.scrollbar.el) {
              let t = l.params.scrollbar;
              var e = l.scrollbar.el;
              (e = I(e)).forEach((e) => {
                e.classList.remove(t.horizontalClass, t.verticalClass),
                  e.classList.add(
                    l.isHorizontal() ? t.horizontalClass : t.verticalClass
                  );
              });
            }
          }),
          i("init", () => {
            (!1 === l.params.scrollbar.enabled ? x : (_(), m(), a))();
          }),
          i("update resize observerUpdate lock unlock changeDirection", () => {
            m();
          }),
          i("setTranslate", () => {
            a();
          }),
          i("setTransition", (e, t) => {
            (t = t),
              l.params.scrollbar.el &&
                l.scrollbar.el &&
                (l.scrollbar.dragEl.style.transitionDuration = t + "ms");
          }),
          i("enable disable", () => {
            var e = l.scrollbar.el;
            e &&
              e.classList[l.enabled ? "remove" : "add"](
                ...T(l.params.scrollbar.lockClass)
              );
          }),
          i("destroy", () => {
            E();
          });
        let x = () => {
          l.el.classList.add(...T(l.params.scrollbar.scrollbarDisabledClass)),
            l.scrollbar.el &&
              l.scrollbar.el.classList.add(
                ...T(l.params.scrollbar.scrollbarDisabledClass)
              ),
            E();
        };
        Object.assign(l.scrollbar, {
          enable: () => {
            l.el.classList.remove(
              ...T(l.params.scrollbar.scrollbarDisabledClass)
            ),
              l.scrollbar.el &&
                l.scrollbar.el.classList.remove(
                  ...T(l.params.scrollbar.scrollbarDisabledClass)
                ),
              _(),
              m(),
              a();
          },
          disable: x,
          updateSize: m,
          setTranslate: a,
          init: _,
          destroy: E,
        });
      },
      function (e) {
        let { swiper: c, extendParams: t, on: i } = e,
          r =
            (t({ parallax: { enabled: !1 } }),
            "[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]"),
          n = (t, i) => {
            var e = c.rtl,
              e = e ? -1 : 1,
              s = t.getAttribute("data-swiper-parallax") || "0";
            let a = t.getAttribute("data-swiper-parallax-x"),
              r = t.getAttribute("data-swiper-parallax-y");
            var n = t.getAttribute("data-swiper-parallax-scale"),
              o = t.getAttribute("data-swiper-parallax-opacity"),
              l = t.getAttribute("data-swiper-parallax-rotate");
            if (
              (a || r
                ? ((a = a || "0"), (r = r || "0"))
                : c.isHorizontal()
                ? ((a = s), (r = "0"))
                : ((r = s), (a = "0")),
              (a =
                0 <= a.indexOf("%")
                  ? parseInt(a, 10) * i * e + "%"
                  : a * i * e + "px"),
              (r =
                0 <= r.indexOf("%") ? parseInt(r, 10) * i + "%" : r * i + "px"),
              null != o)
            ) {
              let e = o - (o - 1) * (1 - Math.abs(i));
              t.style.opacity = e;
            }
            let d = `translate3d(${a}, ${r}, 0px)`;
            null != n && (d += ` scale(${n - (n - 1) * (1 - Math.abs(i))})`),
              l && null != l && (d += ` rotate(${l * i * -1}deg)`),
              (t.style.transform = d);
          },
          s = () => {
            let { el: e, slides: t, progress: s, snapGrid: a } = c,
              i = H(e, r);
            c.isElement && i.push(...H(c.hostEl, r)),
              i.forEach((e) => {
                n(e, s);
              }),
              t.forEach((e, t) => {
                let i = e.progress;
                1 < c.params.slidesPerGroup &&
                  "auto" !== c.params.slidesPerView &&
                  (i += Math.ceil(t / 2) - s * (a.length - 1)),
                  (i = Math.min(Math.max(i, -1), 1)),
                  e
                    .querySelectorAll(r + ", [data-swiper-parallax-rotate]")
                    .forEach((e) => {
                      n(e, i);
                    });
              });
          };
        i("beforeInit", () => {
          c.params.parallax.enabled &&
            ((c.params.watchSlidesProgress = !0),
            (c.originalParams.watchSlidesProgress = !0));
        }),
          i("init", () => {
            c.params.parallax.enabled && s();
          }),
          i("setTranslate", () => {
            c.params.parallax.enabled && s();
          }),
          i("setTransition", (e, t) => {
            var i, s;
            c.params.parallax.enabled &&
              (({ el: t, hostEl: s } =
                (void 0 === (i = t) && (i = c.params.speed), c)),
              (t = [...t.querySelectorAll(r)]),
              c.isElement && t.push(...s.querySelectorAll(r)),
              t.forEach((e) => {
                let t =
                  parseInt(
                    e.getAttribute("data-swiper-parallax-duration"),
                    10
                  ) || i;
                0 === i && (t = 0), (e.style.transitionDuration = t + "ms");
              }));
          });
      },
      function (e) {
        let { swiper: x, extendParams: t, on: i, emit: s } = e,
          T = N(),
          S =
            (t({
              zoom: {
                enabled: !1,
                limitToOriginalSize: !1,
                maxRatio: 3,
                minRatio: 1,
                panOnMouseMove: !1,
                toggle: !0,
                containerClass: "swiper-zoom-container",
                zoomedSlideClass: "swiper-slide-zoomed",
              },
            }),
            (x.zoom = { enabled: !1 }),
            1),
          r = !1,
          l = !1,
          d = { x: 0, y: 0 },
          c = -3,
          a,
          n,
          o = [],
          M = {
            originX: 0,
            originY: 0,
            slideEl: void 0,
            slideWidth: void 0,
            slideHeight: void 0,
            imageEl: void 0,
            imageWrapEl: void 0,
            maxRatio: 3,
          },
          C = {
            isTouched: void 0,
            isMoved: void 0,
            currentX: void 0,
            currentY: void 0,
            minX: void 0,
            minY: void 0,
            maxX: void 0,
            maxY: void 0,
            width: void 0,
            height: void 0,
            startX: void 0,
            startY: void 0,
            touchesStart: {},
            touchesCurrent: {},
          },
          p = {
            x: void 0,
            y: void 0,
            prevPositionX: void 0,
            prevPositionY: void 0,
            prevTime: void 0,
          },
          u,
          h = 1;
        function m() {
          var e, t, i, s;
          return o.length < 2
            ? 1
            : ((e = o[0].pageX),
              (t = o[0].pageY),
              (i = o[1].pageX),
              (s = o[1].pageY),
              Math.sqrt((i - e) ** 2 + (s - t) ** 2));
        }
        function A() {
          let e = x.params.zoom,
            t = M.imageWrapEl.getAttribute("data-swiper-zoom") || e.maxRatio;
          if (e.limitToOriginalSize && M.imageEl && M.imageEl.naturalWidth) {
            let e = M.imageEl.naturalWidth / M.imageEl.offsetWidth;
            return Math.min(e, t);
          }
          return t;
        }
        function f(t) {
          var e = x.isElement ? "swiper-slide" : "." + x.params.slideClass;
          return (
            t.target.matches(e) ||
            0 < x.slides.filter((e) => e.contains(t.target)).length
          );
        }
        function g(t) {
          var e = "." + x.params.zoom.containerClass;
          return (
            t.target.matches(e) ||
            0 <
              [...x.hostEl.querySelectorAll(e)].filter((e) =>
                e.contains(t.target)
              ).length
          );
        }
        function v(t) {
          if (("mouse" === t.pointerType && o.splice(0, o.length), f(t))) {
            var i = x.params.zoom;
            if (((a = !1), (n = !1), o.push(t), !(o.length < 2))) {
              if (((a = !0), (M.scaleStart = m()), !M.slideEl)) {
                (M.slideEl = t.target.closest(
                  `.${x.params.slideClass}, swiper-slide`
                )),
                  M.slideEl || (M.slideEl = x.slides[x.activeIndex]);
                let e = M.slideEl.querySelector("." + i.containerClass);
                if (
                  ((e =
                    e &&
                    e.querySelectorAll(
                      "picture, img, svg, canvas, .swiper-zoom-target"
                    )[0]),
                  (M.imageEl = e),
                  (M.imageWrapEl = e
                    ? B(M.imageEl, "." + i.containerClass)[0]
                    : void 0),
                  !M.imageWrapEl)
                )
                  return void (M.imageEl = void 0);
                M.maxRatio = A();
              }
              if (M.imageEl) {
                let [e, t] =
                  o.length < 2
                    ? { x: null, y: null }
                    : ((i = M.imageEl.getBoundingClientRect()),
                      [
                        (o[0].pageX +
                          (o[1].pageX - o[0].pageX) / 2 -
                          i.x -
                          T.scrollX) /
                          S,
                        (o[0].pageY +
                          (o[1].pageY - o[0].pageY) / 2 -
                          i.y -
                          T.scrollY) /
                          S,
                      ]);
                (M.originX = e),
                  (M.originY = t),
                  (M.imageEl.style.transitionDuration = "0ms");
              }
              r = !0;
            }
          }
        }
        function b(t) {
          var e, i, s;
          f(t) &&
            ((e = x.params.zoom),
            (i = x.zoom),
            0 <= (s = o.findIndex((e) => e.pointerId === t.pointerId)) &&
              (o[s] = t),
            o.length < 2 ||
              ((n = !0),
              (M.scaleMove = m()),
              M.imageEl &&
                ((i.scale = (M.scaleMove / M.scaleStart) * S),
                i.scale > M.maxRatio &&
                  (i.scale =
                    M.maxRatio - 1 + (i.scale - M.maxRatio + 1) ** 0.5),
                i.scale < e.minRatio &&
                  (i.scale =
                    e.minRatio + 1 - (e.minRatio - i.scale + 1) ** 0.5),
                (M.imageEl.style.transform = `translate3d(0,0,0) scale(${i.scale})`))));
        }
        function w(t) {
          var e, i, s;
          !f(t) ||
            ("mouse" === t.pointerType && "pointerout" === t.type) ||
            ((e = x.params.zoom),
            (i = x.zoom),
            0 <= (s = o.findIndex((e) => e.pointerId === t.pointerId)) &&
              o.splice(s, 1),
            a &&
              n &&
              ((a = !1), (n = !1), M.imageEl) &&
              ((i.scale = Math.max(Math.min(i.scale, M.maxRatio), e.minRatio)),
              (M.imageEl.style.transitionDuration = x.params.speed + "ms"),
              (M.imageEl.style.transform = `translate3d(0,0,0) scale(${i.scale})`),
              (S = i.scale),
              (r = !1),
              1 < i.scale && M.slideEl
                ? M.slideEl.classList.add("" + e.zoomedSlideClass)
                : i.scale <= 1 &&
                  M.slideEl &&
                  M.slideEl.classList.remove("" + e.zoomedSlideClass),
              1 === i.scale) &&
              ((M.originX = 0), (M.originY = 0), (M.slideEl = void 0)));
        }
        function y() {
          x.touchEventsData.preventTouchMoveFromPointerMove = !1;
        }
        function _(e) {
          var t = "mouse" === e.pointerType && x.params.zoom.panOnMouseMove;
          if (f(e) && g(e)) {
            var i = x.zoom;
            if (M.imageEl)
              if (C.isTouched && M.slideEl)
                if (t) L(e);
                else {
                  C.isMoved ||
                    ((C.width = M.imageEl.offsetWidth || M.imageEl.clientWidth),
                    (C.height =
                      M.imageEl.offsetHeight || M.imageEl.clientHeight),
                    (C.startX = j(M.imageWrapEl, "x") || 0),
                    (C.startY = j(M.imageWrapEl, "y") || 0),
                    (M.slideWidth = M.slideEl.offsetWidth),
                    (M.slideHeight = M.slideEl.offsetHeight),
                    (M.imageWrapEl.style.transitionDuration = "0ms"));
                  var s = C.width * i.scale,
                    a = C.height * i.scale;
                  if (
                    ((C.minX = Math.min(M.slideWidth / 2 - s / 2, 0)),
                    (C.maxX = -C.minX),
                    (C.minY = Math.min(M.slideHeight / 2 - a / 2, 0)),
                    (C.maxY = -C.minY),
                    (C.touchesCurrent.x = (0 < o.length ? o[0] : e).pageX),
                    (C.touchesCurrent.y = (0 < o.length ? o[0] : e).pageY),
                    5 <
                      Math.max(
                        Math.abs(C.touchesCurrent.x - C.touchesStart.x),
                        Math.abs(C.touchesCurrent.y - C.touchesStart.y)
                      ) && (x.allowClick = !1),
                    !C.isMoved && !r)
                  ) {
                    if (
                      x.isHorizontal() &&
                      ((Math.floor(C.minX) === Math.floor(C.startX) &&
                        C.touchesCurrent.x < C.touchesStart.x) ||
                        (Math.floor(C.maxX) === Math.floor(C.startX) &&
                          C.touchesCurrent.x > C.touchesStart.x))
                    )
                      return (C.isTouched = !1), void y();
                    if (
                      !x.isHorizontal() &&
                      ((Math.floor(C.minY) === Math.floor(C.startY) &&
                        C.touchesCurrent.y < C.touchesStart.y) ||
                        (Math.floor(C.maxY) === Math.floor(C.startY) &&
                          C.touchesCurrent.y > C.touchesStart.y))
                    )
                      return (C.isTouched = !1), void y();
                  }
                  e.cancelable && e.preventDefault(),
                    e.stopPropagation(),
                    clearTimeout(u),
                    (x.touchEventsData.preventTouchMoveFromPointerMove = !0),
                    (u = setTimeout(() => {
                      x.destroyed || y();
                    })),
                    (C.isMoved = !0);
                  var s = (i.scale - S) / (M.maxRatio - x.params.zoom.minRatio),
                    { originX: a, originY: i } = M;
                  (C.currentX =
                    C.touchesCurrent.x -
                    C.touchesStart.x +
                    C.startX +
                    s * (C.width - 2 * a)),
                    (C.currentY =
                      C.touchesCurrent.y -
                      C.touchesStart.y +
                      C.startY +
                      s * (C.height - 2 * i)),
                    C.currentX < C.minX &&
                      (C.currentX =
                        C.minX + 1 - (C.minX - C.currentX + 1) ** 0.8),
                    C.currentX > C.maxX &&
                      (C.currentX =
                        C.maxX - 1 + (C.currentX - C.maxX + 1) ** 0.8),
                    C.currentY < C.minY &&
                      (C.currentY =
                        C.minY + 1 - (C.minY - C.currentY + 1) ** 0.8),
                    C.currentY > C.maxY &&
                      (C.currentY =
                        C.maxY - 1 + (C.currentY - C.maxY + 1) ** 0.8),
                    p.prevPositionX || (p.prevPositionX = C.touchesCurrent.x),
                    p.prevPositionY || (p.prevPositionY = C.touchesCurrent.y),
                    p.prevTime || (p.prevTime = Date.now()),
                    (p.x =
                      (C.touchesCurrent.x - p.prevPositionX) /
                      (Date.now() - p.prevTime) /
                      2),
                    (p.y =
                      (C.touchesCurrent.y - p.prevPositionY) /
                      (Date.now() - p.prevTime) /
                      2),
                    Math.abs(C.touchesCurrent.x - p.prevPositionX) < 2 &&
                      (p.x = 0),
                    Math.abs(C.touchesCurrent.y - p.prevPositionY) < 2 &&
                      (p.y = 0),
                    (p.prevPositionX = C.touchesCurrent.x),
                    (p.prevPositionY = C.touchesCurrent.y),
                    (p.prevTime = Date.now()),
                    (M.imageWrapEl.style.transform = `translate3d(${C.currentX}px, ${C.currentY}px,0)`);
                }
              else t && L(e);
          }
        }
        function E() {
          var e = x.zoom;
          M.slideEl &&
            x.activeIndex !== x.slides.indexOf(M.slideEl) &&
            (M.imageEl &&
              (M.imageEl.style.transform = "translate3d(0,0,0) scale(1)"),
            M.imageWrapEl &&
              (M.imageWrapEl.style.transform = "translate3d(0,0,0)"),
            M.slideEl.classList.remove("" + x.params.zoom.zoomedSlideClass),
            (e.scale = 1),
            (S = 1),
            (M.slideEl = void 0),
            (M.imageEl = void 0),
            (M.imageWrapEl = void 0),
            (M.originX = 0),
            (M.originY = 0));
        }
        function L(e) {
          var t, i, s, a, r, n, o;
          S <= 1 ||
            !M.imageWrapEl ||
            (f(e) &&
              g(e) &&
              ((t = T.getComputedStyle(M.imageWrapEl).transform),
              (t = new T.DOMMatrix(t)),
              l
                ? ((n = (e.clientX - d.x) * c),
                  (i = (e.clientY - d.y) * c),
                  (o = C.width * S),
                  (r = C.height * S),
                  (s = M.slideWidth),
                  (a = M.slideHeight),
                  (o = -(s = Math.min(s / 2 - o / 2, 0))),
                  (r = -(a = Math.min(a / 2 - r / 2, 0))),
                  (n = Math.max(Math.min(C.startX + n, o), s)),
                  (o = Math.max(Math.min(C.startY + i, r), a)),
                  (M.imageWrapEl.style.transitionDuration = "0ms"),
                  (M.imageWrapEl.style.transform = `translate3d(${n}px, ${o}px, 0)`),
                  (d.x = e.clientX),
                  (d.y = e.clientY),
                  (C.startX = n),
                  (C.startY = o),
                  (C.currentX = n),
                  (C.currentY = o))
                : ((l = !0),
                  (d.x = e.clientX),
                  (d.y = e.clientY),
                  (C.startX = t.e),
                  (C.startY = t.f),
                  (C.width = M.imageEl.offsetWidth || M.imageEl.clientWidth),
                  (C.height = M.imageEl.offsetHeight || M.imageEl.clientHeight),
                  (M.slideWidth = M.slideEl.offsetWidth),
                  (M.slideHeight = M.slideEl.offsetHeight))));
        }
        function k(b) {
          var w = x.zoom,
            y = x.params.zoom;
          if (!M.slideEl) {
            b &&
              b.target &&
              (M.slideEl = b.target.closest(
                `.${x.params.slideClass}, swiper-slide`
              )),
              M.slideEl ||
                (x.params.virtual && x.params.virtual.enabled && x.virtual
                  ? (M.slideEl = H(
                      x.slidesEl,
                      "." + x.params.slideActiveClass
                    )[0])
                  : (M.slideEl = x.slides[x.activeIndex]));
            let e = M.slideEl.querySelector("." + y.containerClass);
            (e =
              e &&
              e.querySelectorAll(
                "picture, img, svg, canvas, .swiper-zoom-target"
              )[0]),
              (M.imageEl = e),
              (M.imageWrapEl = e
                ? B(M.imageEl, "." + y.containerClass)[0]
                : void 0);
          }
          if (M.imageEl && M.imageWrapEl) {
            let e, t, i, s, a, r, n, o, l, d, c, p, u, h, m, f, g, v;
            x.params.cssMode &&
              ((x.wrapperEl.style.overflow = "hidden"),
              (x.wrapperEl.style.touchAction = "none")),
              M.slideEl.classList.add("" + y.zoomedSlideClass),
              (t =
                void 0 === C.touchesStart.x && b
                  ? ((e = b.pageX), b.pageY)
                  : ((e = C.touchesStart.x), C.touchesStart.y));
            var y = S,
              _ = "number" == typeof b ? b : null,
              E =
                (1 === S &&
                  _ &&
                  ((e = void 0),
                  (t = void 0),
                  (C.touchesStart.x = void 0),
                  (C.touchesStart.y = void 0)),
                A());
            (w.scale = _ || E),
              (S = _ || E),
              !b || (1 === S && _)
                ? ((n = 0), (o = 0))
                : ((g = M.slideEl.offsetWidth),
                  (v = M.slideEl.offsetHeight),
                  (i = q(M.slideEl).left + T.scrollX),
                  (s = q(M.slideEl).top + T.scrollY),
                  (a = i + g / 2 - e),
                  (r = s + v / 2 - t),
                  (l = M.imageEl.offsetWidth || M.imageEl.clientWidth),
                  (d = M.imageEl.offsetHeight || M.imageEl.clientHeight),
                  (c = l * w.scale),
                  (p = d * w.scale),
                  (m = -(u = Math.min(g / 2 - c / 2, 0))),
                  (f = -(h = Math.min(v / 2 - p / 2, 0))),
                  (o =
                    0 < y &&
                    _ &&
                    "number" == typeof C.currentX &&
                    "number" == typeof C.currentY
                      ? ((n = (C.currentX * w.scale) / y),
                        (C.currentY * w.scale) / y)
                      : ((n = a * w.scale), r * w.scale)),
                  (n = n < u ? u : n) > m && (n = m),
                  (o = o < h ? h : o) > f && (o = f)),
              _ && 1 === w.scale && ((M.originX = 0), (M.originY = 0)),
              (C.currentX = n),
              (C.currentY = o),
              (M.imageWrapEl.style.transitionDuration = "300ms"),
              (M.imageWrapEl.style.transform = `translate3d(${n}px, ${o}px,0)`),
              (M.imageEl.style.transitionDuration = "300ms"),
              (M.imageEl.style.transform = `translate3d(0,0,0) scale(${w.scale})`);
          }
        }
        function O() {
          var e = x.zoom,
            t = x.params.zoom;
          if (!M.slideEl) {
            x.params.virtual && x.params.virtual.enabled && x.virtual
              ? (M.slideEl = H(x.slidesEl, "." + x.params.slideActiveClass)[0])
              : (M.slideEl = x.slides[x.activeIndex]);
            let e = M.slideEl.querySelector("." + t.containerClass);
            (e =
              e &&
              e.querySelectorAll(
                "picture, img, svg, canvas, .swiper-zoom-target"
              )[0]),
              (M.imageEl = e),
              (M.imageWrapEl = e
                ? B(M.imageEl, "." + t.containerClass)[0]
                : void 0);
          }
          M.imageEl &&
            M.imageWrapEl &&
            (x.params.cssMode &&
              ((x.wrapperEl.style.overflow = ""),
              (x.wrapperEl.style.touchAction = "")),
            (e.scale = 1),
            (S = 1),
            (C.currentX = void 0),
            (C.currentY = void 0),
            (C.touchesStart.x = void 0),
            (C.touchesStart.y = void 0),
            (M.imageWrapEl.style.transitionDuration = "300ms"),
            (M.imageWrapEl.style.transform = "translate3d(0,0,0)"),
            (M.imageEl.style.transitionDuration = "300ms"),
            (M.imageEl.style.transform = "translate3d(0,0,0) scale(1)"),
            M.slideEl.classList.remove("" + t.zoomedSlideClass),
            (M.slideEl = void 0),
            (M.originX = 0),
            (M.originY = 0),
            x.params.zoom.panOnMouseMove) &&
            ((d = { x: 0, y: 0 }), l) &&
            ((l = !1), (C.startX = 0), (C.startY = 0));
        }
        function P(e) {
          var t = x.zoom;
          t.scale && 1 !== t.scale ? O() : k(e);
        }
        function I() {
          return {
            passiveListener: !!x.params.passiveListeners && {
              passive: !0,
              capture: !1,
            },
            activeListenerWithCapture: !x.params.passiveListeners || {
              passive: !1,
              capture: !0,
            },
          };
        }
        function D() {
          var i = x.zoom;
          if (!i.enabled) {
            i.enabled = !0;
            let { passiveListener: t, activeListenerWithCapture: e } = I();
            x.wrapperEl.addEventListener("pointerdown", v, t),
              x.wrapperEl.addEventListener("pointermove", b, e),
              ["pointerup", "pointercancel", "pointerout"].forEach((e) => {
                x.wrapperEl.addEventListener(e, w, t);
              }),
              x.wrapperEl.addEventListener("pointermove", _, e);
          }
        }
        function z() {
          var i = x.zoom;
          if (i.enabled) {
            i.enabled = !1;
            let { passiveListener: t, activeListenerWithCapture: e } = I();
            x.wrapperEl.removeEventListener("pointerdown", v, t),
              x.wrapperEl.removeEventListener("pointermove", b, e),
              ["pointerup", "pointercancel", "pointerout"].forEach((e) => {
                x.wrapperEl.removeEventListener(e, w, t);
              }),
              x.wrapperEl.removeEventListener("pointermove", _, e);
          }
        }
        Object.defineProperty(x.zoom, "scale", {
          get: () => h,
          set(e) {
            var t, i;
            h !== e &&
              ((t = M.imageEl), (i = M.slideEl), s("zoomChange", e, t, i)),
              (h = e);
          },
        }),
          i("init", () => {
            x.params.zoom.enabled && D();
          }),
          i("destroy", () => {
            z();
          }),
          i("touchStart", (e, t) => {
            var i;
            x.zoom.enabled &&
              ((t = t), (i = x.device), M.imageEl) &&
              !C.isTouched &&
              (i.android && t.cancelable && t.preventDefault(),
              (C.isTouched = !0),
              (i = 0 < o.length ? o[0] : t),
              (C.touchesStart.x = i.pageX),
              (C.touchesStart.y = i.pageY));
          }),
          i("touchEnd", (e, t) => {
            if (x.zoom.enabled) {
              var i = x.zoom;
              if (((o.length = 0), M.imageEl)) {
                if (!C.isTouched || !C.isMoved)
                  return void ((C.isTouched = !1), (C.isMoved = !1));
                (C.isTouched = !1), (C.isMoved = !1);
                let e = 300,
                  t = 300;
                var s = p.x * e,
                  s = C.currentX + s,
                  a = p.y * t,
                  a = C.currentY + a,
                  r =
                    (0 !== p.x && (e = Math.abs((s - C.currentX) / p.x)),
                    0 !== p.y && (t = Math.abs((a - C.currentY) / p.y)),
                    Math.max(e, t)),
                  s = ((C.currentX = s), (C.currentY = a), C.width * i.scale),
                  a = C.height * i.scale;
                (C.minX = Math.min(M.slideWidth / 2 - s / 2, 0)),
                  (C.maxX = -C.minX),
                  (C.minY = Math.min(M.slideHeight / 2 - a / 2, 0)),
                  (C.maxY = -C.minY),
                  (C.currentX = Math.max(Math.min(C.currentX, C.maxX), C.minX)),
                  (C.currentY = Math.max(Math.min(C.currentY, C.maxY), C.minY)),
                  (M.imageWrapEl.style.transitionDuration = r + "ms"),
                  (M.imageWrapEl.style.transform = `translate3d(${C.currentX}px, ${C.currentY}px,0)`);
              }
            }
          }),
          i("doubleTap", (e, t) => {
            !x.animating &&
              x.params.zoom.enabled &&
              x.zoom.enabled &&
              x.params.zoom.toggle &&
              P(t);
          }),
          i("transitionEnd", () => {
            x.zoom.enabled && x.params.zoom.enabled && E();
          }),
          i("slideChange", () => {
            x.zoom.enabled && x.params.zoom.enabled && x.params.cssMode && E();
          }),
          Object.assign(x.zoom, {
            enable: D,
            disable: z,
            in: k,
            out: O,
            toggle: P,
          });
      },
      function (e) {
        let { swiper: o, extendParams: t, on: i } = e;
        function l(e, t) {
          let i = (() => {
              let i, s, a;
              return (e, t) => {
                for (s = -1, i = e.length; 1 < i - s; )
                  e[(a = (i + s) >> 1)] <= t ? (s = a) : (i = a);
                return i;
              };
            })(),
            s,
            a;
          return (
            (this.x = e),
            (this.y = t),
            (this.lastIndex = e.length - 1),
            (this.interpolate = function (e) {
              return e
                ? ((a = i(this.x, e)),
                  (s = a - 1),
                  ((e - this.x[s]) * (this.y[a] - this.y[s])) /
                    (this.x[a] - this.x[s]) +
                    this.y[s])
                : 0;
            }),
            this
          );
        }
        function s() {
          o.controller.control &&
            o.controller.spline &&
            ((o.controller.spline = void 0), delete o.controller.spline);
        }
        t({ controller: { control: void 0, inverse: !1, by: "slide" } }),
          (o.controller = { control: void 0 }),
          i("beforeInit", () => {
            "undefined" != typeof window &&
            ("string" == typeof o.params.controller.control ||
              o.params.controller.control instanceof HTMLElement)
              ? ("string" == typeof o.params.controller.control
                  ? [...document.querySelectorAll(o.params.controller.control)]
                  : [o.params.controller.control]
                ).forEach((s) => {
                  if (
                    (o.controller.control || (o.controller.control = []),
                    s && s.swiper)
                  )
                    o.controller.control.push(s.swiper);
                  else if (s) {
                    let t = o.params.eventsPrefix + "init",
                      i = (e) => {
                        o.controller.control.push(e.detail[0]),
                          o.update(),
                          s.removeEventListener(t, i);
                      };
                    s.addEventListener(t, i);
                  }
                })
              : (o.controller.control = o.params.controller.control);
          }),
          i("update", () => {
            s();
          }),
          i("resize", () => {
            s();
          }),
          i("observerUpdate", () => {
            s();
          }),
          i("setTranslate", (e, t, i) => {
            o.controller.control &&
              !o.controller.control.destroyed &&
              o.controller.setTranslate(t, i);
          }),
          i("setTransition", (e, t, i) => {
            o.controller.control &&
              !o.controller.control.destroyed &&
              o.controller.setTransition(t, i);
          }),
          Object.assign(o.controller, {
            setTranslate: function (e, t) {
              var i = o.controller.control;
              let s, a;
              var r = o.constructor;
              function n(e) {
                var t, i;
                e.destroyed ||
                  ((t = o.rtlTranslate ? -o.translate : o.translate),
                  "slide" === o.params.controller.by &&
                    ((i = e),
                    (o.controller.spline = o.params.loop
                      ? new l(o.slidesGrid, i.slidesGrid)
                      : new l(o.snapGrid, i.snapGrid)),
                    (a = -o.controller.spline.interpolate(-t))),
                  (a && "container" !== o.params.controller.by) ||
                    ((s =
                      (e.maxTranslate() - e.minTranslate()) /
                      (o.maxTranslate() - o.minTranslate())),
                    (!Number.isNaN(s) && Number.isFinite(s)) || (s = 1),
                    (a = (t - o.minTranslate()) * s + e.minTranslate())),
                  o.params.controller.inverse && (a = e.maxTranslate() - a),
                  e.updateProgress(a),
                  e.setTranslate(a, o),
                  e.updateActiveIndex(),
                  e.updateSlidesClasses());
              }
              if (Array.isArray(i))
                for (let e = 0; e < i.length; e += 1)
                  i[e] !== t && i[e] instanceof r && n(i[e]);
              else i instanceof r && t !== i && n(i);
            },
            setTransition: function (t, e) {
              let i = o.constructor,
                s = o.controller.control,
                a;
              function r(e) {
                e.destroyed ||
                  (e.setTransition(t, o),
                  0 !== t &&
                    (e.transitionStart(),
                    e.params.autoHeight &&
                      S(() => {
                        e.updateAutoHeight();
                      }),
                    f(e.wrapperEl, () => {
                      s && e.transitionEnd();
                    })));
              }
              if (Array.isArray(s))
                for (a = 0; a < s.length; a += 1)
                  s[a] !== e && s[a] instanceof i && r(s[a]);
              else s instanceof i && e !== s && r(s);
            },
          });
      },
      function (e) {
        let { swiper: o, extendParams: t, on: i } = e;
        t({
          a11y: {
            enabled: !0,
            notificationClass: "swiper-notification",
            prevSlideMessage: "Previous slide",
            nextSlideMessage: "Next slide",
            firstSlideMessage: "This is the first slide",
            lastSlideMessage: "This is the last slide",
            paginationBulletMessage: "Go to slide {{index}}",
            slideLabelMessage: "{{index}} / {{slidesLength}}",
            containerMessage: null,
            containerRoleDescriptionMessage: null,
            containerRole: null,
            itemRoleDescriptionMessage: null,
            slideRole: "group",
            id: null,
            scrollOnFocus: !0,
          },
        }),
          (o.a11y = { clicked: !1 });
        let a,
          r,
          l = null,
          n = new Date().getTime();
        function s(e) {
          var t = l;
          0 !== t.length && D(t, e);
        }
        function d(e) {
          (e = I(e)).forEach((e) => {
            e.setAttribute("tabIndex", "0");
          });
        }
        function c(e) {
          (e = I(e)).forEach((e) => {
            e.setAttribute("tabIndex", "-1");
          });
        }
        function p(e, t) {
          (e = I(e)).forEach((e) => {
            e.setAttribute("role", t);
          });
        }
        function u(e, t) {
          (e = I(e)).forEach((e) => {
            e.setAttribute("aria-roledescription", t);
          });
        }
        function h(e, t) {
          (e = I(e)).forEach((e) => {
            e.setAttribute("aria-label", t);
          });
        }
        function m(e) {
          (e = I(e)).forEach((e) => {
            e.setAttribute("aria-disabled", !0);
          });
        }
        function f(e) {
          (e = I(e)).forEach((e) => {
            e.setAttribute("aria-disabled", !1);
          });
        }
        function g(e) {
          if (13 === e.keyCode || 32 === e.keyCode) {
            var t = o.params.a11y,
              i = e.target;
            if (
              !o.pagination ||
              !o.pagination.el ||
              (i !== o.pagination.el && !o.pagination.el.contains(e.target)) ||
              e.target.matches(F(o.params.pagination.bulletClass))
            ) {
              if (o.navigation && o.navigation.prevEl && o.navigation.nextEl) {
                let e = I(o.navigation.prevEl);
                I(o.navigation.nextEl).includes(i) &&
                  ((o.isEnd && !o.params.loop) || o.slideNext(),
                  o.isEnd ? s(t.lastSlideMessage) : s(t.nextSlideMessage)),
                  e.includes(i) &&
                    ((o.isBeginning && !o.params.loop) || o.slidePrev(),
                    o.isBeginning
                      ? s(t.firstSlideMessage)
                      : s(t.prevSlideMessage));
              }
              o.pagination &&
                i.matches(F(o.params.pagination.bulletClass)) &&
                i.click();
            }
          }
        }
        function v() {
          return (
            o.pagination && o.pagination.bullets && o.pagination.bullets.length
          );
        }
        function b() {
          return v() && o.params.pagination.clickable;
        }
        let w = (e, t, i) => {
            var s;
            d(e),
              "BUTTON" !== e.tagName &&
                (p(e, "button"), e.addEventListener("keydown", g)),
              h(e, i),
              (s = t),
              I(e).forEach((e) => {
                e.setAttribute("aria-controls", s);
              });
          },
          y = (e) => {
            r && r !== e.target && !r.contains(e.target) && (a = !0),
              (o.a11y.clicked = !0);
          },
          _ = () => {
            (a = !1),
              requestAnimationFrame(() => {
                requestAnimationFrame(() => {
                  o.destroyed || (o.a11y.clicked = !1);
                });
              });
          },
          E = (e) => {
            n = new Date().getTime();
          },
          x = (t) => {
            if (
              !o.a11y.clicked &&
              o.params.a11y.scrollOnFocus &&
              !(new Date().getTime() - n < 100)
            ) {
              let e = t.target.closest(`.${o.params.slideClass}, swiper-slide`);
              var i, s;
              e &&
                o.slides.includes(e) &&
                ((r = e),
                (i = o.slides.indexOf(e) === o.activeIndex),
                (s =
                  o.params.watchSlidesProgress &&
                  o.visibleSlides &&
                  o.visibleSlides.includes(e)),
                i ||
                  s ||
                  (t.sourceCapabilities &&
                    t.sourceCapabilities.firesTouchEvents) ||
                  (o.isHorizontal()
                    ? (o.el.scrollLeft = 0)
                    : (o.el.scrollTop = 0),
                  requestAnimationFrame(() => {
                    a ||
                      (o.params.loop
                        ? o.slideToLoop(
                            o.getSlideIndexWhenGrid(
                              parseInt(
                                e.getAttribute("data-swiper-slide-index")
                              )
                            ),
                            0
                          )
                        : o.slideTo(
                            o.getSlideIndexWhenGrid(o.slides.indexOf(e)),
                            0
                          ),
                      (a = !1));
                  })));
            }
          },
          T = () => {
            let i = o.params.a11y,
              s =
                (i.itemRoleDescriptionMessage &&
                  u(o.slides, i.itemRoleDescriptionMessage),
                i.slideRole && p(o.slides, i.slideRole),
                o.slides.length);
            i.slideLabelMessage &&
              o.slides.forEach((e, t) => {
                t = o.params.loop
                  ? parseInt(e.getAttribute("data-swiper-slide-index"), 10)
                  : t;
                h(
                  e,
                  i.slideLabelMessage
                    .replace(/\{\{index\}\}/, t + 1)
                    .replace(/\{\{slidesLength\}\}/, s)
                );
              });
          };
        i("beforeInit", () => {
          (l = P("span", o.params.a11y.notificationClass)).setAttribute(
            "aria-live",
            "assertive"
          ),
            l.setAttribute("aria-atomic", "true");
        }),
          i("afterInit", () => {
            o.params.a11y.enabled &&
              (() => {
                let t = o.params.a11y;
                o.el.append(l);
                var e = o.el;
                t.containerRoleDescriptionMessage &&
                  u(e, t.containerRoleDescriptionMessage),
                  t.containerMessage && h(e, t.containerMessage),
                  t.containerRole && p(e, t.containerRole);
                let i = o.wrapperEl,
                  s =
                    t.id ||
                    i.getAttribute("id") ||
                    "swiper-wrapper-" +
                      "x"
                        .repeat((e = void 0 === (e = 16) ? 16 : e))
                        .replace(/x/g, () =>
                          Math.round(16 * Math.random()).toString(16)
                        );
                var a,
                  e =
                    o.params.autoplay && o.params.autoplay.enabled
                      ? "off"
                      : "polite",
                  r = s,
                  { nextEl: e, prevEl: n } =
                    (I(i).forEach((e) => {
                      e.setAttribute("id", r);
                    }),
                    i,
                    (a = e),
                    I(i).forEach((e) => {
                      e.setAttribute("aria-live", a);
                    }),
                    T(),
                    o.navigation || {}),
                  e = I(e),
                  n = I(n);
                e && e.forEach((e) => w(e, s, t.nextSlideMessage)),
                  n && n.forEach((e) => w(e, s, t.prevSlideMessage)),
                  b() &&
                    I(o.pagination.el).forEach((e) => {
                      e.addEventListener("keydown", g);
                    }),
                  L().addEventListener("visibilitychange", E),
                  o.el.addEventListener("focus", x, !0),
                  o.el.addEventListener("focus", x, !0),
                  o.el.addEventListener("pointerdown", y, !0),
                  o.el.addEventListener("pointerup", _, !0);
              })();
          }),
          i(
            "slidesLengthChange snapGridLengthChange slidesGridLengthChange",
            () => {
              o.params.a11y.enabled && T();
            }
          ),
          i("fromEdge toEdge afterInit lock unlock", () => {
            var e, t;
            o.params.a11y.enabled &&
              !o.params.loop &&
              !o.params.rewind &&
              o.navigation &&
              (({ nextEl: e, prevEl: t } = o.navigation),
              t && (o.isBeginning ? (m(t), c) : (f(t), d))(t),
              e) &&
              (o.isEnd ? (m(e), c) : (f(e), d))(e);
          }),
          i("paginationUpdate", () => {
            if (o.params.a11y.enabled) {
              let t = o.params.a11y;
              v() &&
                o.pagination.bullets.forEach((e) => {
                  o.params.pagination.clickable &&
                    (d(e),
                    o.params.pagination.renderBullet ||
                      (p(e, "button"),
                      h(
                        e,
                        t.paginationBulletMessage.replace(
                          /\{\{index\}\}/,
                          C(e) + 1
                        )
                      ))),
                    e.matches(F(o.params.pagination.bulletActiveClass))
                      ? e.setAttribute("aria-current", "true")
                      : e.removeAttribute("aria-current");
                });
            }
          }),
          i("destroy", () => {
            var e, t;
            o.params.a11y.enabled &&
              (l && l.remove(),
              ({ nextEl: e, prevEl: t } = o.navigation || {}),
              (e = I(e)),
              (t = I(t)),
              e && e.forEach((e) => e.removeEventListener("keydown", g)),
              t && t.forEach((e) => e.removeEventListener("keydown", g)),
              b() &&
                I(o.pagination.el).forEach((e) => {
                  e.removeEventListener("keydown", g);
                }),
              L().removeEventListener("visibilitychange", E),
              o.el) &&
              "string" != typeof o.el &&
              (o.el.removeEventListener("focus", x, !0),
              o.el.removeEventListener("pointerdown", y, !0),
              o.el.removeEventListener("pointerup", _, !0));
          });
      },
      function (e) {
        let { swiper: n, extendParams: t, on: i } = e,
          r =
            (t({
              history: {
                enabled: !1,
                root: "",
                replaceState: !1,
                key: "slides",
                keepQuery: !1,
              },
            }),
            !1),
          s = {},
          o = (e) =>
            e
              .toString()
              .replace(/\s+/g, "-")
              .replace(/[^\w-]+/g, "")
              .replace(/--+/g, "-")
              .replace(/^-+/, "")
              .replace(/-+$/, ""),
          a = (e) => {
            var t = N(),
              e = (e ? new URL(e) : t.location).pathname
                .slice(1)
                .split("/")
                .filter((e) => "" !== e),
              t = e.length;
            return { key: e[t - 2], value: e[t - 1] };
          },
          l = (i, e) => {
            var s = N();
            if (r && n.params.history.enabled) {
              var a = n.params.url ? new URL(n.params.url) : s.location,
                e =
                  n.virtual && n.params.virtual.enabled
                    ? n.slidesEl.querySelector(
                        `[data-swiper-slide-index="${e}"]`
                      )
                    : n.slides[e];
              let t = o(e.getAttribute("data-history"));
              if (0 < n.params.history.root.length) {
                let e = n.params.history.root;
                "/" === e[e.length - 1] && (e = e.slice(0, e.length - 1)),
                  (t = e + "/" + (i ? i + "/" : "") + t);
              } else a.pathname.includes(i) || (t = (i ? i + "/" : "") + t);
              n.params.history.keepQuery && (t += a.search);
              e = s.history.state;
              (e && e.value === t) ||
                (n.params.history.replaceState
                  ? s.history.replaceState({ value: t }, null, t)
                  : s.history.pushState({ value: t }, null, t));
            }
          },
          d = (i, s, a) => {
            if (s)
              for (let e = 0, t = n.slides.length; e < t; e += 1) {
                var r = n.slides[e];
                if (o(r.getAttribute("data-history")) === s) {
                  let e = n.getSlideIndex(r);
                  n.slideTo(e, i, a);
                }
              }
            else n.slideTo(0, i, a);
          },
          c = () => {
            (s = a(n.params.url)), d(n.params.speed, s.value, !1);
          };
        i("init", () => {
          var e;
          n.params.history.enabled &&
            ((e = N()), n.params.history) &&
            (e.history && e.history.pushState
              ? ((r = !0),
                ((s = a(n.params.url)).key || s.value) &&
                  d(0, s.value, n.params.runCallbacksOnInit),
                n.params.history.replaceState ||
                  e.addEventListener("popstate", c))
              : ((n.params.history.enabled = !1),
                (n.params.hashNavigation.enabled = !0)));
        }),
          i("destroy", () => {
            var e;
            n.params.history.enabled &&
              ((e = N()),
              n.params.history.replaceState ||
                e.removeEventListener("popstate", c));
          }),
          i("transitionEnd _freeModeNoMomentumRelease", () => {
            r && l(n.params.history.key, n.activeIndex);
          }),
          i("slideChange", () => {
            r && n.params.cssMode && l(n.params.history.key, n.activeIndex);
          });
      },
      function (e) {
        let { swiper: i, extendParams: t, emit: s, on: a } = e,
          r = !1,
          n = L(),
          o = N(),
          l =
            (t({
              hashNavigation: {
                enabled: !1,
                replaceState: !1,
                watchState: !1,
                getSlideIndex(e, t) {
                  if (i.virtual && i.params.virtual.enabled) {
                    let e = i.slides.find(
                      (e) => e.getAttribute("data-hash") === t
                    );
                    return e
                      ? parseInt(e.getAttribute("data-swiper-slide-index"), 10)
                      : 0;
                  }
                  return i.getSlideIndex(
                    H(
                      i.slidesEl,
                      `.${i.params.slideClass}[data-hash="${t}"], swiper-slide[data-hash="${t}"]`
                    )[0]
                  );
                },
              },
            }),
            () => {
              s("hashChange");
              let t = n.location.hash.replace("#", ""),
                e =
                  i.virtual && i.params.virtual.enabled
                    ? i.slidesEl.querySelector(
                        `[data-swiper-slide-index="${i.activeIndex}"]`
                      )
                    : i.slides[i.activeIndex];
              if (t !== (e ? e.getAttribute("data-hash") : "")) {
                let e = i.params.hashNavigation.getSlideIndex(i, t);
                void 0 === e || Number.isNaN(e) || i.slideTo(e);
              }
            }),
          d = () => {
            var e;
            r &&
              i.params.hashNavigation.enabled &&
              ((e = (e =
                i.virtual && i.params.virtual.enabled
                  ? i.slidesEl.querySelector(
                      `[data-swiper-slide-index="${i.activeIndex}"]`
                    )
                  : i.slides[i.activeIndex])
                ? e.getAttribute("data-hash") || e.getAttribute("data-history")
                : ""),
              i.params.hashNavigation.replaceState &&
              o.history &&
              o.history.replaceState
                ? o.history.replaceState(null, null, "#" + e || "")
                : (n.location.hash = e || ""),
              s("hashSet"));
          };
        a("init", () => {
          var e;
          !i.params.hashNavigation.enabled ||
            !i.params.hashNavigation.enabled ||
            (i.params.history && i.params.history.enabled) ||
            ((r = !0),
            (e = n.location.hash.replace("#", "")) &&
              ((e = i.params.hashNavigation.getSlideIndex(i, e)),
              i.slideTo(e || 0, 0, i.params.runCallbacksOnInit, !0)),
            i.params.hashNavigation.watchState &&
              o.addEventListener("hashchange", l));
        }),
          a("destroy", () => {
            i.params.hashNavigation.enabled &&
              i.params.hashNavigation.watchState &&
              o.removeEventListener("hashchange", l);
          }),
          a("transitionEnd _freeModeNoMomentumRelease", () => {
            r && d();
          }),
          a("slideChange", () => {
            r && i.params.cssMode && d();
          });
      },
      function (e) {
        let r,
          n,
          { swiper: o, extendParams: t, on: i, emit: l, params: s } = e;
        (o.autoplay = { running: !1, paused: !1, timeLeft: 0 }),
          t({
            autoplay: {
              enabled: !1,
              delay: 3e3,
              waitForTransition: !0,
              disableOnInteraction: !1,
              stopOnLastSlide: !1,
              reverseDirection: !1,
              pauseOnMouseEnter: !1,
            },
          });
        let d,
          a,
          c,
          p,
          u,
          h,
          m,
          f,
          g = s && s.autoplay ? s.autoplay.delay : 3e3,
          v = s && s.autoplay ? s.autoplay.delay : 3e3,
          b = new Date().getTime();
        function w(e) {
          o &&
            !o.destroyed &&
            o.wrapperEl &&
            e.target === o.wrapperEl &&
            (o.wrapperEl.removeEventListener("transitionend", w),
            f || (e.detail && e.detail.bySwiperTouchMove) || S());
        }
        let y = () => {
            var e;
            !o.destroyed &&
              o.autoplay.running &&
              (o.autoplay.paused ? (a = !0) : a && ((v = d), (a = !1)),
              (e = o.autoplay.paused ? d : b + v - new Date().getTime()),
              (o.autoplay.timeLeft = e),
              l("autoplayTimeLeft", e, e / g),
              (n = requestAnimationFrame(() => {
                y();
              })));
          },
          _ = (s) => {
            if (!o.destroyed && o.autoplay.running) {
              cancelAnimationFrame(n), y();
              let e = void 0 === s ? o.params.autoplay.delay : s;
              (g = o.params.autoplay.delay), (v = o.params.autoplay.delay);
              var a = (() => {
                var e =
                  o.virtual && o.params.virtual.enabled
                    ? o.slides.find((e) =>
                        e.classList.contains("swiper-slide-active")
                      )
                    : o.slides[o.activeIndex];
                if (e)
                  return parseInt(e.getAttribute("data-swiper-autoplay"), 10);
              })();
              !Number.isNaN(a) &&
                0 < a &&
                void 0 === s &&
                ((e = a), (g = a), (v = a)),
                (d = e);
              let t = o.params.speed,
                i = () => {
                  o &&
                    !o.destroyed &&
                    (o.params.autoplay.reverseDirection
                      ? !o.isBeginning || o.params.loop || o.params.rewind
                        ? (o.slidePrev(t, !0, !0), l("autoplay"))
                        : o.params.autoplay.stopOnLastSlide ||
                          (o.slideTo(o.slides.length - 1, t, !0, !0),
                          l("autoplay"))
                      : !o.isEnd || o.params.loop || o.params.rewind
                      ? (o.slideNext(t, !0, !0), l("autoplay"))
                      : o.params.autoplay.stopOnLastSlide ||
                        (o.slideTo(0, t, !0, !0), l("autoplay")),
                    o.params.cssMode) &&
                    ((b = new Date().getTime()),
                    requestAnimationFrame(() => {
                      _();
                    }));
                };
              return (
                0 < e
                  ? (clearTimeout(r),
                    (r = setTimeout(() => {
                      i();
                    }, e)))
                  : requestAnimationFrame(() => {
                      i();
                    }),
                e
              );
            }
          },
          E = () => {
            (b = new Date().getTime()),
              (o.autoplay.running = !0),
              _(),
              l("autoplayStart");
          },
          x = () => {
            (o.autoplay.running = !1),
              clearTimeout(r),
              cancelAnimationFrame(n),
              l("autoplayStop");
          },
          T = (e, t) => {
            !o.destroyed &&
              o.autoplay.running &&
              (clearTimeout(r),
              e || (m = !0),
              (e = () => {
                l("autoplayPause"),
                  o.params.autoplay.waitForTransition
                    ? o.wrapperEl.addEventListener("transitionend", w)
                    : S();
              }),
              (o.autoplay.paused = !0),
              t
                ? (h && (d = o.params.autoplay.delay), (h = !1), e())
                : ((t = d || o.params.autoplay.delay),
                  (d = t - (new Date().getTime() - b)),
                  (o.isEnd && d < 0 && !o.params.loop) ||
                    (d < 0 && (d = 0), e())));
          },
          S = () => {
            (o.isEnd && d < 0 && !o.params.loop) ||
              o.destroyed ||
              !o.autoplay.running ||
              ((b = new Date().getTime()),
              m ? ((m = !1), _(d)) : _(),
              (o.autoplay.paused = !1),
              l("autoplayResume"));
          },
          M = () => {
            var e;
            !o.destroyed &&
              o.autoplay.running &&
              ("hidden" === (e = L()).visibilityState && ((m = !0), T(!0)),
              "visible" === e.visibilityState) &&
              S();
          },
          C = (e) => {
            "mouse" === e.pointerType &&
              ((m = !0), (f = !0), o.animating || o.autoplay.paused || T(!0));
          },
          A = (e) => {
            "mouse" === e.pointerType && ((f = !1), o.autoplay.paused) && S();
          };
        i("init", () => {
          o.params.autoplay.enabled &&
            (o.params.autoplay.pauseOnMouseEnter &&
              (o.el.addEventListener("pointerenter", C),
              o.el.addEventListener("pointerleave", A)),
            L().addEventListener("visibilitychange", M),
            E());
        }),
          i("destroy", () => {
            o.el &&
              "string" != typeof o.el &&
              (o.el.removeEventListener("pointerenter", C),
              o.el.removeEventListener("pointerleave", A)),
              L().removeEventListener("visibilitychange", M),
              o.autoplay.running && x();
          }),
          i("_freeModeStaticRelease", () => {
            (p || m) && S();
          }),
          i("_freeModeNoMomentumRelease", () => {
            o.params.autoplay.disableOnInteraction ? x() : T(!0, !0);
          }),
          i("beforeTransitionStart", (e, t, i) => {
            !o.destroyed &&
              o.autoplay.running &&
              (i || !o.params.autoplay.disableOnInteraction ? T(!0, !0) : x());
          }),
          i("sliderFirstMove", () => {
            !o.destroyed &&
              o.autoplay.running &&
              (o.params.autoplay.disableOnInteraction
                ? x()
                : ((c = !0),
                  (p = !1),
                  (m = !1),
                  (u = setTimeout(() => {
                    (m = !0), (p = !0), T(!0);
                  }, 200))));
          }),
          i("touchEnd", () => {
            !o.destroyed &&
              o.autoplay.running &&
              c &&
              (clearTimeout(u),
              clearTimeout(r),
              (c =
                ((p =
                  (o.params.autoplay.disableOnInteraction ||
                    (p && o.params.cssMode && S()),
                  !1)),
                !1)));
          }),
          i("slideChange", () => {
            !o.destroyed && o.autoplay.running && (h = !0);
          }),
          Object.assign(o.autoplay, { start: E, stop: x, pause: T, resume: S });
      },
      function (e) {
        let { swiper: l, extendParams: t, on: i } = e,
          s =
            (t({
              thumbs: {
                swiper: null,
                multipleActiveThumbs: !0,
                autoScrollOffset: 0,
                slideThumbActiveClass: "swiper-slide-thumb-active",
                thumbsContainerClass: "swiper-thumbs",
              },
            }),
            !1),
          a = !1;
        function r() {
          var e,
            t,
            i = l.thumbs.swiper;
          !i ||
            i.destroyed ||
            ((e = i.clickedIndex),
            (t = i.clickedSlide) &&
              t.classList.contains(l.params.thumbs.slideThumbActiveClass)) ||
            (null != e &&
              ((t = i.params.loop
                ? parseInt(
                    i.clickedSlide.getAttribute("data-swiper-slide-index"),
                    10
                  )
                : e),
              l.params.loop ? l.slideToLoop(t) : l.slideTo(t)));
        }
        function n() {
          var e = l.params.thumbs;
          if (s) return !1;
          s = !0;
          var t = l.constructor;
          if (e.swiper instanceof t) {
            if (e.swiper.destroyed) return (s = !1);
            (l.thumbs.swiper = e.swiper),
              Object.assign(l.thumbs.swiper.originalParams, {
                watchSlidesProgress: !0,
                slideToClickedSlide: !1,
              }),
              Object.assign(l.thumbs.swiper.params, {
                watchSlidesProgress: !0,
                slideToClickedSlide: !1,
              }),
              l.thumbs.swiper.update();
          } else
            d(e.swiper) &&
              ((e = Object.assign({}, e.swiper)),
              Object.assign(e, {
                watchSlidesProgress: !0,
                slideToClickedSlide: !1,
              }),
              (l.thumbs.swiper = new t(e)),
              (a = !0));
          return (
            l.thumbs.swiper.el.classList.add(
              l.params.thumbs.thumbsContainerClass
            ),
            l.thumbs.swiper.on("tap", r),
            !0
          );
        }
        function o(s) {
          var a = l.thumbs.swiper;
          if (a && !a.destroyed) {
            var r =
              "auto" === a.params.slidesPerView
                ? a.slidesPerViewDynamic()
                : a.params.slidesPerView;
            let t = 1,
              i = l.params.thumbs.slideThumbActiveClass;
            if (
              (1 < l.params.slidesPerView &&
                !l.params.centeredSlides &&
                (t = l.params.slidesPerView),
              l.params.thumbs.multipleActiveThumbs || (t = 1),
              (t = Math.floor(t)),
              a.slides.forEach((e) => e.classList.remove(i)),
              a.params.loop || (a.params.virtual && a.params.virtual.enabled))
            )
              for (let e = 0; e < t; e += 1)
                H(
                  a.slidesEl,
                  `[data-swiper-slide-index="${l.realIndex + e}"]`
                ).forEach((e) => {
                  e.classList.add(i);
                });
            else
              for (let e = 0; e < t; e += 1)
                a.slides[l.realIndex + e] &&
                  a.slides[l.realIndex + e].classList.add(i);
            var n = l.params.thumbs.autoScrollOffset,
              o = n && !a.params.loop;
            if (l.realIndex !== a.realIndex || o) {
              let e = a.activeIndex,
                t,
                i;
              if (a.params.loop) {
                let e = a.slides.find(
                  (e) =>
                    e.getAttribute("data-swiper-slide-index") ===
                    "" + l.realIndex
                );
                (t = a.slides.indexOf(e)),
                  (i = l.activeIndex > l.previousIndex ? "next" : "prev");
              } else
                (t = l.realIndex), (i = t > l.previousIndex ? "next" : "prev");
              o && (t += "next" === i ? n : -1 * n),
                a.visibleSlidesIndexes &&
                  a.visibleSlidesIndexes.indexOf(t) < 0 &&
                  (a.params.centeredSlides
                    ? (t =
                        t > e
                          ? t - Math.floor(r / 2) + 1
                          : t + Math.floor(r / 2) - 1)
                    : t > e && a.params.slidesPerGroup,
                  a.slideTo(t, s ? 0 : void 0));
            }
          }
        }
        (l.thumbs = { swiper: null }),
          i("beforeInit", () => {
            let a = l.params.thumbs;
            if (a && a.swiper)
              if (
                "string" == typeof a.swiper ||
                a.swiper instanceof HTMLElement
              ) {
                let e = L(),
                  t = () => {
                    l.destroyed ||
                      (() => {
                        let s =
                          "string" == typeof a.swiper
                            ? e.querySelector(a.swiper)
                            : a.swiper;
                        if (s && s.swiper) (a.swiper = s.swiper), n(), o(!0);
                        else if (s) {
                          let t = l.params.eventsPrefix + "init",
                            i = (e) => {
                              (a.swiper = e.detail[0]),
                                s.removeEventListener(t, i),
                                n(),
                                o(!0),
                                a.swiper.update(),
                                l.update();
                            };
                          s.addEventListener(t, i);
                        }
                        return s;
                      })() ||
                      requestAnimationFrame(t);
                  };
                requestAnimationFrame(t);
              } else n(), o(!0);
          }),
          i("slideChange update resize observerUpdate", () => {
            o();
          }),
          i("setTransition", (e, t) => {
            var i = l.thumbs.swiper;
            i && !i.destroyed && i.setTransition(t);
          }),
          i("beforeDestroy", () => {
            var e = l.thumbs.swiper;
            e && !e.destroyed && a && e.destroy();
          }),
          Object.assign(l.thumbs, { init: n, update: o });
      },
      function (e) {
        let { swiper: u, extendParams: t, emit: h, once: m } = e;
        t({
          freeMode: {
            enabled: !1,
            momentum: !0,
            momentumRatio: 1,
            momentumBounce: !0,
            momentumBounceRatio: 1,
            momentumVelocityRatio: 1,
            sticky: !1,
            minimumVelocity: 0.02,
          },
        }),
          Object.assign(u, {
            freeMode: {
              onTouchStart: function () {
                var e;
                u.params.cssMode ||
                  ((e = u.getTranslate()),
                  u.setTranslate(e),
                  u.setTransition(0),
                  (u.touchEventsData.velocities.length = 0),
                  u.freeMode.onTouchEnd({
                    currentPos: u.rtl ? u.translate : -u.translate,
                  }));
              },
              onTouchMove: function () {
                var e, t;
                u.params.cssMode ||
                  (({ touchEventsData: e, touches: t } = u),
                  0 === e.velocities.length &&
                    e.velocities.push({
                      position: t[u.isHorizontal() ? "startX" : "startY"],
                      time: e.touchStartTime,
                    }),
                  e.velocities.push({
                    position: t[u.isHorizontal() ? "currentX" : "currentY"],
                    time: v(),
                  }));
              },
              onTouchEnd: function (p) {
                let t = p.currentPos;
                if (!u.params.cssMode) {
                  let {
                      params: n,
                      wrapperEl: o,
                      rtlTranslate: l,
                      snapGrid: d,
                      touchEventsData: c,
                    } = u,
                    e = v() - c.touchStartTime;
                  if (t < -u.minTranslate()) u.slideTo(u.activeIndex);
                  else if (t > -u.maxTranslate())
                    u.slides.length < d.length
                      ? u.slideTo(d.length - 1)
                      : u.slideTo(u.slides.length - 1);
                  else {
                    if (n.freeMode.momentum) {
                      if (1 < c.velocities.length) {
                        let e = c.velocities.pop(),
                          t = c.velocities.pop(),
                          i = e.position - t.position,
                          s = e.time - t.time;
                        (u.velocity = i / s),
                          (u.velocity /= 2),
                          Math.abs(u.velocity) < n.freeMode.minimumVelocity &&
                            (u.velocity = 0),
                          (150 < s || 300 < v() - e.time) && (u.velocity = 0);
                      } else u.velocity = 0;
                      (u.velocity *= n.freeMode.momentumVelocityRatio),
                        (c.velocities.length = 0);
                      let i = 1e3 * n.freeMode.momentumRatio,
                        e = u.velocity * i,
                        s = u.translate + e;
                      l && (s = -s);
                      let t,
                        a = !1;
                      p =
                        20 *
                        Math.abs(u.velocity) *
                        n.freeMode.momentumBounceRatio;
                      let r;
                      if (s < u.maxTranslate())
                        n.freeMode.momentumBounce
                          ? (s + u.maxTranslate() < -p &&
                              (s = u.maxTranslate() - p),
                            (t = u.maxTranslate()),
                            (a = !0),
                            (c.allowMomentumBounce = !0))
                          : (s = u.maxTranslate()),
                          n.loop && n.centeredSlides && (r = !0);
                      else if (s > u.minTranslate())
                        n.freeMode.momentumBounce
                          ? (s - u.minTranslate() > p &&
                              (s = u.minTranslate() + p),
                            (t = u.minTranslate()),
                            (a = !0),
                            (c.allowMomentumBounce = !0))
                          : (s = u.minTranslate()),
                          n.loop && n.centeredSlides && (r = !0);
                      else if (n.freeMode.sticky) {
                        let t;
                        for (let e = 0; e < d.length; e += 1)
                          if (d[e] > -s) {
                            t = e;
                            break;
                          }
                        s = -(s =
                          Math.abs(d[t] - s) < Math.abs(d[t - 1] - s) ||
                          "next" === u.swipeDirection
                            ? d[t]
                            : d[t - 1]);
                      }
                      if (
                        (r &&
                          m("transitionEnd", () => {
                            u.loopFix();
                          }),
                        0 !== u.velocity)
                      ) {
                        if (
                          ((i = l
                            ? Math.abs((-s - u.translate) / u.velocity)
                            : Math.abs((s - u.translate) / u.velocity)),
                          n.freeMode.sticky)
                        ) {
                          let e = Math.abs((l ? -s : s) - u.translate),
                            t = u.slidesSizesGrid[u.activeIndex];
                          i =
                            e < t
                              ? n.speed
                              : e < 2 * t
                              ? 1.5 * n.speed
                              : 2.5 * n.speed;
                        }
                      } else if (n.freeMode.sticky)
                        return void u.slideToClosest();
                      n.freeMode.momentumBounce && a
                        ? (u.updateProgress(t),
                          u.setTransition(i),
                          u.setTranslate(s),
                          u.transitionStart(!0, u.swipeDirection),
                          (u.animating = !0),
                          f(o, () => {
                            u &&
                              !u.destroyed &&
                              c.allowMomentumBounce &&
                              (h("momentumBounce"),
                              u.setTransition(n.speed),
                              setTimeout(() => {
                                u.setTranslate(t),
                                  f(o, () => {
                                    u && !u.destroyed && u.transitionEnd();
                                  });
                              }, 0));
                          }))
                        : u.velocity
                        ? (h("_freeModeNoMomentumRelease"),
                          u.updateProgress(s),
                          u.setTransition(i),
                          u.setTranslate(s),
                          u.transitionStart(!0, u.swipeDirection),
                          u.animating ||
                            ((u.animating = !0),
                            f(o, () => {
                              u && !u.destroyed && u.transitionEnd();
                            })))
                        : u.updateProgress(s),
                        u.updateActiveIndex(),
                        u.updateSlidesClasses();
                    } else {
                      if (n.freeMode.sticky) return void u.slideToClosest();
                      n.freeMode && h("_freeModeNoMomentumRelease");
                    }
                    (!n.freeMode.momentum || e >= n.longSwipesMs) &&
                      (h("_freeModeStaticRelease"),
                      u.updateProgress(),
                      u.updateActiveIndex(),
                      u.updateSlidesClasses());
                  }
                }
              },
            },
          });
      },
      function (e) {
        let p,
          u,
          h,
          s,
          { swiper: m, extendParams: t, on: i } = e,
          f =
            (t({ grid: { rows: 1, fill: "column" } }),
            () => {
              let e = m.params.spaceBetween;
              return (
                "string" == typeof e && 0 <= e.indexOf("%")
                  ? (e = (parseFloat(e.replace("%", "")) / 100) * m.size)
                  : "string" == typeof e && (e = parseFloat(e)),
                e
              );
            });
        i("init", () => {
          s = m.params.grid && 1 < m.params.grid.rows;
        }),
          i("update", () => {
            var { params: e, el: t } = m,
              i = e.grid && 1 < e.grid.rows;
            s && !i
              ? (t.classList.remove(
                  e.containerModifierClass + "grid",
                  e.containerModifierClass + "grid-column"
                ),
                (h = 1),
                m.emitContainerClasses())
              : !s &&
                i &&
                (t.classList.add(e.containerModifierClass + "grid"),
                "column" === e.grid.fill &&
                  t.classList.add(e.containerModifierClass + "grid-column"),
                m.emitContainerClasses()),
              (s = i);
          }),
          (m.grid = {
            initSlides: (e) => {
              var t = m.params.slidesPerView,
                { rows: i, fill: s } = m.params.grid,
                e = (
                  m.virtual && m.params.virtual.enabled ? m.virtual.slides : e
                ).length;
              (h = Math.floor(e / i)),
                (p = Math.floor(e / i) === e / i ? e : Math.ceil(e / i) * i),
                "auto" !== t && "row" === s && (p = Math.max(p, t * i)),
                (u = p / i);
            },
            unsetSlides: () => {
              m.slides &&
                m.slides.forEach((e) => {
                  e.swiperSlideGridSet &&
                    ((e.style.height = ""),
                    (e.style[m.getDirectionLabel("margin-top")] = ""));
                });
            },
            updateSlide: (s, a, r) => {
              var n = m.params.slidesPerGroup,
                e = f(),
                { rows: o, fill: t } = m.params.grid,
                r = (
                  m.virtual && m.params.virtual.enabled ? m.virtual.slides : r
                ).length;
              let l, d, c;
              if ("row" === t && 1 < n) {
                let e = Math.floor(s / (n * o)),
                  t = s - o * n * e,
                  i = 0 === e ? n : Math.min(Math.ceil((r - e * o * n) / o), n);
                (c = Math.floor(t / i)),
                  (l = (d = t - c * i + e * n) + (c * p) / o),
                  (a.style.order = l);
              } else
                "column" === t
                  ? ((d = Math.floor(s / o)),
                    (c = s - d * o),
                    (d > h || (d === h && c === o - 1)) &&
                      (c += 1) >= o &&
                      ((c = 0), (d += 1)))
                  : ((c = Math.floor(s / u)), (d = s - c * u));
              (a.row = c),
                (a.column = d),
                (a.style.height = `calc((100% - ${(o - 1) * e}px) / ${o})`),
                (a.style[m.getDirectionLabel("margin-top")] =
                  0 !== c ? e && e + "px" : ""),
                (a.swiperSlideGridSet = !0);
            },
            updateWrapperSize: (e, s) => {
              var { centeredSlides: t, roundLengths: a } = m.params,
                i = f(),
                r = m.params.grid.rows;
              if (
                ((m.virtualSize = (e + i) * p),
                (m.virtualSize = Math.ceil(m.virtualSize / r) - i),
                m.params.cssMode ||
                  (m.wrapperEl.style[m.getDirectionLabel("width")] =
                    m.virtualSize + i + "px"),
                t)
              ) {
                let i = [];
                for (let t = 0; t < s.length; t += 1) {
                  let e = s[t];
                  a && (e = Math.floor(e)),
                    s[t] < m.virtualSize + s[0] && i.push(e);
                }
                s.splice(0, s.length), s.push(...i);
              }
            },
          });
      },
      function (e) {
        e = e.swiper;
        Object.assign(e, {
          appendSlide: function (t) {
            let e = this,
              { params: i, slidesEl: s } = e;
            i.loop && e.loopDestroy();
            var a = (e) => {
              var t;
              "string" == typeof e
                ? (D((t = document.createElement("div")), e),
                  s.append(t.children[0]),
                  D(t, ""))
                : s.append(e);
            };
            if ("object" == typeof t && "length" in t)
              for (let e = 0; e < t.length; e += 1) t[e] && a(t[e]);
            else a(t);
            e.recalcSlides(),
              i.loop && e.loopCreate(),
              (i.observer && !e.isElement) || e.update();
          }.bind(e),
          prependSlide: function (t) {
            let e = this,
              { params: i, activeIndex: s, slidesEl: a } = e,
              r = (i.loop && e.loopDestroy(), s + 1);
            var n = (e) => {
              var t;
              "string" == typeof e
                ? (D((t = document.createElement("div")), e),
                  a.prepend(t.children[0]),
                  D(t, ""))
                : a.prepend(e);
            };
            if ("object" == typeof t && "length" in t) {
              for (let e = 0; e < t.length; e += 1) t[e] && n(t[e]);
              r = s + t.length;
            } else n(t);
            e.recalcSlides(),
              i.loop && e.loopCreate(),
              (i.observer && !e.isElement) || e.update(),
              e.slideTo(r, 0, !1);
          }.bind(e),
          addSlide: function (i, t) {
            var s = this,
              { params: a, activeIndex: r, slidesEl: n } = s;
            let o = r;
            if (
              (a.loop &&
                ((o -= s.loopedSlides), s.loopDestroy(), s.recalcSlides()),
              (r = s.slides.length),
              i <= 0)
            )
              s.prependSlide(t);
            else if (r <= i) s.appendSlide(t);
            else {
              let e = o > i ? o + 1 : o;
              var l = [];
              for (let t = r - 1; t >= i; --t) {
                let e = s.slides[t];
                e.remove(), l.unshift(e);
              }
              if ("object" == typeof t && "length" in t) {
                for (let e = 0; e < t.length; e += 1) t[e] && n.append(t[e]);
                e = o > i ? o + t.length : o;
              } else n.append(t);
              for (let e = 0; e < l.length; e += 1) n.append(l[e]);
              s.recalcSlides(),
                a.loop && s.loopCreate(),
                (a.observer && !s.isElement) || s.update(),
                a.loop
                  ? s.slideTo(e + s.loopedSlides, 0, !1)
                  : s.slideTo(e, 0, !1);
            }
          }.bind(e),
          removeSlide: function (t) {
            var i = this,
              { params: e, activeIndex: s } = i;
            let a = s;
            e.loop && ((a -= i.loopedSlides), i.loopDestroy());
            let r,
              n = a;
            if ("object" == typeof t && "length" in t)
              for (let e = 0; e < t.length; e += 1)
                (r = t[e]), i.slides[r] && i.slides[r].remove(), r < n && --n;
            else (r = t), i.slides[r] && i.slides[r].remove(), r < n && --n;
            (n = Math.max(n, 0)),
              i.recalcSlides(),
              e.loop && i.loopCreate(),
              (e.observer && !i.isElement) || i.update(),
              e.loop
                ? i.slideTo(n + i.loopedSlides, 0, !1)
                : i.slideTo(n, 0, !1);
          }.bind(e),
          removeAllSlides: function () {
            var t = [];
            for (let e = 0; e < this.slides.length; e += 1) t.push(e);
            this.removeSlide(t);
          }.bind(e),
        });
      },
      function (e) {
        let { swiper: n, extendParams: t, on: i } = e;
        t({ fadeEffect: { crossFade: !1 } }),
          m({
            effect: "fade",
            swiper: n,
            on: i,
            setTranslate: () => {
              let e = n.slides;
              n.params.fadeEffect;
              for (let s = 0; s < e.length; s += 1) {
                let e = n.slides[s],
                  t = -e.swiperSlideOffset,
                  i = (n.params.virtualTranslate || (t -= n.translate), 0);
                n.isHorizontal() || ((i = t), (t = 0));
                var a = n.params.fadeEffect.crossFade
                    ? Math.max(1 - Math.abs(e.progress), 0)
                    : 1 + Math.min(Math.max(e.progress, -1), 0),
                  r = E(0, e);
                (r.style.opacity = a),
                  (r.style.transform = `translate3d(${t}px, ${i}px, 0px)`);
              }
            },
            setTransition: (t) => {
              var e = n.slides.map((e) => r(e));
              e.forEach((e) => {
                e.style.transitionDuration = t + "ms";
              }),
                s({
                  swiper: n,
                  duration: t,
                  transformElements: e,
                  allSlides: !0,
                });
            },
            overwriteParams: () => ({
              slidesPerView: 1,
              slidesPerGroup: 1,
              watchSlidesProgress: !0,
              spaceBetween: 0,
              virtualTranslate: !n.params.cssMode,
            }),
          });
      },
      function (e) {
        let { swiper: o, extendParams: t, on: i } = e,
          b =
            (t({
              cubeEffect: {
                slideShadows: !0,
                shadow: !0,
                shadowOffset: 20,
                shadowScale: 0.94,
              },
            }),
            (e, t, i) => {
              let s = i
                  ? e.querySelector(".swiper-slide-shadow-left")
                  : e.querySelector(".swiper-slide-shadow-top"),
                a = i
                  ? e.querySelector(".swiper-slide-shadow-right")
                  : e.querySelector(".swiper-slide-shadow-bottom");
              s ||
                ((s = P(
                  "div",
                  (
                    "swiper-slide-shadow-cube swiper-slide-shadow-" +
                    (i ? "left" : "top")
                  ).split(" ")
                )),
                e.append(s)),
                a ||
                  ((a = P(
                    "div",
                    (
                      "swiper-slide-shadow-cube swiper-slide-shadow-" +
                      (i ? "right" : "bottom")
                    ).split(" ")
                  )),
                  e.append(a)),
                s && (s.style.opacity = Math.max(-t, 0)),
                a && (a.style.opacity = Math.max(t, 0));
            });
        m({
          effect: "cube",
          swiper: o,
          on: i,
          setTranslate: () => {
            let {
                el: e,
                wrapperEl: t,
                slides: d,
                width: i,
                height: r,
                rtlTranslate: c,
                size: p,
                browser: s,
              } = o,
              u = _(o),
              h = o.params.cubeEffect,
              m = o.isHorizontal(),
              f = o.virtual && o.params.virtual.enabled,
              n,
              g = 0;
            h.shadow &&
              (m
                ? ((n = o.wrapperEl.querySelector(".swiper-cube-shadow")) ||
                    ((n = P("div", "swiper-cube-shadow")),
                    o.wrapperEl.append(n)),
                  (n.style.height = i + "px"))
                : (n = e.querySelector(".swiper-cube-shadow")) ||
                  ((n = P("div", "swiper-cube-shadow")), e.append(n)));
            for (let l = 0; l < d.length; l += 1) {
              let e = d[l],
                t = l,
                i =
                  90 *
                  (t = f
                    ? parseInt(e.getAttribute("data-swiper-slide-index"), 10)
                    : t),
                s = Math.floor(i / 360),
                a =
                  (c && ((i = -i), (s = Math.floor(-i / 360))),
                  Math.max(Math.min(e.progress, 1), -1)),
                r = 0,
                n = 0,
                o = 0;
              t % 4 == 0
                ? ((r = 4 * -s * p), (o = 0))
                : (t - 1) % 4 == 0
                ? ((r = 0), (o = 4 * -s * p))
                : (t - 2) % 4 == 0
                ? ((r = p + 4 * s * p), (o = p))
                : (t - 3) % 4 == 0 && ((r = -p), (o = 3 * p + 4 * p * s)),
                c && (r = -r),
                m || ((n = r), (r = 0));
              var v = `rotateX(${u(m ? 0 : -i)}deg) rotateY(${u(
                m ? i : 0
              )}deg) translate3d(${r}px, ${n}px, ${o}px)`;
              a <= 1 &&
                -1 < a &&
                ((g = 90 * t + 90 * a), c) &&
                (g = 90 * -t - 90 * a),
                (e.style.transform = v),
                h.slideShadows && b(e, a, m);
            }
            if (
              ((t.style.transformOrigin = `50% 50% -${p / 2}px`),
              (t.style["-webkit-transform-origin"] = `50% 50% -${p / 2}px`),
              h.shadow)
            )
              if (m)
                n.style.transform = `translate3d(0px, ${
                  i / 2 + h.shadowOffset
                }px, ${-i / 2}px) rotateX(89.99deg) rotateZ(0deg) scale(${
                  h.shadowScale
                })`;
              else {
                let e = Math.abs(g) - 90 * Math.floor(Math.abs(g) / 90),
                  t =
                    1.5 -
                    (Math.sin((2 * e * Math.PI) / 360) / 2 +
                      Math.cos((2 * e * Math.PI) / 360) / 2),
                  i = h.shadowScale,
                  s = h.shadowScale / t,
                  a = h.shadowOffset;
                n.style.transform = `scale3d(${i}, 1, ${s}) translate3d(0px, ${
                  r / 2 + a
                }px, ${-r / 2 / s}px) rotateX(-89.99deg)`;
              }
            var a =
              (s.isSafari || s.isWebView) && s.needPerspectiveFix ? -p / 2 : 0;
            (t.style.transform = `translate3d(0px,0,${a}px) rotateX(${u(
              o.isHorizontal() ? 0 : g
            )}deg) rotateY(${u(o.isHorizontal() ? -g : 0)}deg)`),
              t.style.setProperty("--swiper-cube-translate-z", a + "px");
          },
          setTransition: (t) => {
            var { el: i, slides: e } = o;
            if (
              (e.forEach((e) => {
                (e.style.transitionDuration = t + "ms"),
                  e
                    .querySelectorAll(
                      ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                    )
                    .forEach((e) => {
                      e.style.transitionDuration = t + "ms";
                    });
              }),
              o.params.cubeEffect.shadow && !o.isHorizontal())
            ) {
              let e = i.querySelector(".swiper-cube-shadow");
              e && (e.style.transitionDuration = t + "ms");
            }
          },
          recreateShadows: () => {
            let i = o.isHorizontal();
            o.slides.forEach((e) => {
              var t = Math.max(Math.min(e.progress, 1), -1);
              b(e, t, i);
            });
          },
          getEffectParams: () => o.params.cubeEffect,
          perspective: () => !0,
          overwriteParams: () => ({
            slidesPerView: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: !0,
            resistanceRatio: 0,
            spaceBetween: 0,
            centeredSlides: !1,
            virtualTranslate: !0,
          }),
        });
      },
      function (e) {
        let { swiper: u, extendParams: t, on: i } = e,
          h =
            (t({ flipEffect: { slideShadows: !0, limitRotation: !0 } }),
            (e, t) => {
              let i = u.isHorizontal()
                  ? e.querySelector(".swiper-slide-shadow-left")
                  : e.querySelector(".swiper-slide-shadow-top"),
                s = u.isHorizontal()
                  ? e.querySelector(".swiper-slide-shadow-right")
                  : e.querySelector(".swiper-slide-shadow-bottom");
              (i = i || x("flip", e, u.isHorizontal() ? "left" : "top")),
                (s = s || x("flip", e, u.isHorizontal() ? "right" : "bottom")),
                i && (i.style.opacity = Math.max(-t, 0)),
                s && (s.style.opacity = Math.max(t, 0));
            });
        m({
          effect: "flip",
          swiper: u,
          on: i,
          setTranslate: () => {
            var { slides: n, rtlTranslate: o } = u,
              l = u.params.flipEffect,
              d = _(u);
            for (let r = 0; r < n.length; r += 1) {
              var c = n[r];
              let e = c.progress;
              u.params.flipEffect.limitRotation &&
                (e = Math.max(Math.min(c.progress, 1), -1));
              var p = c.swiperSlideOffset;
              let t = -180 * e,
                i = 0,
                s = u.params.cssMode ? -p - u.translate : -p,
                a = 0;
              u.isHorizontal()
                ? o && (t = -t)
                : ((a = s), (s = 0), (i = -t), (t = 0)),
                (c.style.zIndex = -Math.abs(Math.round(e)) + n.length),
                l.slideShadows && h(c, e);
              p = `translate3d(${s}px, ${a}px, 0px) rotateX(${d(
                i
              )}deg) rotateY(${d(t)}deg)`;
              E(0, c).style.transform = p;
            }
          },
          setTransition: (t) => {
            var e = u.slides.map((e) => r(e));
            e.forEach((e) => {
              (e.style.transitionDuration = t + "ms"),
                e
                  .querySelectorAll(
                    ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                  )
                  .forEach((e) => {
                    e.style.transitionDuration = t + "ms";
                  });
            }),
              s({ swiper: u, duration: t, transformElements: e });
          },
          recreateShadows: () => {
            u.params.flipEffect,
              u.slides.forEach((e) => {
                let t = e.progress;
                u.params.flipEffect.limitRotation &&
                  (t = Math.max(Math.min(e.progress, 1), -1)),
                  h(e, t);
              });
          },
          getEffectParams: () => u.params.flipEffect,
          perspective: () => !0,
          overwriteParams: () => ({
            slidesPerView: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: !0,
            spaceBetween: 0,
            virtualTranslate: !u.params.cssMode,
          }),
        });
      },
      function (e) {
        let { swiper: s, extendParams: t, on: i } = e;
        t({
          coverflowEffect: {
            rotate: 50,
            stretch: 0,
            depth: 100,
            scale: 1,
            modifier: 1,
            slideShadows: !0,
          },
        }),
          m({
            effect: "coverflow",
            swiper: s,
            on: i,
            setTranslate: () => {
              let { width: e, height: t, slides: u, slidesSizesGrid: h } = s,
                m = s.params.coverflowEffect,
                f = s.isHorizontal(),
                i = s.translate,
                g = f ? e / 2 - i : t / 2 - i,
                v = f ? m.rotate : -m.rotate,
                b = m.depth,
                w = _(s);
              for (let p = 0, e = u.length; p < e; p += 1) {
                let i = u[p],
                  e = h[p],
                  t = (g - i.swiperSlideOffset - e / 2) / e,
                  s =
                    "function" == typeof m.modifier
                      ? m.modifier(t)
                      : t * m.modifier,
                  a = f ? v * s : 0,
                  r = f ? 0 : v * s,
                  n = -b * Math.abs(s),
                  o = m.stretch,
                  l =
                    ("string" == typeof o &&
                      -1 !== o.indexOf("%") &&
                      (o = (parseFloat(m.stretch) / 100) * e),
                    f ? 0 : o * s),
                  d = f ? o * s : 0,
                  c = 1 - (1 - m.scale) * Math.abs(s);
                Math.abs(d) < 0.001 && (d = 0),
                  Math.abs(l) < 0.001 && (l = 0),
                  Math.abs(n) < 0.001 && (n = 0),
                  Math.abs(a) < 0.001 && (a = 0),
                  Math.abs(r) < 0.001 && (r = 0),
                  Math.abs(c) < 0.001 && (c = 0);
                var y = `translate3d(${d}px,${l}px,${n}px)  rotateX(${w(
                  r
                )}deg) rotateY(${w(a)}deg) scale(${c})`;
                if (
                  ((E(0, i).style.transform = y),
                  (i.style.zIndex = 1 - Math.abs(Math.round(s))),
                  m.slideShadows)
                ) {
                  let e = f
                      ? i.querySelector(".swiper-slide-shadow-left")
                      : i.querySelector(".swiper-slide-shadow-top"),
                    t = f
                      ? i.querySelector(".swiper-slide-shadow-right")
                      : i.querySelector(".swiper-slide-shadow-bottom");
                  (e = e || x("coverflow", i, f ? "left" : "top")),
                    (t = t || x("coverflow", i, f ? "right" : "bottom")),
                    e && (e.style.opacity = 0 < s ? s : 0),
                    t && (t.style.opacity = 0 < -s ? -s : 0);
                }
              }
            },
            setTransition: (t) => {
              s.slides
                .map((e) => r(e))
                .forEach((e) => {
                  (e.style.transitionDuration = t + "ms"),
                    e
                      .querySelectorAll(
                        ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                      )
                      .forEach((e) => {
                        e.style.transitionDuration = t + "ms";
                      });
                });
            },
            perspective: () => !0,
            overwriteParams: () => ({ watchSlidesProgress: !0 }),
          });
      },
      function (e) {
        let { swiper: w, extendParams: t, on: i } = e;
        t({
          creativeEffect: {
            limitProgress: 1,
            shadowPerProgress: !1,
            progressMultiplier: 1,
            perspective: !0,
            prev: {
              translate: [0, 0, 0],
              rotate: [0, 0, 0],
              opacity: 1,
              scale: 1,
            },
            next: {
              translate: [0, 0, 0],
              rotate: [0, 0, 0],
              opacity: 1,
              scale: 1,
            },
          },
        });
        m({
          effect: "creative",
          swiper: w,
          on: i,
          setTranslate: () => {
            let { slides: c, wrapperEl: t, slidesSizesGrid: i } = w,
              p = w.params.creativeEffect,
              u = p.progressMultiplier,
              h = w.params.centeredSlides,
              m = _(w);
            if (h) {
              let e = i[0] / 2 - w.params.slidesOffsetBefore || 0;
              t.style.transform = `translateX(calc(50% - ${e}px))`;
            }
            for (let d = 0; d < c.length; d += 1) {
              let e = c[d],
                t = e.progress,
                s = Math.min(
                  Math.max(e.progress, -p.limitProgress),
                  p.limitProgress
                ),
                i = s,
                a =
                  (h ||
                    (i = Math.min(
                      Math.max(e.originalProgress, -p.limitProgress),
                      p.limitProgress
                    )),
                  e.swiperSlideOffset),
                r = [w.params.cssMode ? -a - w.translate : -a, 0, 0],
                n = [0, 0, 0],
                o = !1,
                l =
                  (w.isHorizontal() || ((r[1] = r[0]), (r[0] = 0)),
                  {
                    translate: [0, 0, 0],
                    rotate: [0, 0, 0],
                    scale: 1,
                    opacity: 1,
                  });
              s < 0
                ? ((l = p.next), (o = !0))
                : 0 < s && ((l = p.prev), (o = !0)),
                r.forEach((e, t) => {
                  r[t] = `calc(${e}px + (${
                    ((e = l.translate[t]), "string" == typeof e ? e : e + "px")
                  } * ${Math.abs(s * u)}))`;
                }),
                n.forEach((e, t) => {
                  var i = l.rotate[t] * Math.abs(s * u);
                  n[t] = i;
                }),
                (e.style.zIndex = -Math.abs(Math.round(t)) + c.length);
              var f = r.join(", "),
                g = `rotateX(${m(n[0])}deg) rotateY(${m(n[1])}deg) rotateZ(${m(
                  n[2]
                )}deg)`,
                v =
                  i < 0
                    ? `scale(${1 + (1 - l.scale) * i * u})`
                    : `scale(${1 - (1 - l.scale) * i * u})`,
                b =
                  i < 0
                    ? 1 + (1 - l.opacity) * i * u
                    : 1 - (1 - l.opacity) * i * u,
                f = `translate3d(${f}) ${g} ` + v;
              if ((o && l.shadow) || !o) {
                let t = e.querySelector(".swiper-slide-shadow");
                if ((t = !t && l.shadow ? x("creative", e) : t)) {
                  let e = p.shadowPerProgress ? s * (1 / p.limitProgress) : s;
                  t.style.opacity = Math.min(Math.max(Math.abs(e), 0), 1);
                }
              }
              g = E(0, e);
              (g.style.transform = f),
                (g.style.opacity = b),
                l.origin && (g.style.transformOrigin = l.origin);
            }
          },
          setTransition: (t) => {
            var e = w.slides.map((e) => r(e));
            e.forEach((e) => {
              (e.style.transitionDuration = t + "ms"),
                e.querySelectorAll(".swiper-slide-shadow").forEach((e) => {
                  e.style.transitionDuration = t + "ms";
                });
            }),
              s({
                swiper: w,
                duration: t,
                transformElements: e,
                allSlides: !0,
              });
          },
          perspective: () => w.params.creativeEffect.perspective,
          overwriteParams: () => ({
            watchSlidesProgress: !0,
            virtualTranslate: !w.params.cssMode,
          }),
        });
      },
      function (e) {
        let { swiper: y, extendParams: t, on: i } = e;
        t({
          cardsEffect: {
            slideShadows: !0,
            rotate: !0,
            perSlideRotate: 2,
            perSlideOffset: 8,
          },
        }),
          m({
            effect: "cards",
            swiper: y,
            on: i,
            setTranslate: () => {
              let { slides: o, activeIndex: l, rtlTranslate: d } = y,
                c = y.params.cardsEffect,
                { startTranslate: p, isTouched: u } = y.touchEventsData,
                h = d ? -y.translate : y.translate;
              for (let n = 0; n < o.length; n += 1) {
                var m = o[n],
                  f = m.progress,
                  g = Math.min(Math.max(f, -4), 4);
                let e = m.swiperSlideOffset,
                  t =
                    (y.params.centeredSlides &&
                      !y.params.cssMode &&
                      (y.wrapperEl.style.transform = `translateX(${y.minTranslate()}px)`),
                    y.params.centeredSlides &&
                      y.params.cssMode &&
                      (e -= o[0].swiperSlideOffset),
                    y.params.cssMode ? -e - y.translate : -e),
                  i = 0;
                var v = -100 * Math.abs(g);
                let s = 1,
                  a = -c.perSlideRotate * g,
                  r = c.perSlideOffset - 0.75 * Math.abs(g);
                var b =
                    y.virtual && y.params.virtual.enabled
                      ? y.virtual.from + n
                      : n,
                  w =
                    (b === l || b === l - 1) &&
                    0 < g &&
                    g < 1 &&
                    (u || y.params.cssMode) &&
                    h < p,
                  b =
                    (b === l || b === l + 1) &&
                    g < 0 &&
                    -1 < g &&
                    (u || y.params.cssMode) &&
                    p < h;
                if (w || b) {
                  let e = (1 - Math.abs((Math.abs(g) - 0.5) / 0.5)) ** 0.5;
                  (a += -28 * g * e),
                    (s += -0.5 * e),
                    (r += 96 * e),
                    (i = -25 * e * Math.abs(g) + "%");
                }
                if (
                  ((t =
                    g < 0
                      ? `calc(${t}px ${d ? "-" : "+"} (${r * Math.abs(g)}%))`
                      : 0 < g
                      ? `calc(${t}px ${d ? "-" : "+"} (-${r * Math.abs(g)}%))`
                      : t + "px"),
                  !y.isHorizontal())
                ) {
                  let e = i;
                  (i = t), (t = e);
                }
                (w = g < 0 ? "" + (1 + (1 - s) * g) : "" + (1 - (1 - s) * g)),
                  (b = `
        translate3d(${t}, ${i}, ${v}px)
        rotateZ(${c.rotate ? (d ? -a : a) : 0}deg)
        scale(${w})
      `);
                if (c.slideShadows) {
                  let e = m.querySelector(".swiper-slide-shadow");
                  (e = e || x("cards", m)) &&
                    (e.style.opacity = Math.min(
                      Math.max((Math.abs(g) - 0.5) / 0.5, 0),
                      1
                    ));
                }
                (m.style.zIndex = -Math.abs(Math.round(f)) + o.length),
                  (E(0, m).style.transform = b);
              }
            },
            setTransition: (t) => {
              var e = y.slides.map((e) => r(e));
              e.forEach((e) => {
                (e.style.transitionDuration = t + "ms"),
                  e.querySelectorAll(".swiper-slide-shadow").forEach((e) => {
                    e.style.transitionDuration = t + "ms";
                  });
              }),
                s({ swiper: y, duration: t, transformElements: e });
            },
            perspective: () => !0,
            overwriteParams: () => ({
              _loopSwapReset: !1,
              watchSlidesProgress: !0,
              loopAdditionalSlides: y.params.cardsEffect.rotate ? 3 : 2,
              centeredSlides: !0,
              virtualTranslate: !y.params.cssMode,
            }),
          });
      },
    ]),
    h
  );
})();
(() => {
  function e() {
    var e = document.querySelector("body"),
      t = document.querySelector("#header");
    (t.classList.contains("scroll-up-sticky") ||
      t.classList.contains("sticky-top") ||
      t.classList.contains("fixed-top")) &&
      (100 < window.scrollY
        ? e.classList.add("scrolled")
        : e.classList.remove("scrolled"));
  }
  document.addEventListener("scroll", e), window.addEventListener("load", e);
  let t = document.querySelector(".mobile-nav-toggle");
  function i() {
    document.querySelector("body").classList.toggle("mobile-nav-active"),
      t.classList.toggle("bi-list"),
      t.classList.toggle("bi-x");
  }
  t && t.addEventListener("click", i),
    document.querySelectorAll("#navmenu a").forEach((e) => {
      e.addEventListener("click", () => {
        document.querySelector(".mobile-nav-active") && i();
      });
    }),
    document.querySelectorAll(".navmenu .toggle-dropdown").forEach((e) => {
      e.addEventListener("click", function (e) {
        e.preventDefault(),
          this.parentNode.classList.toggle("active"),
          this.parentNode.nextElementSibling.classList.toggle(
            "dropdown-active"
          ),
          e.stopImmediatePropagation();
      });
    });
  let s = document.querySelector("#preloader"),
    a =
      (s &&
        window.addEventListener("load", () => {
          s.remove();
        }),
      document.querySelector(".scroll-top"));
  function r() {
    a &&
      (100 < window.scrollY
        ? a.classList.add("active")
        : a.classList.remove("active"));
  }
  a.addEventListener("click", (e) => {
    e.preventDefault(), window.scrollTo({ top: 0, behavior: "smooth" });
  }),
    window.addEventListener("load", r),
    document.addEventListener("scroll", r),
    window.addEventListener("load", function () {
      AOS.init({ duration: 600, easing: "ease-in-out", once: !0, mirror: !1 });
    }),
    new PureCounter(),
    window.addEventListener("load", function () {
      document.querySelectorAll(".init-swiper").forEach(function (e) {
        var t = JSON.parse(e.querySelector(".swiper-config").innerHTML.trim());
        e.classList.contains("swiper-tab")
          ? initSwiperWithCustomPagination(e, t)
          : new Swiper(e, t);
      });
    });
})();
